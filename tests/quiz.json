{
  "apifoxCli": "1.1.0",
  "item": [
    {
      "item": [
        {
          "id": "b9c1c215-9c76-45b3-a9ce-aad50fcec7e8",
          "name": "LG0101 账号密码登录(登录用户admin)",
          "request": {
            "url": {
              "protocol": "http",
              "port": "8000",
              "path": [
                "login"
              ],
              "host": [
                "127",
                "0",
                "0",
                "1"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "token",
                "value": "{{token}}"
              },
              {
                "key": "User-Agent",
                "value": "apifox/1.0.0 (https://www.apifox.cn)"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\r\n    \"username\": \"admin\",\r\n    \"password\": \"testtest123\"\r\n}"
            },
            "type": "http"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "postProcessors.0.extractor",
                "type": "text/javascript",
                "exec": [
                  "",
                  "      try{",
                  "        ",
                  "          const expression = pm.variables.replaceIn(`$.token`);",
                  "          const JSONPath = require('jsonpath-plus').JSONPath;",
                  "          const jsonData = pm.response.json();",
                  "          let value = JSONPath({",
                  "            json: jsonData,",
                  "            path: expression,",
                  "            wrap: false",
                  "          });",
                  "          ",
                  "        ",
                  "        switch (typeof value) {",
                  "          case 'object':",
                  "            value = JSON.stringify(value);",
                  "            break;",
                  "          default:",
                  "            value = String(value);",
                  "            break;",
                  "        }",
                  "      ",
                  "        pm.environment.set(`token`, value);console.log('已设置环境变量【'+ `token` + '】，值为【' + value + '】')",
                  "      } catch(e) {",
                  "        e.message = '提取变量【token】出错：' + e.message;",
                  "        throw e;",
                  "      }",
                  "  "
                ]
              }
            }
          ],
          "responseDefinition": {
            "jsonSchema": {
              "type": "object",
              "properties": {
                "token": {
                  "type": "string",
                  "mock": {
                    "mock": "@string"
                  },
                  "title": "权"
                },
                "id": {
                  "type": "integer",
                  "title": "用户id"
                }
              },
              "required": [
                "token",
                "id"
              ]
            },
            "defaultEnable": true,
            "id": 4183271,
            "name": "成功",
            "apiDetailId": 5318056,
            "projectId": 0,
            "code": 200,
            "contentType": "json",
            "ordering": 1,
            "createdAt": "2021-07-29T14:43:37.000Z",
            "updatedAt": "2021-08-12T16:27:18.000Z",
            "deletedAt": null
          },
          "metaInfo": {
            "httpApiId": 5318056,
            "httpApiCaseId": 32697822,
            "httpApiName": "LG0101 账号密码登录",
            "httpApiPath": "/login",
            "httpApiMethod": "post",
            "httpApiCaseName": "登录用户admin"
          },
          "type": "http",
          "protocolProfileBehavior": {
            "disableUrlEncoding": false
          }
        },
        {
          "id": "dbf5820c-1ea3-4892-8972-cc6d3ff88ff4",
          "name": "QZ0201 搜索测试题(QZ0201 搜索测试题)",
          "request": {
            "url": {
              "protocol": "http",
              "port": "8000",
              "path": [
                "quizzes"
              ],
              "host": [
                "127",
                "0",
                "0",
                "1"
              ],
              "query": [
                {
                  "key": "keywords",
                  "value": ""
                }
              ],
              "variable": []
            },
            "header": [
              {
                "key": "token",
                "value": "{{token}}"
              },
              {
                "key": "User-Agent",
                "value": "apifox/1.0.0 (https://www.apifox.cn)"
              }
            ],
            "method": "GET",
            "body": {},
            "type": "http"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "postProcessors.0.extractor",
                "type": "text/javascript",
                "exec": [
                  "",
                  "      try{",
                  "        ",
                  "          const expression = pm.variables.replaceIn(`$.result.length`);",
                  "          const JSONPath = require('jsonpath-plus').JSONPath;",
                  "          const jsonData = pm.response.json();",
                  "          let value = JSONPath({",
                  "            json: jsonData,",
                  "            path: expression,",
                  "            wrap: false",
                  "          });",
                  "          ",
                  "        ",
                  "        switch (typeof value) {",
                  "          case 'object':",
                  "            value = JSON.stringify(value);",
                  "            break;",
                  "          default:",
                  "            value = String(value);",
                  "            break;",
                  "        }",
                  "      ",
                  "        pm.environment.set(`num_pre`, value);console.log('已设置环境变量【'+ `num_pre` + '】，值为【' + value + '】')",
                  "      } catch(e) {",
                  "        e.message = '提取变量【num_pre】出错：' + e.message;",
                  "        throw e;",
                  "      }",
                  "  "
                ]
              }
            }
          ],
          "responseDefinition": {
            "jsonSchema": {
              "type": "object",
              "properties": {
                "result": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/13080595"
                  }
                }
              },
              "x-apifox-orders": [
                "result"
              ],
              "required": [
                "result"
              ]
            },
            "defaultEnable": true,
            "id": 70049266,
            "name": "成功",
            "apiDetailId": 29663288,
            "projectId": 0,
            "code": 200,
            "contentType": "json",
            "ordering": 1,
            "createdAt": "2022-07-15T11:28:36.000Z",
            "updatedAt": "2022-07-15T11:29:54.000Z",
            "deletedAt": null
          },
          "metaInfo": {
            "httpApiId": 29663288,
            "httpApiCaseId": 37835120,
            "httpApiName": "QZ0201 搜索测试题",
            "httpApiPath": "/quizzes",
            "httpApiMethod": "get",
            "httpApiCaseName": "QZ0201 搜索测试题"
          },
          "type": "http",
          "protocolProfileBehavior": {
            "disableUrlEncoding": false
          }
        },
        {
          "id": "11a454ff-c91f-4a1f-b5f3-dc1badb2c9f7",
          "name": "QZ0102 增加单个测试(QZ0102 增加单个测试)",
          "request": {
            "url": {
              "protocol": "http",
              "port": "8000",
              "path": [
                "quizzes"
              ],
              "host": [
                "127",
                "0",
                "0",
                "1"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "token",
                "value": "{{token}}"
              },
              {
                "key": "User-Agent",
                "value": "apifox/1.0.0 (https://www.apifox.cn)"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"question\": \"和半关八\",\n    \"options\": [\n        \"或级意着再二学们声张不样民或。\",\n        \"层儿拉进它道色万各多动导京。\"\n    ],\n    \"answer\": 3,\n    \"explanation\": \"全制思报这党交动备第音求和。精家般线除厂此车广共前机写八。县认头间题快次级九主马毛高华后。青革是位复更老位据真得东。\"\n}"
            },
            "type": "http"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "postProcessors.0.assertion",
                "type": "text/javascript",
                "exec": [
                  "pm.test(pm.variables.replaceIn(`Quiz添加结果检查`), function() {",
                  "        ",
                  "          const expression = pm.variables.replaceIn(`$`);",
                  "          const JSONPath = require('jsonpath-plus').JSONPath;",
                  "          let jsonData;",
                  "          try {",
                  "            jsonData = pm.response.json();",
                  "          } catch(e) {",
                  "            let text = pm.response.text();",
                  "            // xml 转 json",
                  "            const xml2js = require('xml2js');",
                  "            text = text.replace(/^[^<]*/, '').replace(/[^>]*$/, '');",
                  "            let json;",
                  "            let xmlParseOptions = {",
                  "                explicitArray: false,",
                  "                trim: true,",
                  "                ignoreAttrs: true,",
                  "            };",
                  "            xml2js.parseString(text, xmlParseOptions, function (_, result) {",
                  "                jsonData = result;",
                  "            });",
                  "          }",
                  "          const value = JSONPath({",
                  "            json: jsonData,",
                  "            path: expression,",
                  "            wrap: false",
                  "          });",
                  "          ",
                  "        ",
                  "        pm.expectWithKey({key:'$',value:value}).to.exist",
                  "      });"
                ]
              }
            }
          ],
          "responseDefinition": {
            "jsonSchema": {
              "x-apifox-overrides": {},
              "type": "object",
              "x-apifox-refs": {},
              "properties": {
                "quiz": {
                  "$ref": "#/definitions/13080595",
                  "x-apifox-overrides": {}
                }
              },
              "required": [
                "quiz"
              ],
              "x-apifox-orders": [
                "quiz"
              ]
            },
            "defaultEnable": true,
            "id": 70048663,
            "name": "成功",
            "apiDetailId": 29662986,
            "projectId": 0,
            "code": 200,
            "contentType": "json",
            "ordering": 1,
            "createdAt": "2022-07-15T11:22:03.000Z",
            "updatedAt": "2022-07-23T08:30:31.000Z",
            "deletedAt": null
          },
          "metaInfo": {
            "httpApiId": 29662986,
            "httpApiCaseId": 34623800,
            "httpApiName": "QZ0102 增加单个测试",
            "httpApiPath": "/quizzes",
            "httpApiMethod": "post",
            "httpApiCaseName": "QZ0102 增加单个测试"
          },
          "type": "http",
          "protocolProfileBehavior": {
            "disableUrlEncoding": false
          }
        },
        {
          "id": "238a52a1-cc13-4c02-97d2-2790a11a5a90",
          "name": "QZ0201 搜索测试题(QZ0201 搜索测试题)",
          "request": {
            "url": {
              "protocol": "http",
              "port": "8000",
              "path": [
                "quizzes"
              ],
              "host": [
                "127",
                "0",
                "0",
                "1"
              ],
              "query": [
                {
                  "key": "keywords",
                  "value": ""
                }
              ],
              "variable": []
            },
            "header": [
              {
                "key": "token",
                "value": "{{token}}"
              },
              {
                "key": "User-Agent",
                "value": "apifox/1.0.0 (https://www.apifox.cn)"
              }
            ],
            "method": "GET",
            "body": {},
            "type": "http"
          },
          "response": [],
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "id": "commonScript.assertion",
                "type": "text/javascript",
                "exec": [
                  "",
                  " ____string2Number = function(value, errorMsg) {",
                  "  if(typeof value !== 'string'){",
                  "    return value;",
                  "  }",
                  "  // 转换成数字类型后比较",
                  "  if (/^\\-?\\d+$/.test(value)) {",
                  "      return parseInt(value);",
                  "  } else if (/^\\-?\\d+\\.\\d+$/.test(value)) {",
                  "      return parseFloat(value);",
                  "  } else {",
                  "      throw new Error(errorMsg || '数据类型不匹配')",
                  "  }",
                  "}",
                  "",
                  " ____formatValues = function(value, stringCompareValue, comparison) {",
                  "  try{",
                  "    const isNumberComparisons = ['isBelow', 'isAtMost', 'isAbove', 'isAtLeast'].includes(comparison);",
                  "    let compareValue;",
                  "    switch (typeof value) {",
                  "        case 'string':",
                  "            if (isNumberComparisons) {",
                  "                value = ____string2Number(value);",
                  "                compareValue = ____string2Number(stringCompareValue);",
                  "            } else {",
                  "                compareValue = stringCompareValue;",
                  "            }",
                  "            break;",
                  "        case 'object':",
                  "            if (isNumberComparisons) {",
                  "                throw new Error('object 类型的值不能使用 ' + comparison + ' 方式比较')",
                  "            }",
                  "            try {",
                  "                compareValue = JSON.parse(stringCompareValue);",
                  "            } catch (e) {",
                  "                compareValue = stringCompareValue;",
                  "            }",
                  "            break;",
                  "        case 'boolean':",
                  "            if (isNumberComparisons) {",
                  "                throw new Error('boolean 类型的值不能使用 ' + comparison + ' 方式比较')",
                  "            }",
                  "            compareValue = stringCompareValue === 'true' ? true : (stringCompareValue === 'false' ? false : stringCompareValue);",
                  "            break;",
                  "        case 'number':",
                  "            if (isNumberComparisons) {",
                  "              compareValue = ____string2Number(stringCompareValue);",
                  "            } else {",
                  "              compareValue = stringCompareValue;",
                  "              value = '' + value;",
                  "            }",
                  "            break;",
                  "        case 'null':",
                  "            if (isNumberComparisons) {",
                  "                throw new Error('null 值不能使用 ' + comparison + ' 方式比较')",
                  "            }",
                  "            compareValue = stringCompareValue === 'null' ? null : stringCompareValue;",
                  "            break;",
                  "        default:",
                  "            compareValue = stringCompareValue;",
                  "            break;",
                  "    }",
                  "    return { compareValue, value };",
                  "  } catch(e) {",
                  "    console.log(e);",
                  "    throw e;",
                  "  }",
                  "}",
                  ""
                ]
              }
            },
            {
              "listen": "test",
              "script": {
                "id": "postProcessors.0.extractor",
                "type": "text/javascript",
                "exec": [
                  "",
                  "      try{",
                  "        ",
                  "          const expression = pm.variables.replaceIn(`$.result.length`);",
                  "          const JSONPath = require('jsonpath-plus').JSONPath;",
                  "          const jsonData = pm.response.json();",
                  "          let value = JSONPath({",
                  "            json: jsonData,",
                  "            path: expression,",
                  "            wrap: false",
                  "          });",
                  "          ",
                  "        ",
                  "        switch (typeof value) {",
                  "          case 'object':",
                  "            value = JSON.stringify(value);",
                  "            break;",
                  "          default:",
                  "            value = String(value);",
                  "            break;",
                  "        }",
                  "      ",
                  "        pm.environment.set(`num_later`, value);console.log('已设置环境变量【'+ `num_later` + '】，值为【' + value + '】')",
                  "      } catch(e) {",
                  "        e.message = '提取变量【num_later】出错：' + e.message;",
                  "        throw e;",
                  "      }",
                  "  "
                ]
              }
            },
            {
              "listen": "test",
              "script": {
                "id": "postProcessors.1.customScript",
                "type": "text/javascript",
                "exec": [
                  "var num_pre = Number(pm.environment.get('num_pre'));",
                  "",
                  "pm.environment.set('num_pre', Number(num_pre)+1);"
                ]
              }
            },
            {
              "listen": "test",
              "script": {
                "id": "postProcessors.2.assertion",
                "type": "text/javascript",
                "exec": [
                  "pm.test(pm.variables.replaceIn(`quiz数量校验`), function() {",
                  "        ",
                  "          const expression = pm.variables.replaceIn(`num_pre`);",
                  "          const value = pm.environment.get(expression)",
                  "      ",
                  "        const formattedValues = ____formatValues(value, pm.variables.replaceIn(`{{num_later}}`), 'equal');",
                  "        pm.expect(formattedValues.value).to.eql(formattedValues.compareValue);",
                  "      });"
                ]
              }
            }
          ],
          "responseDefinition": {
            "jsonSchema": {
              "type": "object",
              "properties": {
                "result": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/13080595"
                  }
                }
              },
              "x-apifox-orders": [
                "result"
              ],
              "required": [
                "result"
              ]
            },
            "defaultEnable": true,
            "id": 70049266,
            "name": "成功",
            "apiDetailId": 29663288,
            "projectId": 0,
            "code": 200,
            "contentType": "json",
            "ordering": 1,
            "createdAt": "2022-07-15T11:28:36.000Z",
            "updatedAt": "2022-07-15T11:29:54.000Z",
            "deletedAt": null
          },
          "metaInfo": {
            "httpApiId": 29663288,
            "httpApiCaseId": 37842102,
            "httpApiName": "QZ0201 搜索测试题",
            "httpApiPath": "/quizzes",
            "httpApiMethod": "get",
            "httpApiCaseName": "QZ0201 搜索测试题"
          },
          "type": "http",
          "protocolProfileBehavior": {
            "disableUrlEncoding": false
          }
        },
        {
          "id": "1ea5e39f-148a-4be6-9b82-6371fec18ca5",
          "name": "QZ0101 获取单个测试(QZ0101 获取单个测试)",
          "request": {
            "url": {
              "protocol": "http",
              "port": "8000",
              "path": [
                "quizzes",
                "1"
              ],
              "host": [
                "127",
                "0",
                "0",
                "1"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "token",
                "value": "{{token}}"
              },
              {
                "key": "User-Agent",
                "value": "apifox/1.0.0 (https://www.apifox.cn)"
              }
            ],
            "method": "GET",
            "body": {},
            "type": "http"
          },
          "response": [],
          "event": [],
          "responseDefinition": {
            "jsonSchema": {
              "type": "object",
              "properties": {}
            },
            "defaultEnable": false,
            "id": 69812670,
            "name": "不存在",
            "apiDetailId": 0,
            "projectId": 404238,
            "code": 404,
            "contentType": "json",
            "ordering": 30,
            "createdAt": "2022-07-15T06:52:36.000Z",
            "updatedAt": "2022-07-15T06:52:36.000Z",
            "deletedAt": null
          },
          "metaInfo": {
            "httpApiId": 29662407,
            "httpApiCaseId": 34623801,
            "httpApiName": "QZ0101 获取单个测试",
            "httpApiPath": "/quizzes/{id}",
            "httpApiMethod": "get",
            "httpApiCaseName": "QZ0101 获取单个测试"
          },
          "type": "http",
          "protocolProfileBehavior": {
            "disableUrlEncoding": false
          }
        },
        {
          "id": "dc6dc042-86e2-4576-b21c-b715d9aa5534",
          "name": "QZ0105审核测试题(QZ0105审核测试题)",
          "request": {
            "url": {
              "protocol": "http",
              "port": "8000",
              "path": [
                "quizzes",
                "1",
                "visibility"
              ],
              "host": [
                "127",
                "0",
                "0",
                "1"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "token",
                "value": "{{token}}"
              },
              {
                "key": "User-Agent",
                "value": "apifox/1.0.0 (https://www.apifox.cn)"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "PUT",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"result\": true,\n    \"reason\": \"quis\"\n}"
            },
            "type": "http"
          },
          "response": [],
          "event": [],
          "responseDefinition": {
            "jsonSchema": {
              "type": "object",
              "properties": {}
            },
            "defaultEnable": true,
            "id": 106182475,
            "name": "成功",
            "apiDetailId": 42646298,
            "projectId": 0,
            "code": 200,
            "contentType": "json",
            "ordering": 1,
            "createdAt": "2022-10-06T08:43:19.000Z",
            "updatedAt": "2022-10-06T08:43:19.000Z",
            "deletedAt": null
          },
          "metaInfo": {
            "httpApiId": 42646298,
            "httpApiCaseId": 49776817,
            "httpApiName": "QZ0105审核测试题",
            "httpApiPath": "/quizzes/{id}/visibility",
            "httpApiMethod": "put",
            "httpApiCaseName": "QZ0105审核测试题"
          },
          "type": "http",
          "protocolProfileBehavior": {
            "disableUrlEncoding": false
          }
        },
        {
          "id": "08f40aac-cb65-4724-829a-1db0461098bb",
          "name": "QZ0101 获取单个测试(QZ0101 获取单个测试)",
          "request": {
            "url": {
              "protocol": "http",
              "port": "8000",
              "path": [
                "quizzes",
                "1"
              ],
              "host": [
                "127",
                "0",
                "0",
                "1"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "token",
                "value": "{{token}}"
              },
              {
                "key": "User-Agent",
                "value": "apifox/1.0.0 (https://www.apifox.cn)"
              }
            ],
            "method": "GET",
            "body": {},
            "type": "http"
          },
          "response": [],
          "event": [],
          "responseDefinition": {
            "jsonSchema": {
              "x-apifox-overrides": {},
              "type": "object",
              "properties": {
                "quiz": {
                  "$ref": "#/definitions/13080595",
                  "x-apifox-overrides": {}
                }
              },
              "x-apifox-refs": {},
              "x-apifox-orders": [
                "quiz"
              ],
              "required": [
                "quiz"
              ]
            },
            "defaultEnable": true,
            "id": 70047710,
            "name": "成功",
            "apiDetailId": 29662407,
            "projectId": 0,
            "code": 200,
            "contentType": "json",
            "ordering": 1,
            "createdAt": "2022-07-15T11:04:02.000Z",
            "updatedAt": "2022-07-23T07:28:13.000Z",
            "deletedAt": null
          },
          "metaInfo": {
            "httpApiId": 29662407,
            "httpApiCaseId": 49776823,
            "httpApiName": "QZ0101 获取单个测试",
            "httpApiPath": "/quizzes/{id}",
            "httpApiMethod": "get",
            "httpApiCaseName": "QZ0101 获取单个测试"
          },
          "type": "http",
          "protocolProfileBehavior": {
            "disableUrlEncoding": false
          }
        },
        {
          "id": "8f8a7ee7-cd50-4b97-9a76-b505056de462",
          "name": "QZ0103 修改单个测试(QZ0103 修改单个测试)",
          "request": {
            "url": {
              "protocol": "http",
              "port": "8000",
              "path": [
                "quizzes",
                "1"
              ],
              "host": [
                "127",
                "0",
                "0",
                "1"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "token",
                "value": "{{token}}"
              },
              {
                "key": "User-Agent",
                "value": "apifox/1.0.0 (https://www.apifox.cn)"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "PUT",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"quiz\": {\n        \"question\": \"石农来\",\n        \"options\": [\n            \"史经口土农北阶办非安说声从西。\",\n            \"青国十接持划标眼此今色事品行必示组接。\",\n            \"都完队术王军活易置义切并万。\",\n            \"带越候着义相可中量加下周极能要且他。\",\n            \"成强为三清方制条面化运天值美划心那。\"\n        ],\n        \"answer\": 55,\n        \"explanation\": \"不是该斗即么布北王空放果。第导展七意术权且还都音目该广色它。命手成论具重话除置书毛都。八五少外在表快光色率我路。电层济量精由知性员认治了要需众多形。决须达极格着力第院克准委等委界直习。确划给年才加派由务流历无红被半意因。\"\n    }\n}"
            },
            "type": "http"
          },
          "response": [],
          "event": [],
          "responseDefinition": {
            "jsonSchema": {
              "type": "object",
              "properties": {
                "quiz": {
                  "$ref": "#/definitions/13080595",
                  "x-apifox-overrides": {}
                }
              },
              "x-apifox-orders": [
                "quiz"
              ],
              "required": [
                "quiz"
              ]
            },
            "defaultEnable": true,
            "id": 70048846,
            "name": "成功",
            "apiDetailId": 29663120,
            "projectId": 0,
            "code": 200,
            "contentType": "json",
            "ordering": 1,
            "createdAt": "2022-07-15T11:23:50.000Z",
            "updatedAt": "2022-07-23T08:32:09.000Z",
            "deletedAt": null
          },
          "metaInfo": {
            "httpApiId": 29663120,
            "httpApiCaseId": 34623802,
            "httpApiName": "QZ0103 修改单个测试",
            "httpApiPath": "/quizzes/{id}",
            "httpApiMethod": "put",
            "httpApiCaseName": "QZ0103 修改单个测试"
          },
          "type": "http",
          "protocolProfileBehavior": {
            "disableUrlEncoding": false
          }
        },
        {
          "id": "462e40ad-bc28-4087-89a7-6b5da2c04654",
          "name": "QZ0101 获取单个测试(QZ0101 获取单个测试)",
          "request": {
            "url": {
              "protocol": "http",
              "port": "8000",
              "path": [
                "quizzes",
                "1"
              ],
              "host": [
                "127",
                "0",
                "0",
                "1"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "token",
                "value": "{{token}}"
              },
              {
                "key": "User-Agent",
                "value": "apifox/1.0.0 (https://www.apifox.cn)"
              }
            ],
            "method": "GET",
            "body": {},
            "type": "http"
          },
          "response": [],
          "event": [],
          "responseDefinition": {
            "jsonSchema": {
              "type": "object",
              "properties": {}
            },
            "defaultEnable": false,
            "id": 69812670,
            "name": "不存在",
            "apiDetailId": 0,
            "projectId": 404238,
            "code": 404,
            "contentType": "json",
            "ordering": 30,
            "createdAt": "2022-07-15T06:52:36.000Z",
            "updatedAt": "2022-07-15T06:52:36.000Z",
            "deletedAt": null
          },
          "metaInfo": {
            "httpApiId": 29662407,
            "httpApiCaseId": 38220543,
            "httpApiName": "QZ0101 获取单个测试",
            "httpApiPath": "/quizzes/{id}",
            "httpApiMethod": "get",
            "httpApiCaseName": "QZ0101 获取单个测试"
          },
          "type": "http",
          "protocolProfileBehavior": {
            "disableUrlEncoding": false
          }
        },
        {
          "id": "13fb854a-94c3-4e04-bf82-3b2dede20f22",
          "name": "QZ0105审核测试题(QZ0105审核测试题)",
          "request": {
            "url": {
              "protocol": "http",
              "port": "8000",
              "path": [
                "quizzes",
                "1",
                "visibility"
              ],
              "host": [
                "127",
                "0",
                "0",
                "1"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "token",
                "value": "{{token}}"
              },
              {
                "key": "User-Agent",
                "value": "apifox/1.0.0 (https://www.apifox.cn)"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "PUT",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"result\": true,\n    \"reason\": \"quis\"\n}"
            },
            "type": "http"
          },
          "response": [],
          "event": [],
          "responseDefinition": {
            "jsonSchema": {
              "type": "object",
              "properties": {}
            },
            "defaultEnable": true,
            "id": 106182475,
            "name": "成功",
            "apiDetailId": 42646298,
            "projectId": 0,
            "code": 200,
            "contentType": "json",
            "ordering": 1,
            "createdAt": "2022-10-06T08:43:19.000Z",
            "updatedAt": "2022-10-06T08:43:19.000Z",
            "deletedAt": null
          },
          "metaInfo": {
            "httpApiId": 42646298,
            "httpApiCaseId": 49783829,
            "httpApiName": "QZ0105审核测试题",
            "httpApiPath": "/quizzes/{id}/visibility",
            "httpApiMethod": "put",
            "httpApiCaseName": "QZ0105审核测试题"
          },
          "type": "http",
          "protocolProfileBehavior": {
            "disableUrlEncoding": false
          }
        },
        {
          "id": "83e9a614-47c5-4fb0-91f4-1873eb277c01",
          "name": "QZ0101 获取单个测试(QZ0101 获取单个测试)",
          "request": {
            "url": {
              "protocol": "http",
              "port": "8000",
              "path": [
                "quizzes",
                "1"
              ],
              "host": [
                "127",
                "0",
                "0",
                "1"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "token",
                "value": "{{token}}"
              },
              {
                "key": "User-Agent",
                "value": "apifox/1.0.0 (https://www.apifox.cn)"
              }
            ],
            "method": "GET",
            "body": {},
            "type": "http"
          },
          "response": [],
          "event": [],
          "responseDefinition": {
            "jsonSchema": {
              "x-apifox-overrides": {},
              "type": "object",
              "properties": {
                "quiz": {
                  "$ref": "#/definitions/13080595",
                  "x-apifox-overrides": {}
                }
              },
              "x-apifox-refs": {},
              "x-apifox-orders": [
                "quiz"
              ],
              "required": [
                "quiz"
              ]
            },
            "defaultEnable": true,
            "id": 70047710,
            "name": "成功",
            "apiDetailId": 29662407,
            "projectId": 0,
            "code": 200,
            "contentType": "json",
            "ordering": 1,
            "createdAt": "2022-07-15T11:04:02.000Z",
            "updatedAt": "2022-07-23T07:28:13.000Z",
            "deletedAt": null
          },
          "metaInfo": {
            "httpApiId": 29662407,
            "httpApiCaseId": 49783812,
            "httpApiName": "QZ0101 获取单个测试",
            "httpApiPath": "/quizzes/{id}",
            "httpApiMethod": "get",
            "httpApiCaseName": "QZ0101 获取单个测试"
          },
          "type": "http",
          "protocolProfileBehavior": {
            "disableUrlEncoding": false
          }
        },
        {
          "id": "b15de340-2c83-4163-b921-2960b226b522",
          "name": "QZ0104 删除单个测试(QZ0104 删除单个测试)",
          "request": {
            "url": {
              "protocol": "http",
              "port": "8000",
              "path": [
                "quizzes",
                "1"
              ],
              "host": [
                "127",
                "0",
                "0",
                "1"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "token",
                "value": "{{token}}"
              },
              {
                "key": "User-Agent",
                "value": "apifox/1.0.0 (https://www.apifox.cn)"
              }
            ],
            "method": "DELETE",
            "body": {},
            "type": "http"
          },
          "response": [],
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "id": "commonScript.assertion",
                "type": "text/javascript",
                "exec": [
                  "",
                  " ____string2Number = function(value, errorMsg) {",
                  "  if(typeof value !== 'string'){",
                  "    return value;",
                  "  }",
                  "  // 转换成数字类型后比较",
                  "  if (/^\\-?\\d+$/.test(value)) {",
                  "      return parseInt(value);",
                  "  } else if (/^\\-?\\d+\\.\\d+$/.test(value)) {",
                  "      return parseFloat(value);",
                  "  } else {",
                  "      throw new Error(errorMsg || '数据类型不匹配')",
                  "  }",
                  "}",
                  "",
                  " ____formatValues = function(value, stringCompareValue, comparison) {",
                  "  try{",
                  "    const isNumberComparisons = ['isBelow', 'isAtMost', 'isAbove', 'isAtLeast'].includes(comparison);",
                  "    let compareValue;",
                  "    switch (typeof value) {",
                  "        case 'string':",
                  "            if (isNumberComparisons) {",
                  "                value = ____string2Number(value);",
                  "                compareValue = ____string2Number(stringCompareValue);",
                  "            } else {",
                  "                compareValue = stringCompareValue;",
                  "            }",
                  "            break;",
                  "        case 'object':",
                  "            if (isNumberComparisons) {",
                  "                throw new Error('object 类型的值不能使用 ' + comparison + ' 方式比较')",
                  "            }",
                  "            try {",
                  "                compareValue = JSON.parse(stringCompareValue);",
                  "            } catch (e) {",
                  "                compareValue = stringCompareValue;",
                  "            }",
                  "            break;",
                  "        case 'boolean':",
                  "            if (isNumberComparisons) {",
                  "                throw new Error('boolean 类型的值不能使用 ' + comparison + ' 方式比较')",
                  "            }",
                  "            compareValue = stringCompareValue === 'true' ? true : (stringCompareValue === 'false' ? false : stringCompareValue);",
                  "            break;",
                  "        case 'number':",
                  "            if (isNumberComparisons) {",
                  "              compareValue = ____string2Number(stringCompareValue);",
                  "            } else {",
                  "              compareValue = stringCompareValue;",
                  "              value = '' + value;",
                  "            }",
                  "            break;",
                  "        case 'null':",
                  "            if (isNumberComparisons) {",
                  "                throw new Error('null 值不能使用 ' + comparison + ' 方式比较')",
                  "            }",
                  "            compareValue = stringCompareValue === 'null' ? null : stringCompareValue;",
                  "            break;",
                  "        default:",
                  "            compareValue = stringCompareValue;",
                  "            break;",
                  "    }",
                  "    return { compareValue, value };",
                  "  } catch(e) {",
                  "    console.log(e);",
                  "    throw e;",
                  "  }",
                  "}",
                  ""
                ]
              }
            },
            {
              "listen": "test",
              "script": {
                "id": "postProcessors.0.assertion",
                "type": "text/javascript",
                "exec": [
                  "pm.test(pm.variables.replaceIn(`Quiz删除校验`), function() {",
                  "        ",
                  "          const expression = pm.variables.replaceIn(`$`);",
                  "          const JSONPath = require('jsonpath-plus').JSONPath;",
                  "          let jsonData;",
                  "          try {",
                  "            jsonData = pm.response.json();",
                  "          } catch(e) {",
                  "            let text = pm.response.text();",
                  "            // xml 转 json",
                  "            const xml2js = require('xml2js');",
                  "            text = text.replace(/^[^<]*/, '').replace(/[^>]*$/, '');",
                  "            let json;",
                  "            let xmlParseOptions = {",
                  "                explicitArray: false,",
                  "                trim: true,",
                  "                ignoreAttrs: true,",
                  "            };",
                  "            xml2js.parseString(text, xmlParseOptions, function (_, result) {",
                  "                jsonData = result;",
                  "            });",
                  "          }",
                  "          const value = JSONPath({",
                  "            json: jsonData,",
                  "            path: expression,",
                  "            wrap: false",
                  "          });",
                  "          ",
                  "        const formattedValues = ____formatValues(value, pm.variables.replaceIn(`{}`), 'equal');",
                  "        pm.expect(formattedValues.value).to.eql(formattedValues.compareValue);",
                  "      });"
                ]
              }
            }
          ],
          "responseDefinition": {
            "jsonSchema": {
              "type": "object",
              "properties": {}
            },
            "defaultEnable": true,
            "id": 70048940,
            "name": "成功",
            "apiDetailId": 29663170,
            "projectId": 0,
            "code": 200,
            "contentType": "json",
            "ordering": 1,
            "createdAt": "2022-07-15T11:25:39.000Z",
            "updatedAt": "2022-07-15T11:25:39.000Z",
            "deletedAt": null
          },
          "metaInfo": {
            "httpApiId": 29663170,
            "httpApiCaseId": 34623803,
            "httpApiName": "QZ0104 删除单个测试",
            "httpApiPath": "/quizzes/{id}",
            "httpApiMethod": "delete",
            "httpApiCaseName": "QZ0104 删除单个测试"
          },
          "type": "http",
          "protocolProfileBehavior": {
            "disableUrlEncoding": false
          }
        },
        {
          "id": "3ade543a-7417-4193-a50b-1999dbd5bb47",
          "name": "QZ0201 搜索测试题(QZ0201 搜索测试题)",
          "request": {
            "url": {
              "protocol": "http",
              "port": "8000",
              "path": [
                "quizzes"
              ],
              "host": [
                "127",
                "0",
                "0",
                "1"
              ],
              "query": [
                {
                  "key": "keywords",
                  "value": ""
                }
              ],
              "variable": []
            },
            "header": [
              {
                "key": "token",
                "value": "{{token}}"
              },
              {
                "key": "User-Agent",
                "value": "apifox/1.0.0 (https://www.apifox.cn)"
              }
            ],
            "method": "GET",
            "body": {},
            "type": "http"
          },
          "response": [],
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "id": "commonScript.assertion",
                "type": "text/javascript",
                "exec": [
                  "",
                  " ____string2Number = function(value, errorMsg) {",
                  "  if(typeof value !== 'string'){",
                  "    return value;",
                  "  }",
                  "  // 转换成数字类型后比较",
                  "  if (/^\\-?\\d+$/.test(value)) {",
                  "      return parseInt(value);",
                  "  } else if (/^\\-?\\d+\\.\\d+$/.test(value)) {",
                  "      return parseFloat(value);",
                  "  } else {",
                  "      throw new Error(errorMsg || '数据类型不匹配')",
                  "  }",
                  "}",
                  "",
                  " ____formatValues = function(value, stringCompareValue, comparison) {",
                  "  try{",
                  "    const isNumberComparisons = ['isBelow', 'isAtMost', 'isAbove', 'isAtLeast'].includes(comparison);",
                  "    let compareValue;",
                  "    switch (typeof value) {",
                  "        case 'string':",
                  "            if (isNumberComparisons) {",
                  "                value = ____string2Number(value);",
                  "                compareValue = ____string2Number(stringCompareValue);",
                  "            } else {",
                  "                compareValue = stringCompareValue;",
                  "            }",
                  "            break;",
                  "        case 'object':",
                  "            if (isNumberComparisons) {",
                  "                throw new Error('object 类型的值不能使用 ' + comparison + ' 方式比较')",
                  "            }",
                  "            try {",
                  "                compareValue = JSON.parse(stringCompareValue);",
                  "            } catch (e) {",
                  "                compareValue = stringCompareValue;",
                  "            }",
                  "            break;",
                  "        case 'boolean':",
                  "            if (isNumberComparisons) {",
                  "                throw new Error('boolean 类型的值不能使用 ' + comparison + ' 方式比较')",
                  "            }",
                  "            compareValue = stringCompareValue === 'true' ? true : (stringCompareValue === 'false' ? false : stringCompareValue);",
                  "            break;",
                  "        case 'number':",
                  "            if (isNumberComparisons) {",
                  "              compareValue = ____string2Number(stringCompareValue);",
                  "            } else {",
                  "              compareValue = stringCompareValue;",
                  "              value = '' + value;",
                  "            }",
                  "            break;",
                  "        case 'null':",
                  "            if (isNumberComparisons) {",
                  "                throw new Error('null 值不能使用 ' + comparison + ' 方式比较')",
                  "            }",
                  "            compareValue = stringCompareValue === 'null' ? null : stringCompareValue;",
                  "            break;",
                  "        default:",
                  "            compareValue = stringCompareValue;",
                  "            break;",
                  "    }",
                  "    return { compareValue, value };",
                  "  } catch(e) {",
                  "    console.log(e);",
                  "    throw e;",
                  "  }",
                  "}",
                  ""
                ]
              }
            },
            {
              "listen": "test",
              "script": {
                "id": "postProcessors.0.extractor",
                "type": "text/javascript",
                "exec": [
                  "",
                  "      try{",
                  "        ",
                  "          const expression = pm.variables.replaceIn(`$.result.length`);",
                  "          const JSONPath = require('jsonpath-plus').JSONPath;",
                  "          const jsonData = pm.response.json();",
                  "          let value = JSONPath({",
                  "            json: jsonData,",
                  "            path: expression,",
                  "            wrap: false",
                  "          });",
                  "          ",
                  "        ",
                  "        switch (typeof value) {",
                  "          case 'object':",
                  "            value = JSON.stringify(value);",
                  "            break;",
                  "          default:",
                  "            value = String(value);",
                  "            break;",
                  "        }",
                  "      ",
                  "        pm.environment.set(`num_later`, value);console.log('已设置环境变量【'+ `num_later` + '】，值为【' + value + '】')",
                  "      } catch(e) {",
                  "        e.message = '提取变量【num_later】出错：' + e.message;",
                  "        throw e;",
                  "      }",
                  "  "
                ]
              }
            },
            {
              "listen": "test",
              "script": {
                "id": "postProcessors.1.customScript",
                "type": "text/javascript",
                "exec": [
                  "var num_pre = Number(pm.environment.get('num_pre'));",
                  "",
                  "pm.environment.set('num_pre', Number(num_pre)-1);"
                ]
              }
            },
            {
              "listen": "test",
              "script": {
                "id": "postProcessors.2.assertion",
                "type": "text/javascript",
                "exec": [
                  "pm.test(pm.variables.replaceIn(`quiz数量校验`), function() {",
                  "        ",
                  "          const expression = pm.variables.replaceIn(`num_pre`);",
                  "          const value = pm.environment.get(expression)",
                  "      ",
                  "        const formattedValues = ____formatValues(value, pm.variables.replaceIn(`{{num_later}}`), 'equal');",
                  "        pm.expect(formattedValues.value).to.eql(formattedValues.compareValue);",
                  "      });"
                ]
              }
            }
          ],
          "responseDefinition": {
            "jsonSchema": {
              "type": "object",
              "properties": {
                "result": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/13080595"
                  }
                }
              },
              "x-apifox-orders": [
                "result"
              ],
              "required": [
                "result"
              ]
            },
            "defaultEnable": true,
            "id": 70049266,
            "name": "成功",
            "apiDetailId": 29663288,
            "projectId": 0,
            "code": 200,
            "contentType": "json",
            "ordering": 1,
            "createdAt": "2022-07-15T11:28:36.000Z",
            "updatedAt": "2022-07-15T11:29:54.000Z",
            "deletedAt": null
          },
          "metaInfo": {
            "httpApiId": 29663288,
            "httpApiCaseId": 37913169,
            "httpApiName": "QZ0201 搜索测试题",
            "httpApiPath": "/quizzes",
            "httpApiMethod": "get",
            "httpApiCaseName": "QZ0201 搜索测试题"
          },
          "type": "http",
          "protocolProfileBehavior": {
            "disableUrlEncoding": false
          }
        },
        {
          "id": "b08b8511-6590-49a6-b7cf-2b532ceaed94",
          "name": "QZ0102 增加单个测试(QZ0102 增加单个测试)",
          "request": {
            "url": {
              "protocol": "http",
              "port": "8000",
              "path": [
                "quizzes"
              ],
              "host": [
                "127",
                "0",
                "0",
                "1"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "token",
                "value": "{{token}}"
              },
              {
                "key": "User-Agent",
                "value": "apifox/1.0.0 (https://www.apifox.cn)"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"question\": \"面个发以做级\",\n    \"options\": [\n        \"精复系即分百世东由图则接门按理教。\",\n        \"干影不层反线将广存道却以三只对规加联。\",\n        \"报立新走必少备多想类民级满反。\"\n    ],\n    \"answer\": 78,\n    \"explanation\": \"因整局反这身各京天取共府花许信。少研作单自大其行然种入列接具得在。规称文但成许农者这世热维周非。切二万易由想极就界万带决科。青关图党它提众识消中意然书江化办想。\"\n}"
            },
            "type": "http"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "postProcessors.0.assertion",
                "type": "text/javascript",
                "exec": [
                  "pm.test(pm.variables.replaceIn(`Quiz添加结果检查`), function() {",
                  "        ",
                  "          const expression = pm.variables.replaceIn(`$`);",
                  "          const JSONPath = require('jsonpath-plus').JSONPath;",
                  "          let jsonData;",
                  "          try {",
                  "            jsonData = pm.response.json();",
                  "          } catch(e) {",
                  "            let text = pm.response.text();",
                  "            // xml 转 json",
                  "            const xml2js = require('xml2js');",
                  "            text = text.replace(/^[^<]*/, '').replace(/[^>]*$/, '');",
                  "            let json;",
                  "            let xmlParseOptions = {",
                  "                explicitArray: false,",
                  "                trim: true,",
                  "                ignoreAttrs: true,",
                  "            };",
                  "            xml2js.parseString(text, xmlParseOptions, function (_, result) {",
                  "                jsonData = result;",
                  "            });",
                  "          }",
                  "          const value = JSONPath({",
                  "            json: jsonData,",
                  "            path: expression,",
                  "            wrap: false",
                  "          });",
                  "          ",
                  "        ",
                  "        pm.expectWithKey({key:'$',value:value}).to.exist",
                  "      });"
                ]
              }
            }
          ],
          "responseDefinition": {
            "jsonSchema": {
              "x-apifox-overrides": {},
              "type": "object",
              "x-apifox-refs": {},
              "properties": {
                "quiz": {
                  "$ref": "#/definitions/13080595",
                  "x-apifox-overrides": {}
                }
              },
              "required": [
                "quiz"
              ],
              "x-apifox-orders": [
                "quiz"
              ]
            },
            "defaultEnable": true,
            "id": 70048663,
            "name": "成功",
            "apiDetailId": 29662986,
            "projectId": 0,
            "code": 200,
            "contentType": "json",
            "ordering": 1,
            "createdAt": "2022-07-15T11:22:03.000Z",
            "updatedAt": "2022-07-23T08:30:31.000Z",
            "deletedAt": null
          },
          "metaInfo": {
            "httpApiId": 29662986,
            "httpApiCaseId": 34623804,
            "httpApiName": "QZ0102 增加单个测试",
            "httpApiPath": "/quizzes",
            "httpApiMethod": "post",
            "httpApiCaseName": "QZ0102 增加单个测试"
          },
          "type": "http",
          "protocolProfileBehavior": {
            "disableUrlEncoding": false
          }
        },
        {
          "id": "2612a3ef-2d0d-4cc2-9d7e-54a196ddc343",
          "name": "QZ0102 增加单个测试(QZ0102 增加单个测试)",
          "request": {
            "url": {
              "protocol": "http",
              "port": "8000",
              "path": [
                "quizzes"
              ],
              "host": [
                "127",
                "0",
                "0",
                "1"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "token",
                "value": "{{token}}"
              },
              {
                "key": "User-Agent",
                "value": "apifox/1.0.0 (https://www.apifox.cn)"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"question\": \"议总龙\",\n    \"options\": [\n        \"示期第用那车后现七被感办。\"\n    ],\n    \"answer\": 3,\n    \"explanation\": \"共合提过明验金条置道治年响以称不证。三争有战例子县管真土并增。为现目数往历外有计标展识全火。\"\n}"
            },
            "type": "http"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "postProcessors.0.assertion",
                "type": "text/javascript",
                "exec": [
                  "pm.test(pm.variables.replaceIn(`Quiz添加结果检查`), function() {",
                  "        ",
                  "          const expression = pm.variables.replaceIn(`$`);",
                  "          const JSONPath = require('jsonpath-plus').JSONPath;",
                  "          let jsonData;",
                  "          try {",
                  "            jsonData = pm.response.json();",
                  "          } catch(e) {",
                  "            let text = pm.response.text();",
                  "            // xml 转 json",
                  "            const xml2js = require('xml2js');",
                  "            text = text.replace(/^[^<]*/, '').replace(/[^>]*$/, '');",
                  "            let json;",
                  "            let xmlParseOptions = {",
                  "                explicitArray: false,",
                  "                trim: true,",
                  "                ignoreAttrs: true,",
                  "            };",
                  "            xml2js.parseString(text, xmlParseOptions, function (_, result) {",
                  "                jsonData = result;",
                  "            });",
                  "          }",
                  "          const value = JSONPath({",
                  "            json: jsonData,",
                  "            path: expression,",
                  "            wrap: false",
                  "          });",
                  "          ",
                  "        ",
                  "        pm.expectWithKey({key:'$',value:value}).to.exist",
                  "      });"
                ]
              }
            }
          ],
          "responseDefinition": {
            "jsonSchema": {
              "x-apifox-overrides": {},
              "type": "object",
              "x-apifox-refs": {},
              "properties": {
                "quiz": {
                  "$ref": "#/definitions/13080595",
                  "x-apifox-overrides": {}
                }
              },
              "required": [
                "quiz"
              ],
              "x-apifox-orders": [
                "quiz"
              ]
            },
            "defaultEnable": true,
            "id": 70048663,
            "name": "成功",
            "apiDetailId": 29662986,
            "projectId": 0,
            "code": 200,
            "contentType": "json",
            "ordering": 1,
            "createdAt": "2022-07-15T11:22:03.000Z",
            "updatedAt": "2022-07-23T08:30:31.000Z",
            "deletedAt": null
          },
          "metaInfo": {
            "httpApiId": 29662986,
            "httpApiCaseId": 34623805,
            "httpApiName": "QZ0102 增加单个测试",
            "httpApiPath": "/quizzes",
            "httpApiMethod": "post",
            "httpApiCaseName": "QZ0102 增加单个测试"
          },
          "type": "http",
          "protocolProfileBehavior": {
            "disableUrlEncoding": false
          }
        },
        {
          "id": "38a7120c-fd71-4112-b068-fc7209a6f469",
          "name": "QZ0102 增加单个测试(QZ0102 增加单个测试)",
          "request": {
            "url": {
              "protocol": "http",
              "port": "8000",
              "path": [
                "quizzes"
              ],
              "host": [
                "127",
                "0",
                "0",
                "1"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "token",
                "value": "{{token}}"
              },
              {
                "key": "User-Agent",
                "value": "apifox/1.0.0 (https://www.apifox.cn)"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"question\": \"日过活记别当\",\n    \"options\": [\n        \"开回公下理式起包周状大建太毛府战。\",\n        \"最太整日门什头业往流把事单西局车部。\"\n    ],\n    \"answer\": 2,\n    \"explanation\": \"万区确群界海感车又达如带民儿高。者织实先加转高除江现实并格员片。得结话济为里表响声速我江准切问。政力下新部果利斯干中干连示八带。\"\n}"
            },
            "type": "http"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "postProcessors.0.assertion",
                "type": "text/javascript",
                "exec": [
                  "pm.test(pm.variables.replaceIn(`Quiz添加结果检查`), function() {",
                  "        ",
                  "          const expression = pm.variables.replaceIn(`$`);",
                  "          const JSONPath = require('jsonpath-plus').JSONPath;",
                  "          let jsonData;",
                  "          try {",
                  "            jsonData = pm.response.json();",
                  "          } catch(e) {",
                  "            let text = pm.response.text();",
                  "            // xml 转 json",
                  "            const xml2js = require('xml2js');",
                  "            text = text.replace(/^[^<]*/, '').replace(/[^>]*$/, '');",
                  "            let json;",
                  "            let xmlParseOptions = {",
                  "                explicitArray: false,",
                  "                trim: true,",
                  "                ignoreAttrs: true,",
                  "            };",
                  "            xml2js.parseString(text, xmlParseOptions, function (_, result) {",
                  "                jsonData = result;",
                  "            });",
                  "          }",
                  "          const value = JSONPath({",
                  "            json: jsonData,",
                  "            path: expression,",
                  "            wrap: false",
                  "          });",
                  "          ",
                  "        ",
                  "        pm.expectWithKey({key:'$',value:value}).to.exist",
                  "      });"
                ]
              }
            }
          ],
          "responseDefinition": {
            "jsonSchema": {
              "x-apifox-overrides": {},
              "type": "object",
              "x-apifox-refs": {},
              "properties": {
                "quiz": {
                  "$ref": "#/definitions/13080595",
                  "x-apifox-overrides": {}
                }
              },
              "required": [
                "quiz"
              ],
              "x-apifox-orders": [
                "quiz"
              ]
            },
            "defaultEnable": true,
            "id": 70048663,
            "name": "成功",
            "apiDetailId": 29662986,
            "projectId": 0,
            "code": 200,
            "contentType": "json",
            "ordering": 1,
            "createdAt": "2022-07-15T11:22:03.000Z",
            "updatedAt": "2022-07-23T08:30:31.000Z",
            "deletedAt": null
          },
          "metaInfo": {
            "httpApiId": 29662986,
            "httpApiCaseId": 34623806,
            "httpApiName": "QZ0102 增加单个测试",
            "httpApiPath": "/quizzes",
            "httpApiMethod": "post",
            "httpApiCaseName": "QZ0102 增加单个测试"
          },
          "type": "http",
          "protocolProfileBehavior": {
            "disableUrlEncoding": false
          }
        },
        {
          "id": "8131e930-eb73-4346-abc1-3519099a80e5",
          "name": "QZ0201 搜索测试题(QZ0201 搜索测试题)",
          "request": {
            "url": {
              "protocol": "http",
              "port": "8000",
              "path": [
                "quizzes"
              ],
              "host": [
                "127",
                "0",
                "0",
                "1"
              ],
              "query": [
                {
                  "key": "keywords",
                  "value": ""
                }
              ],
              "variable": []
            },
            "header": [
              {
                "key": "token",
                "value": "{{token}}"
              },
              {
                "key": "User-Agent",
                "value": "apifox/1.0.0 (https://www.apifox.cn)"
              }
            ],
            "method": "GET",
            "body": {},
            "type": "http"
          },
          "response": [],
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "id": "commonScript.assertion",
                "type": "text/javascript",
                "exec": [
                  "",
                  " ____string2Number = function(value, errorMsg) {",
                  "  if(typeof value !== 'string'){",
                  "    return value;",
                  "  }",
                  "  // 转换成数字类型后比较",
                  "  if (/^\\-?\\d+$/.test(value)) {",
                  "      return parseInt(value);",
                  "  } else if (/^\\-?\\d+\\.\\d+$/.test(value)) {",
                  "      return parseFloat(value);",
                  "  } else {",
                  "      throw new Error(errorMsg || '数据类型不匹配')",
                  "  }",
                  "}",
                  "",
                  " ____formatValues = function(value, stringCompareValue, comparison) {",
                  "  try{",
                  "    const isNumberComparisons = ['isBelow', 'isAtMost', 'isAbove', 'isAtLeast'].includes(comparison);",
                  "    let compareValue;",
                  "    switch (typeof value) {",
                  "        case 'string':",
                  "            if (isNumberComparisons) {",
                  "                value = ____string2Number(value);",
                  "                compareValue = ____string2Number(stringCompareValue);",
                  "            } else {",
                  "                compareValue = stringCompareValue;",
                  "            }",
                  "            break;",
                  "        case 'object':",
                  "            if (isNumberComparisons) {",
                  "                throw new Error('object 类型的值不能使用 ' + comparison + ' 方式比较')",
                  "            }",
                  "            try {",
                  "                compareValue = JSON.parse(stringCompareValue);",
                  "            } catch (e) {",
                  "                compareValue = stringCompareValue;",
                  "            }",
                  "            break;",
                  "        case 'boolean':",
                  "            if (isNumberComparisons) {",
                  "                throw new Error('boolean 类型的值不能使用 ' + comparison + ' 方式比较')",
                  "            }",
                  "            compareValue = stringCompareValue === 'true' ? true : (stringCompareValue === 'false' ? false : stringCompareValue);",
                  "            break;",
                  "        case 'number':",
                  "            if (isNumberComparisons) {",
                  "              compareValue = ____string2Number(stringCompareValue);",
                  "            } else {",
                  "              compareValue = stringCompareValue;",
                  "              value = '' + value;",
                  "            }",
                  "            break;",
                  "        case 'null':",
                  "            if (isNumberComparisons) {",
                  "                throw new Error('null 值不能使用 ' + comparison + ' 方式比较')",
                  "            }",
                  "            compareValue = stringCompareValue === 'null' ? null : stringCompareValue;",
                  "            break;",
                  "        default:",
                  "            compareValue = stringCompareValue;",
                  "            break;",
                  "    }",
                  "    return { compareValue, value };",
                  "  } catch(e) {",
                  "    console.log(e);",
                  "    throw e;",
                  "  }",
                  "}",
                  ""
                ]
              }
            },
            {
              "listen": "test",
              "script": {
                "id": "postProcessors.0.extractor",
                "type": "text/javascript",
                "exec": [
                  "",
                  "      try{",
                  "        ",
                  "          const expression = pm.variables.replaceIn(`$.result.length`);",
                  "          const JSONPath = require('jsonpath-plus').JSONPath;",
                  "          const jsonData = pm.response.json();",
                  "          let value = JSONPath({",
                  "            json: jsonData,",
                  "            path: expression,",
                  "            wrap: false",
                  "          });",
                  "          ",
                  "        ",
                  "        switch (typeof value) {",
                  "          case 'object':",
                  "            value = JSON.stringify(value);",
                  "            break;",
                  "          default:",
                  "            value = String(value);",
                  "            break;",
                  "        }",
                  "      ",
                  "        pm.environment.set(`num_later`, value);console.log('已设置环境变量【'+ `num_later` + '】，值为【' + value + '】')",
                  "      } catch(e) {",
                  "        e.message = '提取变量【num_later】出错：' + e.message;",
                  "        throw e;",
                  "      }",
                  "  "
                ]
              }
            },
            {
              "listen": "test",
              "script": {
                "id": "postProcessors.1.customScript",
                "type": "text/javascript",
                "exec": [
                  "var num_pre = Number(pm.environment.get('num_pre'));",
                  "",
                  "pm.environment.set('num_pre', Number(num_pre)+3);"
                ]
              }
            },
            {
              "listen": "test",
              "script": {
                "id": "postProcessors.2.assertion",
                "type": "text/javascript",
                "exec": [
                  "pm.test(pm.variables.replaceIn(`quiz数量校验`), function() {",
                  "        ",
                  "          const expression = pm.variables.replaceIn(`num_pre`);",
                  "          const value = pm.variables.get(expression)",
                  "      ",
                  "        const formattedValues = ____formatValues(value, pm.variables.replaceIn(`{{num_later}}`), 'equal');",
                  "        pm.expect(formattedValues.value).to.eql(formattedValues.compareValue);",
                  "      });"
                ]
              }
            }
          ],
          "responseDefinition": {
            "jsonSchema": {
              "type": "object",
              "properties": {
                "result": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/13080595"
                  }
                }
              },
              "x-apifox-orders": [
                "result"
              ],
              "required": [
                "result"
              ]
            },
            "defaultEnable": true,
            "id": 70049266,
            "name": "成功",
            "apiDetailId": 29663288,
            "projectId": 0,
            "code": 200,
            "contentType": "json",
            "ordering": 1,
            "createdAt": "2022-07-15T11:28:36.000Z",
            "updatedAt": "2022-07-15T11:29:54.000Z",
            "deletedAt": null
          },
          "metaInfo": {
            "httpApiId": 29663288,
            "httpApiCaseId": 34623807,
            "httpApiName": "QZ0201 搜索测试题",
            "httpApiPath": "/quizzes",
            "httpApiMethod": "get",
            "httpApiCaseName": "QZ0201 搜索测试题"
          },
          "type": "http",
          "protocolProfileBehavior": {
            "disableUrlEncoding": false
          }
        },
        {
          "id": "82b04951-ccab-447a-96cd-e46ed362de8f",
          "name": "QZ0202 随机测试题(QZ0202 随机测试题)",
          "request": {
            "url": {
              "protocol": "http",
              "port": "8000",
              "path": [
                "quizzes",
                "random"
              ],
              "host": [
                "127",
                "0",
                "0",
                "1"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "token",
                "value": "{{token}}"
              },
              {
                "key": "User-Agent",
                "value": "apifox/1.0.0 (https://www.apifox.cn)"
              }
            ],
            "method": "GET",
            "body": {},
            "type": "http"
          },
          "response": [],
          "event": [],
          "responseDefinition": {
            "jsonSchema": {
              "x-apifox-overrides": {},
              "type": "object",
              "properties": {
                "quiz": {
                  "$ref": "#/definitions/13080595",
                  "x-apifox-overrides": {}
                }
              },
              "x-apifox-refs": {},
              "x-apifox-orders": [
                "quiz"
              ],
              "required": [
                "quiz"
              ]
            },
            "defaultEnable": true,
            "id": 70049339,
            "name": "成功",
            "apiDetailId": 29663329,
            "projectId": 0,
            "code": 200,
            "contentType": "json",
            "ordering": 1,
            "createdAt": "2022-07-15T11:30:51.000Z",
            "updatedAt": "2022-07-23T08:32:52.000Z",
            "deletedAt": null
          },
          "metaInfo": {
            "httpApiId": 29663329,
            "httpApiCaseId": 34644618,
            "httpApiName": "QZ0202 随机测试题",
            "httpApiPath": "/quizzes/random",
            "httpApiMethod": "get",
            "httpApiCaseName": "QZ0202 随机测试题"
          },
          "type": "http",
          "protocolProfileBehavior": {
            "disableUrlEncoding": false
          }
        }
      ],
      "name": "QZ模块理想状况"
    }
  ],
  "info": {
    "name": "QZ模块理想状况"
  },
  "dataSchemas": {
    "13080595": {
      "type": "object",
      "properties": {
        "question": {
          "type": "string",
          "title": "问题",
          "mock": {
            "mock": "@ctitle"
          }
        },
        "options": {
          "type": "array",
          "items": {
            "type": "string",
            "mock": {
              "mock": "@csentence"
            }
          },
          "title": "选项"
        },
        "explanation": {
          "type": "string",
          "title": "答案解析",
          "mock": {
            "mock": "@cparagraph"
          }
        },
        "answer": {
          "type": "integer",
          "title": "答案序号",
          "description": "options数组下标"
        },
        "id": {
          "type": "integer"
        },
        "visibility": {
          "type": "boolean",
          "title": ""
        }
      },
      "x-apifox-orders": [
        "question",
        "options",
        "answer",
        "explanation",
        "id",
        "visibility"
      ],
      "required": [
        "question",
        "answer",
        "options",
        "explanation",
        "id",
        "visibility"
      ],
      "title": "quiz_all"
    }
  },
  "environment": {
    "id": 510825,
    "name": "测试环境",
    "baseUrls": {
      "default": "http://127.0.0.1:8000"
    },
    "variable": {
      "id": "9caa92f7-05fa-4658-ad3e-c02fddcbc880",
      "name": "测试环境",
      "values": [
        {
          "type": "any",
          "value": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ1c2VybmFtZSI6InVzZXJfdGVzIiwiaWQiOjIsImV4cCI6MTY2Mzk5MTEyNC40MDgyMTF9.9SNlvRppW-Op9yykFgupHl4eKnLfLXmgmE0pw4xV450",
          "key": "token"
        },
        {
          "type": "any",
          "value": "3",
          "key": "num"
        },
        {
          "type": "any",
          "value": "0",
          "key": "num_later"
        },
        {
          "type": "any",
          "value": 20,
          "key": "num_pre"
        },
        {
          "type": "any",
          "value": "true",
          "key": "quiz_new"
        }
      ]
    },
    "type": "normal",
    "parameter": {
      "header": [],
      "query": [],
      "body": [],
      "cookie": []
    }
  },
  "globals": {
    "variable": {
      "id": "bb6b07e0-94b5-43f5-9721-a8afe7e807b7",
      "values": []
    },
    "parameter": {
      "header": [],
      "query": [],
      "body": [],
      "cookie": []
    }
  },
  "isServerBuild": false
}
