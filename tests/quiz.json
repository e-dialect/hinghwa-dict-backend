{
  "apifoxCli": "1.1.0",
  "item": [
    {
      "item": [
        {
          "id": "0be6acde-1a2c-4c06-a67e-bee36af14cfe",
          "name": "LG0101 账号密码登录(登录用户user_test)",
          "request": {
            "url": {
              "protocol": "http",
              "port": "8000",
              "path": [
                "login"
              ],
              "host": [
                "127",
                "0",
                "0",
                "1"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "token",
                "value": "{{token}}"
              },
              {
                "key": "User-Agent",
                "value": "Apifox/1.0.0 (https://www.apifox.cn)"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "baseUrl": "http://127.0.0.1:8000",
            "body": {
              "mode": "raw",
              "raw": "{\r\n    \"username\": \"user_test\",\r\n    \"password\": \"123456\"\r\n}",
              "type": "application/json"
            },
            "type": "http"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "postProcessors.0.extractor",
                "type": "text/javascript",
                "exec": [
                  "",
                  "        if (JSON.setEnableBigInt) {",
                  "          JSON.setEnableBigInt(undefined);",
                  "        }",
                  "        ",
                  "      try{",
                  "        ",
                  "          const expression = pm.variables.replaceIn(`$.token`);",
                  "          const JSONPath = require('jsonpath-plus').JSONPath;",
                  "          const jsonData = pm.response.json();",
                  "          let value = JSONPath({",
                  "            json: jsonData,",
                  "            path: expression,",
                  "            wrap: false",
                  "          });",
                  "",
                  "          ",
                  "          if (false && undefined !== undefined) {",
                  "            if (Array.isArray(value)) {",
                  "              value = Number(undefined) >= 0 ? value[undefined] : value[value.length + Number(undefined)];",
                  "            } else {",
                  "              value = undefined;",
                  "            }",
                  "          }",
                  "          ",
                  "        ",
                  "        switch (typeof value) {",
                  "          case 'object':",
                  "            value = JSON.stringify(value);",
                  "            break;",
                  "          default:",
                  "            value = String(value);",
                  "            break;",
                  "        }",
                  "      ",
                  "        pm.environment.set(`token`, value);console.log('已设置环境变量【token】，值为 【' + value + '】')",
                  "      } catch(e) {",
                  "        e.message = '提取变量【token】出错: ' + e.message;",
                  "        throw e;",
                  "      }",
                  "  ",
                  "      "
                ]
              }
            }
          ],
          "responseDefinition": {
            "id": 4183271,
            "createdAt": "2021-07-29T14:43:37.000Z",
            "updatedAt": "2021-08-12T16:27:18.000Z",
            "deletedAt": null,
            "apiDetailId": 5318056,
            "name": "成功",
            "code": 200,
            "contentType": "json",
            "jsonSchema": {
              "type": "object",
              "properties": {
                "token": {
                  "type": "string",
                  "mock": {
                    "mock": "@string"
                  },
                  "title": "权"
                },
                "id": {
                  "type": "integer",
                  "title": "用户id"
                }
              },
              "required": [
                "token",
                "id"
              ]
            },
            "defaultEnable": true,
            "projectId": 0,
            "ordering": 1,
            "schemaDefinitions": {}
          },
          "requestDefinition": {
            "jsonSchema": {
              "type": "object",
              "properties": {
                "username": {
                  "type": "string",
                  "mock": {
                    "mock": "@cname"
                  },
                  "title": "用户名"
                },
                "password": {
                  "type": "string",
                  "mock": {
                    "mock": "@string('lower', 1, 3)"
                  },
                  "title": "密码"
                }
              },
              "required": [
                "username",
                "password"
              ]
            }
          },
          "metaInfo": {
            "httpApiId": 5318056,
            "httpApiCaseId": 65361417,
            "httpApiName": "LG0101 账号密码登录",
            "httpApiPath": "/login",
            "httpApiMethod": "post",
            "httpApiCaseName": "登录用户user_test",
            "id": "bcefc24e-abfd-41a9-ad5c-27baf1bbc6b2",
            "type": "http"
          },
          "type": "http",
          "protocolProfileBehavior": {
            "useWhatWGUrlParser": false,
            "disableUrlEncoding": false
          }
        },
        {
          "id": "82de9be8-7c85-414e-b8a4-a72fc9c0c5d0",
          "name": "QZ0201 搜索测试题(QZ0201 搜索测试题)",
          "request": {
            "url": {
              "protocol": "http",
              "port": "8000",
              "path": [
                "quizzes"
              ],
              "host": [
                "127",
                "0",
                "0",
                "1"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "keywords",
                  "value": ""
                }
              ],
              "variable": []
            },
            "header": [
              {
                "key": "User-Agent",
                "value": "Apifox/1.0.0 (https://www.apifox.cn)"
              }
            ],
            "method": "GET",
            "baseUrl": "http://127.0.0.1:8000",
            "body": {},
            "type": "http"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "postProcessors.0.extractor",
                "type": "text/javascript",
                "exec": [
                  "",
                  "        if (JSON.setEnableBigInt) {",
                  "          JSON.setEnableBigInt(undefined);",
                  "        }",
                  "        ",
                  "      try{",
                  "        ",
                  "          const expression = pm.variables.replaceIn(`$.result.length`);",
                  "          const JSONPath = require('jsonpath-plus').JSONPath;",
                  "          const jsonData = pm.response.json();",
                  "          let value = JSONPath({",
                  "            json: jsonData,",
                  "            path: expression,",
                  "            wrap: false",
                  "          });",
                  "",
                  "          ",
                  "          if (false && undefined !== undefined) {",
                  "            if (Array.isArray(value)) {",
                  "              value = Number(undefined) >= 0 ? value[undefined] : value[value.length + Number(undefined)];",
                  "            } else {",
                  "              value = undefined;",
                  "            }",
                  "          }",
                  "          ",
                  "        ",
                  "        switch (typeof value) {",
                  "          case 'object':",
                  "            value = JSON.stringify(value);",
                  "            break;",
                  "          default:",
                  "            value = String(value);",
                  "            break;",
                  "        }",
                  "      ",
                  "        pm.environment.set(`num_pre`, value);console.log('已设置环境变量【num_pre】，值为 【' + value + '】')",
                  "      } catch(e) {",
                  "        e.message = '提取变量【num_pre】出错: ' + e.message;",
                  "        throw e;",
                  "      }",
                  "  ",
                  "      "
                ]
              }
            }
          ],
          "responseDefinition": {
            "id": 70049266,
            "createdAt": "2022-07-15T11:28:36.000Z",
            "updatedAt": "2022-07-15T11:29:54.000Z",
            "deletedAt": null,
            "apiDetailId": 29663288,
            "name": "成功",
            "code": 200,
            "contentType": "json",
            "jsonSchema": {
              "type": "object",
              "properties": {
                "result": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/13080595"
                  }
                }
              },
              "x-apifox-orders": [
                "result"
              ],
              "required": [
                "result"
              ]
            },
            "defaultEnable": true,
            "projectId": 0,
            "ordering": 1,
            "schemaDefinitions": {
              "1097305": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "integer",
                    "title": "user的id",
                    "mock": {
                      "mock": "@integer(10000)"
                    }
                  },
                  "username": {
                    "type": "string",
                    "title": "用户名",
                    "mock": {
                      "mock": "@cname"
                    }
                  },
                  "nickname": {
                    "type": "string",
                    "title": "昵称",
                    "mock": {
                      "mock": "@cname"
                    }
                  },
                  "email": {
                    "type": "string",
                    "title": "邮箱",
                    "mock": {
                      "mock": "@email"
                    }
                  },
                  "telephone": {
                    "type": "string",
                    "title": "电话"
                  },
                  "birthday": {
                    "type": "string",
                    "title": "生日",
                    "mock": {
                      "mock": "@date('yyyy-MM-dd')"
                    }
                  },
                  "avatar": {
                    "type": "string",
                    "title": "头像",
                    "description": "头像的url地址",
                    "mock": {
                      "mock": "@image"
                    }
                  },
                  "is_admin": {
                    "type": "boolean",
                    "title": "是否管理员",
                    "mock": {
                      "mock": "@boolean"
                    }
                  },
                  "county": {
                    "type": "string",
                    "title": "县区",
                    "description": "用户所在县区",
                    "mock": {
                      "mock": "@county"
                    }
                  },
                  "town": {
                    "type": "string",
                    "title": "乡镇",
                    "description": "用户所在乡镇",
                    "mock": {
                      "mock": "@county"
                    }
                  },
                  "registration_time": {
                    "type": "string",
                    "mock": {
                      "mock": "@datetime('yyyy-MM-dd HH:mm:ss')"
                    },
                    "title": "注册时间"
                  },
                  "login_time": {
                    "type": "string",
                    "mock": {
                      "mock": "@datetime('yyyy-MM-dd HH:mm:ss')"
                    },
                    "title": "登录时间"
                  },
                  "wechat": {
                    "type": "boolean",
                    "title": "绑定微信"
                  },
                  "points_sum": {
                    "type": "integer",
                    "title": "总分数",
                    "mock": {
                      "mock": "@integer(0)"
                    },
                    "minimum": 0
                  },
                  "points_now": {
                    "type": "integer",
                    "title": "现有分数",
                    "mock": {
                      "mock": "@integer(0)"
                    },
                    "minimum": 0
                  },
                  "title": {
                    "type": "object",
                    "properties": {
                      "color": {
                        "type": "string",
                        "mock": {
                          "mock": "@color"
                        },
                        "title": "颜色"
                      },
                      "title": {
                        "type": "string",
                        "mock": {
                          "mock": "@cword"
                        },
                        "title": "称号"
                      }
                    },
                    "title": "标题",
                    "mock": {
                      "mock": "@cname"
                    },
                    "x-apifox-orders": [
                      "title",
                      "color"
                    ],
                    "required": [
                      "title",
                      "color"
                    ]
                  }
                },
                "required": [
                  "id",
                  "email",
                  "username",
                  "is_admin",
                  "avatar",
                  "registration_time",
                  "login_time",
                  "nickname",
                  "telephone",
                  "birthday",
                  "county",
                  "town",
                  "wechat",
                  "points_sum",
                  "points_now",
                  "title"
                ],
                "x-apifox-orders": [
                  "id",
                  "username",
                  "nickname",
                  "email",
                  "telephone",
                  "birthday",
                  "avatar",
                  "is_admin",
                  "county",
                  "town",
                  "points_sum",
                  "points_now",
                  "title",
                  "registration_time",
                  "login_time",
                  "wechat"
                ],
                "title": "user_all",
                "name": "user_all"
              },
              "13080595": {
                "type": "object",
                "properties": {
                  "question": {
                    "type": "string",
                    "title": "问题",
                    "mock": {
                      "mock": "@ctitle"
                    }
                  },
                  "options": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "mock": {
                        "mock": "@csentence"
                      }
                    },
                    "title": "选项"
                  },
                  "explanation": {
                    "type": "string",
                    "title": "答案解析",
                    "mock": {
                      "mock": "@cparagraph"
                    }
                  },
                  "answer": {
                    "type": "integer",
                    "title": "答案序号",
                    "description": "options数组下标"
                  },
                  "id": {
                    "type": "integer"
                  },
                  "visibility": {
                    "type": "boolean",
                    "title": ""
                  },
                  "author": {
                    "$ref": "#/definitions/1097305"
                  },
                  "voice_source": {
                    "title": "播报语音链接",
                    "mock": {
                      "mock": "@url(\"http\")"
                    },
                    "type": [
                      "string",
                      "null"
                    ]
                  }
                },
                "x-apifox-orders": [
                  "question",
                  "options",
                  "answer",
                  "explanation",
                  "id",
                  "author",
                  "visibility",
                  "voice_source"
                ],
                "required": [
                  "question",
                  "answer",
                  "options",
                  "explanation",
                  "id",
                  "visibility",
                  "author",
                  "voice_source"
                ],
                "title": "quiz_all",
                "name": "quiz_all"
              }
            }
          },
          "requestDefinition": {
            "jsonSchema": {}
          },
          "metaInfo": {
            "httpApiId": 29663288,
            "httpApiCaseId": 37835120,
            "httpApiName": "QZ0201 搜索测试题",
            "httpApiPath": "/quizzes",
            "httpApiMethod": "get",
            "httpApiCaseName": "QZ0201 搜索测试题",
            "id": "55500a94-9ea8-4f2b-8c74-df67fdbfa7f0",
            "type": "http"
          },
          "type": "http",
          "protocolProfileBehavior": {
            "useWhatWGUrlParser": false,
            "disableUrlEncoding": false
          }
        },
        {
          "id": "7e34eb94-1a63-4d56-8342-d3e4f8c2c0f0",
          "name": "QZ0102 增加单个测试(QZ0102 增加单个测试)",
          "request": {
            "url": {
              "protocol": "http",
              "port": "8000",
              "path": [
                "quizzes"
              ],
              "host": [
                "127",
                "0",
                "0",
                "1"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "token",
                "value": "{{token}}"
              },
              {
                "key": "User-Agent",
                "value": "Apifox/1.0.0 (https://www.apifox.cn)"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "baseUrl": "http://127.0.0.1:8000",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"question\": \"目里特意七\",\n    \"options\": [\n        \"下改深区矿许之体山因本电气强收用度。\",\n        \"但存务事需见热却候心部切各。\"\n    ],\n    \"answer\": 6,\n    \"explanation\": \"正周按到组同先现亲通布安角事便明。书厂例了温最此回教况直元取提单叫。调任思角行石状东那种联关义观。提比便化满才与造我话切况外。受报指几使院精土难基车清不才可基候。\",\n    \"voice_source\": \"http://qdnwcqfb.id/aifs\"\n}",
              "generateMode": "normal",
              "type": "application/json"
            },
            "type": "http"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "postProcessors.0.assertion",
                "type": "text/javascript",
                "exec": [
                  "",
                  "        if (JSON.setEnableBigInt) {",
                  "          JSON.setEnableBigInt(undefined);",
                  "        }",
                  "        pm.test(pm.variables.replaceIn(`Quiz添加结果检查`), function() {",
                  "        ",
                  "          const expression = pm.variables.replaceIn(`$`);",
                  "          const JSONPath = require('jsonpath-plus').JSONPath;",
                  "          let jsonData;",
                  "          try {",
                  "            jsonData = pm.response.json();",
                  "          } catch(e) {",
                  "            let text = pm.response.text();",
                  "            const xml2js = require('xml2js');",
                  "            text = text.replace(/^[^<]*/, '').replace(/[^>]*$/, '');",
                  "            let json;",
                  "            let xmlParseOptions = {",
                  "                explicitArray: false,",
                  "                trim: true,",
                  "                ignoreAttrs: true,",
                  "            };",
                  "            xml2js.parseString(text, xmlParseOptions, function (_, result) {",
                  "                jsonData = result;",
                  "            });",
                  "          }",
                  "          let value = JSONPath({",
                  "            json: jsonData,",
                  "            path: expression,",
                  "            wrap: false",
                  "          });",
                  "",
                  "          if (false && undefined !== undefined) {",
                  "            if (Array.isArray(value)) {",
                  "              value = Number(undefined) >= 0 ? value[undefined] : value[value.length + Number(undefined)];",
                  "            } else {",
                  "              value = undefined;",
                  "            }",
                  "          }",
                  "",
                  "          ",
                  "        ",
                  "        pm.expectWithKey({key:'$',value: value === null ? '' : value }).to.exist",
                  "      });",
                  "      "
                ]
              }
            },
            {
              "listen": "test",
              "script": {
                "id": "postProcessors.1.extractor",
                "type": "text/javascript",
                "exec": [
                  "",
                  "        if (JSON.setEnableBigInt) {",
                  "          JSON.setEnableBigInt(undefined);",
                  "        }",
                  "        ",
                  "      try{",
                  "        ",
                  "          const expression = pm.variables.replaceIn(`$.quiz.id`);",
                  "          const JSONPath = require('jsonpath-plus').JSONPath;",
                  "          const jsonData = pm.response.json();",
                  "          let value = JSONPath({",
                  "            json: jsonData,",
                  "            path: expression,",
                  "            wrap: false",
                  "          });",
                  "",
                  "          ",
                  "          if (false && undefined !== undefined) {",
                  "            if (Array.isArray(value)) {",
                  "              value = Number(undefined) >= 0 ? value[undefined] : value[value.length + Number(undefined)];",
                  "            } else {",
                  "              value = undefined;",
                  "            }",
                  "          }",
                  "          ",
                  "        ",
                  "        switch (typeof value) {",
                  "          case 'object':",
                  "            value = JSON.stringify(value);",
                  "            break;",
                  "          default:",
                  "            value = String(value);",
                  "            break;",
                  "        }",
                  "      ",
                  "        pm.environment.set(`quiz_id`, value);console.log('已设置环境变量【quiz_id】，值为 【' + value + '】')",
                  "      } catch(e) {",
                  "        e.message = '提取变量【quiz_id】出错: ' + e.message;",
                  "        throw e;",
                  "      }",
                  "  ",
                  "      "
                ]
              }
            }
          ],
          "responseDefinition": {
            "id": 70048663,
            "createdAt": "2022-07-15T11:22:03.000Z",
            "updatedAt": "2022-07-23T08:30:31.000Z",
            "deletedAt": null,
            "apiDetailId": 29662986,
            "name": "成功",
            "code": 200,
            "contentType": "json",
            "jsonSchema": {
              "x-apifox-overrides": {},
              "type": "object",
              "x-apifox-refs": {},
              "properties": {
                "quiz": {
                  "$ref": "#/definitions/13080595",
                  "x-apifox-overrides": {}
                }
              },
              "required": [
                "quiz"
              ],
              "x-apifox-orders": [
                "quiz"
              ]
            },
            "defaultEnable": true,
            "projectId": 0,
            "ordering": 1,
            "schemaDefinitions": {
              "1097305": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "integer",
                    "title": "user的id",
                    "mock": {
                      "mock": "@integer(10000)"
                    }
                  },
                  "username": {
                    "type": "string",
                    "title": "用户名",
                    "mock": {
                      "mock": "@cname"
                    }
                  },
                  "nickname": {
                    "type": "string",
                    "title": "昵称",
                    "mock": {
                      "mock": "@cname"
                    }
                  },
                  "email": {
                    "type": "string",
                    "title": "邮箱",
                    "mock": {
                      "mock": "@email"
                    }
                  },
                  "telephone": {
                    "type": "string",
                    "title": "电话"
                  },
                  "birthday": {
                    "type": "string",
                    "title": "生日",
                    "mock": {
                      "mock": "@date('yyyy-MM-dd')"
                    }
                  },
                  "avatar": {
                    "type": "string",
                    "title": "头像",
                    "description": "头像的url地址",
                    "mock": {
                      "mock": "@image"
                    }
                  },
                  "is_admin": {
                    "type": "boolean",
                    "title": "是否管理员",
                    "mock": {
                      "mock": "@boolean"
                    }
                  },
                  "county": {
                    "type": "string",
                    "title": "县区",
                    "description": "用户所在县区",
                    "mock": {
                      "mock": "@county"
                    }
                  },
                  "town": {
                    "type": "string",
                    "title": "乡镇",
                    "description": "用户所在乡镇",
                    "mock": {
                      "mock": "@county"
                    }
                  },
                  "registration_time": {
                    "type": "string",
                    "mock": {
                      "mock": "@datetime('yyyy-MM-dd HH:mm:ss')"
                    },
                    "title": "注册时间"
                  },
                  "login_time": {
                    "type": "string",
                    "mock": {
                      "mock": "@datetime('yyyy-MM-dd HH:mm:ss')"
                    },
                    "title": "登录时间"
                  },
                  "wechat": {
                    "type": "boolean",
                    "title": "绑定微信"
                  },
                  "points_sum": {
                    "type": "integer",
                    "title": "总分数",
                    "mock": {
                      "mock": "@integer(0)"
                    },
                    "minimum": 0
                  },
                  "points_now": {
                    "type": "integer",
                    "title": "现有分数",
                    "mock": {
                      "mock": "@integer(0)"
                    },
                    "minimum": 0
                  },
                  "title": {
                    "type": "object",
                    "properties": {
                      "color": {
                        "type": "string",
                        "mock": {
                          "mock": "@color"
                        },
                        "title": "颜色"
                      },
                      "title": {
                        "type": "string",
                        "mock": {
                          "mock": "@cword"
                        },
                        "title": "称号"
                      }
                    },
                    "title": "标题",
                    "mock": {
                      "mock": "@cname"
                    },
                    "x-apifox-orders": [
                      "title",
                      "color"
                    ],
                    "required": [
                      "title",
                      "color"
                    ]
                  }
                },
                "required": [
                  "id",
                  "email",
                  "username",
                  "is_admin",
                  "avatar",
                  "registration_time",
                  "login_time",
                  "nickname",
                  "telephone",
                  "birthday",
                  "county",
                  "town",
                  "wechat",
                  "points_sum",
                  "points_now",
                  "title"
                ],
                "x-apifox-orders": [
                  "id",
                  "username",
                  "nickname",
                  "email",
                  "telephone",
                  "birthday",
                  "avatar",
                  "is_admin",
                  "county",
                  "town",
                  "points_sum",
                  "points_now",
                  "title",
                  "registration_time",
                  "login_time",
                  "wechat"
                ],
                "title": "user_all",
                "name": "user_all"
              },
              "13080595": {
                "type": "object",
                "properties": {
                  "question": {
                    "type": "string",
                    "title": "问题",
                    "mock": {
                      "mock": "@ctitle"
                    }
                  },
                  "options": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "mock": {
                        "mock": "@csentence"
                      }
                    },
                    "title": "选项"
                  },
                  "explanation": {
                    "type": "string",
                    "title": "答案解析",
                    "mock": {
                      "mock": "@cparagraph"
                    }
                  },
                  "answer": {
                    "type": "integer",
                    "title": "答案序号",
                    "description": "options数组下标"
                  },
                  "id": {
                    "type": "integer"
                  },
                  "visibility": {
                    "type": "boolean",
                    "title": ""
                  },
                  "author": {
                    "$ref": "#/definitions/1097305"
                  },
                  "voice_source": {
                    "title": "播报语音链接",
                    "mock": {
                      "mock": "@url(\"http\")"
                    },
                    "type": [
                      "string",
                      "null"
                    ]
                  }
                },
                "x-apifox-orders": [
                  "question",
                  "options",
                  "answer",
                  "explanation",
                  "id",
                  "author",
                  "visibility",
                  "voice_source"
                ],
                "required": [
                  "question",
                  "answer",
                  "options",
                  "explanation",
                  "id",
                  "visibility",
                  "author",
                  "voice_source"
                ],
                "title": "quiz_all",
                "name": "quiz_all"
              }
            }
          },
          "requestDefinition": {
            "jsonSchema": {
              "$ref": "#/definitions/13080737",
              "x-apifox-overrides": {}
            }
          },
          "metaInfo": {
            "httpApiId": 29662986,
            "httpApiCaseId": 34623800,
            "httpApiName": "QZ0102 增加单个测试",
            "httpApiPath": "/quizzes",
            "httpApiMethod": "post",
            "httpApiCaseName": "QZ0102 增加单个测试",
            "id": "b27db936-bb3f-4094-b40a-6ed8f3058bf1",
            "type": "http"
          },
          "type": "http",
          "protocolProfileBehavior": {
            "useWhatWGUrlParser": false,
            "disableUrlEncoding": false
          }
        },
        {
          "id": "1a9e2f4f-01c5-47d9-b1ff-c4d9dbc7305b",
          "name": "QZ0201 搜索测试题(QZ0201 搜索测试题)",
          "request": {
            "url": {
              "protocol": "http",
              "port": "8000",
              "path": [
                "quizzes"
              ],
              "host": [
                "127",
                "0",
                "0",
                "1"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "keywords",
                  "value": ""
                }
              ],
              "variable": []
            },
            "header": [
              {
                "key": "User-Agent",
                "value": "Apifox/1.0.0 (https://www.apifox.cn)"
              }
            ],
            "method": "GET",
            "baseUrl": "http://127.0.0.1:8000",
            "body": {},
            "type": "http"
          },
          "response": [],
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "id": "commonScript.assertion",
                "type": "text/javascript",
                "exec": [
                  "",
                  "  ____string2Array = function(value) {",
                  "    if(typeof value === 'object'){",
                  "      return value;",
                  "    }",
                  "    try {",
                  "      return JSON.parse(value);",
                  "    } catch (e) {",
                  "      return value;",
                  "    }",
                  "  }",
                  "  ____string2Number = function(value, errorMsg) {",
                  "   if(typeof value !== 'string'){",
                  "     return value;",
                  "   }",
                  "   if (/^\\-?\\d+$/.test(value)) {",
                  "       return parseInt(value);",
                  "   } else if (/^\\-?\\d+\\.\\d+$/.test(value)) {",
                  "       return parseFloat(value);",
                  "   } else {",
                  "       throw new Error(errorMsg || '数据类型不匹配')",
                  "   }",
                  " }",
                  "",
                  "  ____formatValues = function(value, stringCompareValue, comparison) {",
                  "   try{",
                  "     const isNumberComparisons = ['isBelow', 'isAtMost', 'isAbove', 'isAtLeast'].includes(comparison);",
                  "     const isCollectionComparisons = ['isOneOf', 'notOneOf'].includes(comparison);",
                  "     let compareValue;",
                  "     switch (typeof value) {",
                  "         case 'string':",
                  "             if (isNumberComparisons) {",
                  "                 value = ____string2Number(value);",
                  "                 compareValue = ____string2Number(stringCompareValue);",
                  "             } else if (isCollectionComparisons) {",
                  "              compareValue = ____string2Array(stringCompareValue);",
                  "             }",
                  "              else {",
                  "                 compareValue = stringCompareValue;",
                  "             }",
                  "             break;",
                  "         case 'object':",
                  "             const isArray = value instanceof Array;",
                  "             if (isNumberComparisons) {",
                  "                 throw new Error('object 类型的值不能使用 ' + comparison + ' 方式比较')",
                  "             } else if (isCollectionComparisons && isArray) {",
                  "              throw new Error('array 类型的值不能使用 ' + comparison + ' 方式比较')",
                  "            } else if (",
                  "              isArray &&",
                  "              comparison === 'include' &&",
                  "              value.includes(stringCompareValue)",
                  "            ) {",
                  "              compareValue = stringCompareValue;",
                  "            } else {",
                  "              try {",
                  "                  compareValue = JSON.parse(stringCompareValue);",
                  "              } catch (e) {",
                  "                  compareValue = stringCompareValue;",
                  "              }",
                  "            }",
                  "             break;",
                  "         case 'boolean':",
                  "             if (isNumberComparisons || isCollectionComparisons) {",
                  "                 throw new Error('boolean 类型的值不能使用 ' + comparison + ' 方式比较')",
                  "             }",
                  "             compareValue = stringCompareValue === 'true' ? true : (stringCompareValue === 'false' ? false : stringCompareValue);",
                  "             break;",
                  "           case 'bigint':",
                  "           case 'number':",
                  "             if (isNumberComparisons) {",
                  "               compareValue = ____string2Number(stringCompareValue);",
                  "             } else if (isCollectionComparisons) {",
                  "              compareValue = ____string2Array(stringCompareValue);",
                  "              value = '' + value;",
                  "            } else {",
                  "               compareValue = stringCompareValue;",
                  "               value = '' + value;",
                  "             }",
                  "             break;",
                  "         case 'null':",
                  "             if (isNumberComparisons) {",
                  "                 throw new Error('null 类型的值不能使用 ' + comparison + ' 方式比较')",
                  "             }",
                  "             compareValue = stringCompareValue === 'null' ? null : stringCompareValue;",
                  "             break;",
                  "         default:",
                  "            if (isCollectionComparisons) {",
                  "              compareValue = ____string2Array(stringCompareValue);",
                  "            } else {",
                  "              compareValue = stringCompareValue;",
                  "            }",
                  "            break;",
                  "     }",
                  "     return { compareValue, value };",
                  "   } catch(e) {",
                  "     console.log(e);",
                  "     throw e;",
                  "   }",
                  " }",
                  " "
                ]
              }
            },
            {
              "listen": "test",
              "script": {
                "id": "postProcessors.0.extractor",
                "type": "text/javascript",
                "exec": [
                  "",
                  "        if (JSON.setEnableBigInt) {",
                  "          JSON.setEnableBigInt(undefined);",
                  "        }",
                  "        ",
                  "      try{",
                  "        ",
                  "          const expression = pm.variables.replaceIn(`$.result.length`);",
                  "          const JSONPath = require('jsonpath-plus').JSONPath;",
                  "          const jsonData = pm.response.json();",
                  "          let value = JSONPath({",
                  "            json: jsonData,",
                  "            path: expression,",
                  "            wrap: false",
                  "          });",
                  "",
                  "          ",
                  "          if (false && undefined !== undefined) {",
                  "            if (Array.isArray(value)) {",
                  "              value = Number(undefined) >= 0 ? value[undefined] : value[value.length + Number(undefined)];",
                  "            } else {",
                  "              value = undefined;",
                  "            }",
                  "          }",
                  "          ",
                  "        ",
                  "        switch (typeof value) {",
                  "          case 'object':",
                  "            value = JSON.stringify(value);",
                  "            break;",
                  "          default:",
                  "            value = String(value);",
                  "            break;",
                  "        }",
                  "      ",
                  "        pm.environment.set(`num_later`, value);console.log('已设置环境变量【num_later】，值为 【' + value + '】')",
                  "      } catch(e) {",
                  "        e.message = '提取变量【num_later】出错: ' + e.message;",
                  "        throw e;",
                  "      }",
                  "  ",
                  "      "
                ]
              }
            },
            {
              "listen": "test",
              "script": {
                "id": "postProcessors.1.assertion",
                "type": "text/javascript",
                "exec": [
                  "",
                  "        if (JSON.setEnableBigInt) {",
                  "          JSON.setEnableBigInt(undefined);",
                  "        }",
                  "        pm.test(pm.variables.replaceIn(`quiz数量校验`), function() {",
                  "        ",
                  "          const expression = pm.variables.replaceIn(`num_pre`);",
                  "          const value = pm.environment.get(expression)",
                  "      ",
                  "        const formattedValues = ____formatValues(value, pm.variables.replaceIn(`{{num_later}}`), 'equal');",
                  "        pm.expect(formattedValues.value).to.eql(formattedValues.compareValue);",
                  "      });",
                  "      "
                ]
              }
            }
          ],
          "responseDefinition": {
            "id": 70049266,
            "createdAt": "2022-07-15T11:28:36.000Z",
            "updatedAt": "2022-07-15T11:29:54.000Z",
            "deletedAt": null,
            "apiDetailId": 29663288,
            "name": "成功",
            "code": 200,
            "contentType": "json",
            "jsonSchema": {
              "type": "object",
              "properties": {
                "result": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/13080595"
                  }
                }
              },
              "x-apifox-orders": [
                "result"
              ],
              "required": [
                "result"
              ]
            },
            "defaultEnable": true,
            "projectId": 0,
            "ordering": 1,
            "schemaDefinitions": {
              "1097305": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "integer",
                    "title": "user的id",
                    "mock": {
                      "mock": "@integer(10000)"
                    }
                  },
                  "username": {
                    "type": "string",
                    "title": "用户名",
                    "mock": {
                      "mock": "@cname"
                    }
                  },
                  "nickname": {
                    "type": "string",
                    "title": "昵称",
                    "mock": {
                      "mock": "@cname"
                    }
                  },
                  "email": {
                    "type": "string",
                    "title": "邮箱",
                    "mock": {
                      "mock": "@email"
                    }
                  },
                  "telephone": {
                    "type": "string",
                    "title": "电话"
                  },
                  "birthday": {
                    "type": "string",
                    "title": "生日",
                    "mock": {
                      "mock": "@date('yyyy-MM-dd')"
                    }
                  },
                  "avatar": {
                    "type": "string",
                    "title": "头像",
                    "description": "头像的url地址",
                    "mock": {
                      "mock": "@image"
                    }
                  },
                  "is_admin": {
                    "type": "boolean",
                    "title": "是否管理员",
                    "mock": {
                      "mock": "@boolean"
                    }
                  },
                  "county": {
                    "type": "string",
                    "title": "县区",
                    "description": "用户所在县区",
                    "mock": {
                      "mock": "@county"
                    }
                  },
                  "town": {
                    "type": "string",
                    "title": "乡镇",
                    "description": "用户所在乡镇",
                    "mock": {
                      "mock": "@county"
                    }
                  },
                  "registration_time": {
                    "type": "string",
                    "mock": {
                      "mock": "@datetime('yyyy-MM-dd HH:mm:ss')"
                    },
                    "title": "注册时间"
                  },
                  "login_time": {
                    "type": "string",
                    "mock": {
                      "mock": "@datetime('yyyy-MM-dd HH:mm:ss')"
                    },
                    "title": "登录时间"
                  },
                  "wechat": {
                    "type": "boolean",
                    "title": "绑定微信"
                  },
                  "points_sum": {
                    "type": "integer",
                    "title": "总分数",
                    "mock": {
                      "mock": "@integer(0)"
                    },
                    "minimum": 0
                  },
                  "points_now": {
                    "type": "integer",
                    "title": "现有分数",
                    "mock": {
                      "mock": "@integer(0)"
                    },
                    "minimum": 0
                  },
                  "title": {
                    "type": "object",
                    "properties": {
                      "color": {
                        "type": "string",
                        "mock": {
                          "mock": "@color"
                        },
                        "title": "颜色"
                      },
                      "title": {
                        "type": "string",
                        "mock": {
                          "mock": "@cword"
                        },
                        "title": "称号"
                      }
                    },
                    "title": "标题",
                    "mock": {
                      "mock": "@cname"
                    },
                    "x-apifox-orders": [
                      "title",
                      "color"
                    ],
                    "required": [
                      "title",
                      "color"
                    ]
                  }
                },
                "required": [
                  "id",
                  "email",
                  "username",
                  "is_admin",
                  "avatar",
                  "registration_time",
                  "login_time",
                  "nickname",
                  "telephone",
                  "birthday",
                  "county",
                  "town",
                  "wechat",
                  "points_sum",
                  "points_now",
                  "title"
                ],
                "x-apifox-orders": [
                  "id",
                  "username",
                  "nickname",
                  "email",
                  "telephone",
                  "birthday",
                  "avatar",
                  "is_admin",
                  "county",
                  "town",
                  "points_sum",
                  "points_now",
                  "title",
                  "registration_time",
                  "login_time",
                  "wechat"
                ],
                "title": "user_all",
                "name": "user_all"
              },
              "13080595": {
                "type": "object",
                "properties": {
                  "question": {
                    "type": "string",
                    "title": "问题",
                    "mock": {
                      "mock": "@ctitle"
                    }
                  },
                  "options": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "mock": {
                        "mock": "@csentence"
                      }
                    },
                    "title": "选项"
                  },
                  "explanation": {
                    "type": "string",
                    "title": "答案解析",
                    "mock": {
                      "mock": "@cparagraph"
                    }
                  },
                  "answer": {
                    "type": "integer",
                    "title": "答案序号",
                    "description": "options数组下标"
                  },
                  "id": {
                    "type": "integer"
                  },
                  "visibility": {
                    "type": "boolean",
                    "title": ""
                  },
                  "author": {
                    "$ref": "#/definitions/1097305"
                  },
                  "voice_source": {
                    "title": "播报语音链接",
                    "mock": {
                      "mock": "@url(\"http\")"
                    },
                    "type": [
                      "string",
                      "null"
                    ]
                  }
                },
                "x-apifox-orders": [
                  "question",
                  "options",
                  "answer",
                  "explanation",
                  "id",
                  "author",
                  "visibility",
                  "voice_source"
                ],
                "required": [
                  "question",
                  "answer",
                  "options",
                  "explanation",
                  "id",
                  "visibility",
                  "author",
                  "voice_source"
                ],
                "title": "quiz_all",
                "name": "quiz_all"
              }
            }
          },
          "requestDefinition": {
            "jsonSchema": {}
          },
          "metaInfo": {
            "httpApiId": 29663288,
            "httpApiCaseId": 37842102,
            "httpApiName": "QZ0201 搜索测试题",
            "httpApiPath": "/quizzes",
            "httpApiMethod": "get",
            "httpApiCaseName": "QZ0201 搜索测试题",
            "id": "bfb6eea5-826a-489b-b60d-09a349f5c4d5",
            "type": "http"
          },
          "type": "http",
          "protocolProfileBehavior": {
            "useWhatWGUrlParser": false,
            "disableUrlEncoding": false
          }
        },
        {
          "id": "d905f4c1-fa2a-42c5-8339-b9e6de9ae521",
          "name": "QZ0101 获取单个测试(QZ0101 获取单个测试)",
          "request": {
            "url": {
              "protocol": "http",
              "port": "8000",
              "path": [
                "quizzes",
                "{{quiz_id}}"
              ],
              "host": [
                "127",
                "0",
                "0",
                "1"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "User-Agent",
                "value": "Apifox/1.0.0 (https://www.apifox.cn)"
              }
            ],
            "method": "GET",
            "baseUrl": "http://127.0.0.1:8000",
            "body": {},
            "type": "http"
          },
          "response": [],
          "event": [],
          "responseDefinition": {
            "id": 69812670,
            "createdAt": "2022-07-15T06:52:36.000Z",
            "updatedAt": "2022-07-15T06:52:36.000Z",
            "deletedAt": null,
            "name": "不存在",
            "apiDetailId": 0,
            "projectId": 404238,
            "code": 404,
            "contentType": "json",
            "ordering": 30,
            "jsonSchema": {},
            "defaultEnable": false,
            "folderId": 0,
            "responseExamples": [],
            "schemaDefinitions": {}
          },
          "requestDefinition": {
            "jsonSchema": {}
          },
          "metaInfo": {
            "httpApiId": 29662407,
            "httpApiCaseId": 34623801,
            "httpApiName": "QZ0101 获取单个测试",
            "httpApiPath": "/quizzes/{id}",
            "httpApiMethod": "get",
            "httpApiCaseName": "QZ0101 获取单个测试",
            "id": "0276029a-1211-4e8d-a840-8a41d2796648",
            "type": "http"
          },
          "type": "http",
          "protocolProfileBehavior": {
            "useWhatWGUrlParser": false,
            "disableUrlEncoding": false
          }
        },
        {
          "id": "0a57af8b-0d37-441d-9fb9-7be4aeee298b",
          "name": "LG0101 账号密码登录(登录用户admin)",
          "request": {
            "url": {
              "protocol": "http",
              "port": "8000",
              "path": [
                "login"
              ],
              "host": [
                "127",
                "0",
                "0",
                "1"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "token",
                "value": "{{token}}"
              },
              {
                "key": "User-Agent",
                "value": "Apifox/1.0.0 (https://www.apifox.cn)"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "baseUrl": "http://127.0.0.1:8000",
            "body": {
              "mode": "raw",
              "raw": "{\r\n    \"username\": \"admin\",\r\n    \"password\": \"testtest123\"\r\n}",
              "type": "application/json"
            },
            "type": "http"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "postProcessors.0.extractor",
                "type": "text/javascript",
                "exec": [
                  "",
                  "        if (JSON.setEnableBigInt) {",
                  "          JSON.setEnableBigInt(undefined);",
                  "        }",
                  "        ",
                  "      try{",
                  "        ",
                  "          const expression = pm.variables.replaceIn(`$.token`);",
                  "          const JSONPath = require('jsonpath-plus').JSONPath;",
                  "          const jsonData = pm.response.json();",
                  "          let value = JSONPath({",
                  "            json: jsonData,",
                  "            path: expression,",
                  "            wrap: false",
                  "          });",
                  "",
                  "          ",
                  "          if (false && undefined !== undefined) {",
                  "            if (Array.isArray(value)) {",
                  "              value = Number(undefined) >= 0 ? value[undefined] : value[value.length + Number(undefined)];",
                  "            } else {",
                  "              value = undefined;",
                  "            }",
                  "          }",
                  "          ",
                  "        ",
                  "        switch (typeof value) {",
                  "          case 'object':",
                  "            value = JSON.stringify(value);",
                  "            break;",
                  "          default:",
                  "            value = String(value);",
                  "            break;",
                  "        }",
                  "      ",
                  "        pm.environment.set(`token`, value);console.log('已设置环境变量【token】，值为 【' + value + '】')",
                  "      } catch(e) {",
                  "        e.message = '提取变量【token】出错: ' + e.message;",
                  "        throw e;",
                  "      }",
                  "  ",
                  "      "
                ]
              }
            },
            {
              "listen": "test",
              "script": {
                "id": "postProcessors.1.extractor",
                "type": "text/javascript",
                "exec": [
                  "",
                  "        if (JSON.setEnableBigInt) {",
                  "          JSON.setEnableBigInt(undefined);",
                  "        }",
                  "        ",
                  "      try{",
                  "        ",
                  "          const expression = pm.variables.replaceIn(`$.id`);",
                  "          const JSONPath = require('jsonpath-plus').JSONPath;",
                  "          const jsonData = pm.response.json();",
                  "          let value = JSONPath({",
                  "            json: jsonData,",
                  "            path: expression,",
                  "            wrap: false",
                  "          });",
                  "",
                  "          ",
                  "          if (false && undefined !== undefined) {",
                  "            if (Array.isArray(value)) {",
                  "              value = Number(undefined) >= 0 ? value[undefined] : value[value.length + Number(undefined)];",
                  "            } else {",
                  "              value = undefined;",
                  "            }",
                  "          }",
                  "          ",
                  "        ",
                  "        switch (typeof value) {",
                  "          case 'object':",
                  "            value = JSON.stringify(value);",
                  "            break;",
                  "          default:",
                  "            value = String(value);",
                  "            break;",
                  "        }",
                  "      ",
                  "        pm.variables.set(`user_id`, value);console.log('已设置临时变量【user_id】，值为 【' + value + '】')",
                  "      } catch(e) {",
                  "        e.message = '提取变量【user_id】出错: ' + e.message;",
                  "        throw e;",
                  "      }",
                  "  ",
                  "      "
                ]
              }
            }
          ],
          "responseDefinition": {
            "id": 4183271,
            "createdAt": "2021-07-29T14:43:37.000Z",
            "updatedAt": "2021-08-12T16:27:18.000Z",
            "deletedAt": null,
            "apiDetailId": 5318056,
            "name": "成功",
            "code": 200,
            "contentType": "json",
            "jsonSchema": {
              "type": "object",
              "properties": {
                "token": {
                  "type": "string",
                  "mock": {
                    "mock": "@string"
                  },
                  "title": "权"
                },
                "id": {
                  "type": "integer",
                  "title": "用户id"
                }
              },
              "required": [
                "token",
                "id"
              ]
            },
            "defaultEnable": true,
            "projectId": 0,
            "ordering": 1,
            "schemaDefinitions": {}
          },
          "requestDefinition": {
            "jsonSchema": {
              "type": "object",
              "properties": {
                "username": {
                  "type": "string",
                  "mock": {
                    "mock": "@cname"
                  },
                  "title": "用户名"
                },
                "password": {
                  "type": "string",
                  "mock": {
                    "mock": "@string('lower', 1, 3)"
                  },
                  "title": "密码"
                }
              },
              "required": [
                "username",
                "password"
              ]
            }
          },
          "metaInfo": {
            "httpApiId": 5318056,
            "httpApiCaseId": 32697822,
            "httpApiName": "LG0101 账号密码登录",
            "httpApiPath": "/login",
            "httpApiMethod": "post",
            "httpApiCaseName": "登录用户admin",
            "id": "2ee587ea-6157-4f31-8a17-3843a496aa02",
            "type": "http"
          },
          "type": "http",
          "protocolProfileBehavior": {
            "useWhatWGUrlParser": false,
            "disableUrlEncoding": false
          }
        },
        {
          "id": "04d8d2ab-a7b8-4e00-8aa0-5642971928f6",
          "name": "QZ0105 审核测试题(QZ0105审核测试题)",
          "request": {
            "url": {
              "protocol": "http",
              "port": "8000",
              "path": [
                "quizzes",
                "{{quiz_id}}",
                "visibility"
              ],
              "host": [
                "127",
                "0",
                "0",
                "1"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "token",
                "value": "{{token}}"
              },
              {
                "key": "User-Agent",
                "value": "Apifox/1.0.0 (https://www.apifox.cn)"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "PUT",
            "baseUrl": "http://127.0.0.1:8000",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"result\": true,\n    \"reason\": \"quis\"\n}",
              "type": "application/json"
            },
            "type": "http"
          },
          "response": [],
          "event": [],
          "responseDefinition": {
            "id": 106182475,
            "createdAt": "2022-10-06T08:43:19.000Z",
            "updatedAt": "2022-10-06T08:43:19.000Z",
            "deletedAt": null,
            "apiDetailId": 42646298,
            "name": "成功",
            "code": 200,
            "contentType": "json",
            "jsonSchema": {
              "type": "object",
              "properties": {}
            },
            "defaultEnable": true,
            "projectId": 0,
            "ordering": 1,
            "schemaDefinitions": {}
          },
          "requestDefinition": {
            "jsonSchema": {
              "type": "object",
              "properties": {
                "result": {
                  "type": "boolean",
                  "title": "审核结果"
                },
                "reason": {
                  "type": "string",
                  "title": "原因"
                }
              },
              "x-apifox-orders": [
                "result",
                "reason"
              ],
              "required": [
                "result",
                "reason"
              ]
            }
          },
          "metaInfo": {
            "httpApiId": 42646298,
            "httpApiCaseId": 49776817,
            "httpApiName": "QZ0105 审核测试题",
            "httpApiPath": "/quizzes/{id}/visibility",
            "httpApiMethod": "put",
            "httpApiCaseName": "QZ0105审核测试题",
            "id": "2b41352d-cfe1-4dc7-82b2-0c9744311e71",
            "type": "http"
          },
          "type": "http",
          "protocolProfileBehavior": {
            "useWhatWGUrlParser": false,
            "disableUrlEncoding": false
          }
        },
        {
          "id": "1fc83a29-63d2-4953-a3ad-9c958a25e66c",
          "name": "QZ0101 获取单个测试(QZ0101 获取单个测试)",
          "request": {
            "url": {
              "protocol": "http",
              "port": "8000",
              "path": [
                "quizzes",
                "{{quiz_id}}"
              ],
              "host": [
                "127",
                "0",
                "0",
                "1"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "User-Agent",
                "value": "Apifox/1.0.0 (https://www.apifox.cn)"
              }
            ],
            "method": "GET",
            "baseUrl": "http://127.0.0.1:8000",
            "body": {},
            "type": "http"
          },
          "response": [],
          "event": [],
          "responseDefinition": {
            "id": 70047710,
            "createdAt": "2022-07-15T11:04:02.000Z",
            "updatedAt": "2022-07-23T07:28:13.000Z",
            "deletedAt": null,
            "apiDetailId": 29662407,
            "name": "成功",
            "code": 200,
            "contentType": "json",
            "jsonSchema": {
              "x-apifox-overrides": {},
              "type": "object",
              "properties": {
                "quiz": {
                  "$ref": "#/definitions/13080595",
                  "x-apifox-overrides": {}
                }
              },
              "x-apifox-refs": {},
              "x-apifox-orders": [
                "quiz"
              ],
              "required": [
                "quiz"
              ]
            },
            "defaultEnable": true,
            "projectId": 0,
            "ordering": 1,
            "schemaDefinitions": {
              "1097305": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "integer",
                    "title": "user的id",
                    "mock": {
                      "mock": "@integer(10000)"
                    }
                  },
                  "username": {
                    "type": "string",
                    "title": "用户名",
                    "mock": {
                      "mock": "@cname"
                    }
                  },
                  "nickname": {
                    "type": "string",
                    "title": "昵称",
                    "mock": {
                      "mock": "@cname"
                    }
                  },
                  "email": {
                    "type": "string",
                    "title": "邮箱",
                    "mock": {
                      "mock": "@email"
                    }
                  },
                  "telephone": {
                    "type": "string",
                    "title": "电话"
                  },
                  "birthday": {
                    "type": "string",
                    "title": "生日",
                    "mock": {
                      "mock": "@date('yyyy-MM-dd')"
                    }
                  },
                  "avatar": {
                    "type": "string",
                    "title": "头像",
                    "description": "头像的url地址",
                    "mock": {
                      "mock": "@image"
                    }
                  },
                  "is_admin": {
                    "type": "boolean",
                    "title": "是否管理员",
                    "mock": {
                      "mock": "@boolean"
                    }
                  },
                  "county": {
                    "type": "string",
                    "title": "县区",
                    "description": "用户所在县区",
                    "mock": {
                      "mock": "@county"
                    }
                  },
                  "town": {
                    "type": "string",
                    "title": "乡镇",
                    "description": "用户所在乡镇",
                    "mock": {
                      "mock": "@county"
                    }
                  },
                  "registration_time": {
                    "type": "string",
                    "mock": {
                      "mock": "@datetime('yyyy-MM-dd HH:mm:ss')"
                    },
                    "title": "注册时间"
                  },
                  "login_time": {
                    "type": "string",
                    "mock": {
                      "mock": "@datetime('yyyy-MM-dd HH:mm:ss')"
                    },
                    "title": "登录时间"
                  },
                  "wechat": {
                    "type": "boolean",
                    "title": "绑定微信"
                  },
                  "points_sum": {
                    "type": "integer",
                    "title": "总分数",
                    "mock": {
                      "mock": "@integer(0)"
                    },
                    "minimum": 0
                  },
                  "points_now": {
                    "type": "integer",
                    "title": "现有分数",
                    "mock": {
                      "mock": "@integer(0)"
                    },
                    "minimum": 0
                  },
                  "title": {
                    "type": "object",
                    "properties": {
                      "color": {
                        "type": "string",
                        "mock": {
                          "mock": "@color"
                        },
                        "title": "颜色"
                      },
                      "title": {
                        "type": "string",
                        "mock": {
                          "mock": "@cword"
                        },
                        "title": "称号"
                      }
                    },
                    "title": "标题",
                    "mock": {
                      "mock": "@cname"
                    },
                    "x-apifox-orders": [
                      "title",
                      "color"
                    ],
                    "required": [
                      "title",
                      "color"
                    ]
                  }
                },
                "required": [
                  "id",
                  "email",
                  "username",
                  "is_admin",
                  "avatar",
                  "registration_time",
                  "login_time",
                  "nickname",
                  "telephone",
                  "birthday",
                  "county",
                  "town",
                  "wechat",
                  "points_sum",
                  "points_now",
                  "title"
                ],
                "x-apifox-orders": [
                  "id",
                  "username",
                  "nickname",
                  "email",
                  "telephone",
                  "birthday",
                  "avatar",
                  "is_admin",
                  "county",
                  "town",
                  "points_sum",
                  "points_now",
                  "title",
                  "registration_time",
                  "login_time",
                  "wechat"
                ],
                "title": "user_all",
                "name": "user_all"
              },
              "13080595": {
                "type": "object",
                "properties": {
                  "question": {
                    "type": "string",
                    "title": "问题",
                    "mock": {
                      "mock": "@ctitle"
                    }
                  },
                  "options": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "mock": {
                        "mock": "@csentence"
                      }
                    },
                    "title": "选项"
                  },
                  "explanation": {
                    "type": "string",
                    "title": "答案解析",
                    "mock": {
                      "mock": "@cparagraph"
                    }
                  },
                  "answer": {
                    "type": "integer",
                    "title": "答案序号",
                    "description": "options数组下标"
                  },
                  "id": {
                    "type": "integer"
                  },
                  "visibility": {
                    "type": "boolean",
                    "title": ""
                  },
                  "author": {
                    "$ref": "#/definitions/1097305"
                  },
                  "voice_source": {
                    "title": "播报语音链接",
                    "mock": {
                      "mock": "@url(\"http\")"
                    },
                    "type": [
                      "string",
                      "null"
                    ]
                  }
                },
                "x-apifox-orders": [
                  "question",
                  "options",
                  "answer",
                  "explanation",
                  "id",
                  "author",
                  "visibility",
                  "voice_source"
                ],
                "required": [
                  "question",
                  "answer",
                  "options",
                  "explanation",
                  "id",
                  "visibility",
                  "author",
                  "voice_source"
                ],
                "title": "quiz_all",
                "name": "quiz_all"
              }
            }
          },
          "requestDefinition": {
            "jsonSchema": {}
          },
          "metaInfo": {
            "httpApiId": 29662407,
            "httpApiCaseId": 49776823,
            "httpApiName": "QZ0101 获取单个测试",
            "httpApiPath": "/quizzes/{id}",
            "httpApiMethod": "get",
            "httpApiCaseName": "QZ0101 获取单个测试",
            "id": "bf67583c-6eee-48f1-a22b-f9d1a29f9d8b",
            "type": "http"
          },
          "type": "http",
          "protocolProfileBehavior": {
            "useWhatWGUrlParser": false,
            "disableUrlEncoding": false
          }
        },
        {
          "id": "ff676528-dd71-4ee1-a691-5a4efea62f36",
          "name": "QZ0103 修改单个测试(QZ0103 修改单个测试)",
          "request": {
            "url": {
              "protocol": "http",
              "port": "8000",
              "path": [
                "quizzes",
                "{{quiz_id}}"
              ],
              "host": [
                "127",
                "0",
                "0",
                "1"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "token",
                "value": "{{token}}"
              },
              {
                "key": "User-Agent",
                "value": "Apifox/1.0.0 (https://www.apifox.cn)"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "PUT",
            "baseUrl": "http://127.0.0.1:8000",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"quiz\": {\n        \"question\": \"酸者部三值出\",\n        \"options\": [\n            \"什取无新联线东产造代平声极切到存却。\",\n            \"去物片对道采各化样委两张厂取技。\",\n            \"产张才回何看元整系温验解想算酸。\",\n            \"车为志提规展海回了带各较者己导科。\",\n            \"度实张据无变把调方极或界设约月系。\"\n        ],\n        \"answer\": 64,\n        \"explanation\": \"选新克导规进主与每白性起精比。分心引小相但义消第比万分权它在。教结素毛工式安却办消权场委展。广织众级热该导百接期音与院意。\",\n        \"voice_source\": \"http://swuce.ua/cnnt\"\n    }\n}",
              "type": "application/json"
            },
            "type": "http"
          },
          "response": [],
          "event": [],
          "responseDefinition": {
            "id": 70048846,
            "createdAt": "2022-07-15T11:23:50.000Z",
            "updatedAt": "2022-07-23T08:32:09.000Z",
            "deletedAt": null,
            "apiDetailId": 29663120,
            "name": "成功",
            "code": 200,
            "contentType": "json",
            "jsonSchema": {
              "type": "object",
              "properties": {
                "quiz": {
                  "$ref": "#/definitions/13080595",
                  "x-apifox-overrides": {}
                }
              },
              "x-apifox-orders": [
                "quiz"
              ],
              "required": [
                "quiz"
              ]
            },
            "defaultEnable": true,
            "projectId": 0,
            "ordering": 1,
            "schemaDefinitions": {
              "1097305": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "integer",
                    "title": "user的id",
                    "mock": {
                      "mock": "@integer(10000)"
                    }
                  },
                  "username": {
                    "type": "string",
                    "title": "用户名",
                    "mock": {
                      "mock": "@cname"
                    }
                  },
                  "nickname": {
                    "type": "string",
                    "title": "昵称",
                    "mock": {
                      "mock": "@cname"
                    }
                  },
                  "email": {
                    "type": "string",
                    "title": "邮箱",
                    "mock": {
                      "mock": "@email"
                    }
                  },
                  "telephone": {
                    "type": "string",
                    "title": "电话"
                  },
                  "birthday": {
                    "type": "string",
                    "title": "生日",
                    "mock": {
                      "mock": "@date('yyyy-MM-dd')"
                    }
                  },
                  "avatar": {
                    "type": "string",
                    "title": "头像",
                    "description": "头像的url地址",
                    "mock": {
                      "mock": "@image"
                    }
                  },
                  "is_admin": {
                    "type": "boolean",
                    "title": "是否管理员",
                    "mock": {
                      "mock": "@boolean"
                    }
                  },
                  "county": {
                    "type": "string",
                    "title": "县区",
                    "description": "用户所在县区",
                    "mock": {
                      "mock": "@county"
                    }
                  },
                  "town": {
                    "type": "string",
                    "title": "乡镇",
                    "description": "用户所在乡镇",
                    "mock": {
                      "mock": "@county"
                    }
                  },
                  "registration_time": {
                    "type": "string",
                    "mock": {
                      "mock": "@datetime('yyyy-MM-dd HH:mm:ss')"
                    },
                    "title": "注册时间"
                  },
                  "login_time": {
                    "type": "string",
                    "mock": {
                      "mock": "@datetime('yyyy-MM-dd HH:mm:ss')"
                    },
                    "title": "登录时间"
                  },
                  "wechat": {
                    "type": "boolean",
                    "title": "绑定微信"
                  },
                  "points_sum": {
                    "type": "integer",
                    "title": "总分数",
                    "mock": {
                      "mock": "@integer(0)"
                    },
                    "minimum": 0
                  },
                  "points_now": {
                    "type": "integer",
                    "title": "现有分数",
                    "mock": {
                      "mock": "@integer(0)"
                    },
                    "minimum": 0
                  },
                  "title": {
                    "type": "object",
                    "properties": {
                      "color": {
                        "type": "string",
                        "mock": {
                          "mock": "@color"
                        },
                        "title": "颜色"
                      },
                      "title": {
                        "type": "string",
                        "mock": {
                          "mock": "@cword"
                        },
                        "title": "称号"
                      }
                    },
                    "title": "标题",
                    "mock": {
                      "mock": "@cname"
                    },
                    "x-apifox-orders": [
                      "title",
                      "color"
                    ],
                    "required": [
                      "title",
                      "color"
                    ]
                  }
                },
                "required": [
                  "id",
                  "email",
                  "username",
                  "is_admin",
                  "avatar",
                  "registration_time",
                  "login_time",
                  "nickname",
                  "telephone",
                  "birthday",
                  "county",
                  "town",
                  "wechat",
                  "points_sum",
                  "points_now",
                  "title"
                ],
                "x-apifox-orders": [
                  "id",
                  "username",
                  "nickname",
                  "email",
                  "telephone",
                  "birthday",
                  "avatar",
                  "is_admin",
                  "county",
                  "town",
                  "points_sum",
                  "points_now",
                  "title",
                  "registration_time",
                  "login_time",
                  "wechat"
                ],
                "title": "user_all",
                "name": "user_all"
              },
              "13080595": {
                "type": "object",
                "properties": {
                  "question": {
                    "type": "string",
                    "title": "问题",
                    "mock": {
                      "mock": "@ctitle"
                    }
                  },
                  "options": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "mock": {
                        "mock": "@csentence"
                      }
                    },
                    "title": "选项"
                  },
                  "explanation": {
                    "type": "string",
                    "title": "答案解析",
                    "mock": {
                      "mock": "@cparagraph"
                    }
                  },
                  "answer": {
                    "type": "integer",
                    "title": "答案序号",
                    "description": "options数组下标"
                  },
                  "id": {
                    "type": "integer"
                  },
                  "visibility": {
                    "type": "boolean",
                    "title": ""
                  },
                  "author": {
                    "$ref": "#/definitions/1097305"
                  },
                  "voice_source": {
                    "title": "播报语音链接",
                    "mock": {
                      "mock": "@url(\"http\")"
                    },
                    "type": [
                      "string",
                      "null"
                    ]
                  }
                },
                "x-apifox-orders": [
                  "question",
                  "options",
                  "answer",
                  "explanation",
                  "id",
                  "author",
                  "visibility",
                  "voice_source"
                ],
                "required": [
                  "question",
                  "answer",
                  "options",
                  "explanation",
                  "id",
                  "visibility",
                  "author",
                  "voice_source"
                ],
                "title": "quiz_all",
                "name": "quiz_all"
              }
            }
          },
          "requestDefinition": {
            "jsonSchema": {
              "x-apifox-overrides": {},
              "type": "object",
              "x-apifox-refs": {},
              "properties": {
                "quiz": {
                  "$ref": "#/definitions/13080737",
                  "x-apifox-overrides": {}
                }
              },
              "required": [
                "quiz"
              ],
              "x-apifox-orders": [
                "quiz"
              ]
            }
          },
          "metaInfo": {
            "httpApiId": 29663120,
            "httpApiCaseId": 34623802,
            "httpApiName": "QZ0103 修改单个测试",
            "httpApiPath": "/quizzes/{id}",
            "httpApiMethod": "put",
            "httpApiCaseName": "QZ0103 修改单个测试",
            "id": "abc82463-4581-4eab-8d16-fda7f3f8160c",
            "type": "http"
          },
          "type": "http",
          "protocolProfileBehavior": {
            "useWhatWGUrlParser": false,
            "disableUrlEncoding": false
          }
        },
        {
          "id": "e7f19091-6668-4634-82f1-11d6b83747c3",
          "name": "QZ0101 获取单个测试(QZ0101 获取单个测试)",
          "request": {
            "url": {
              "protocol": "http",
              "port": "8000",
              "path": [
                "quizzes",
                "{{quiz_id}}"
              ],
              "host": [
                "127",
                "0",
                "0",
                "1"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "User-Agent",
                "value": "Apifox/1.0.0 (https://www.apifox.cn)"
              }
            ],
            "method": "GET",
            "baseUrl": "http://127.0.0.1:8000",
            "body": {},
            "type": "http"
          },
          "response": [],
          "event": [],
          "responseDefinition": {
            "id": 69812670,
            "createdAt": "2022-07-15T06:52:36.000Z",
            "updatedAt": "2022-07-15T06:52:36.000Z",
            "deletedAt": null,
            "name": "不存在",
            "apiDetailId": 0,
            "projectId": 404238,
            "code": 404,
            "contentType": "json",
            "ordering": 30,
            "jsonSchema": {},
            "defaultEnable": false,
            "folderId": 0,
            "responseExamples": [],
            "schemaDefinitions": {}
          },
          "requestDefinition": {
            "jsonSchema": {}
          },
          "metaInfo": {
            "httpApiId": 29662407,
            "httpApiCaseId": 38220543,
            "httpApiName": "QZ0101 获取单个测试",
            "httpApiPath": "/quizzes/{id}",
            "httpApiMethod": "get",
            "httpApiCaseName": "QZ0101 获取单个测试",
            "id": "abf2a403-e22d-4dd4-9d22-722469300488",
            "type": "http"
          },
          "type": "http",
          "protocolProfileBehavior": {
            "useWhatWGUrlParser": false,
            "disableUrlEncoding": false
          }
        },
        {
          "id": "fa2485bb-554d-4d4f-995b-86b500f06cf6",
          "name": "QZ0105 审核测试题(QZ0105审核测试题)",
          "request": {
            "url": {
              "protocol": "http",
              "port": "8000",
              "path": [
                "quizzes",
                "{{quiz_id}}",
                "visibility"
              ],
              "host": [
                "127",
                "0",
                "0",
                "1"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "token",
                "value": "{{token}}"
              },
              {
                "key": "User-Agent",
                "value": "Apifox/1.0.0 (https://www.apifox.cn)"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "PUT",
            "baseUrl": "http://127.0.0.1:8000",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"result\": true,\n    \"reason\": \"quis\"\n}",
              "type": "application/json"
            },
            "type": "http"
          },
          "response": [],
          "event": [],
          "responseDefinition": {
            "id": 106182475,
            "createdAt": "2022-10-06T08:43:19.000Z",
            "updatedAt": "2022-10-06T08:43:19.000Z",
            "deletedAt": null,
            "apiDetailId": 42646298,
            "name": "成功",
            "code": 200,
            "contentType": "json",
            "jsonSchema": {
              "type": "object",
              "properties": {}
            },
            "defaultEnable": true,
            "projectId": 0,
            "ordering": 1,
            "schemaDefinitions": {}
          },
          "requestDefinition": {
            "jsonSchema": {
              "type": "object",
              "properties": {
                "result": {
                  "type": "boolean",
                  "title": "审核结果"
                },
                "reason": {
                  "type": "string",
                  "title": "原因"
                }
              },
              "x-apifox-orders": [
                "result",
                "reason"
              ],
              "required": [
                "result",
                "reason"
              ]
            }
          },
          "metaInfo": {
            "httpApiId": 42646298,
            "httpApiCaseId": 49783829,
            "httpApiName": "QZ0105 审核测试题",
            "httpApiPath": "/quizzes/{id}/visibility",
            "httpApiMethod": "put",
            "httpApiCaseName": "QZ0105审核测试题",
            "id": "0d184ffb-8e4c-4cce-9a21-35496ab4ea21",
            "type": "http"
          },
          "type": "http",
          "protocolProfileBehavior": {
            "useWhatWGUrlParser": false,
            "disableUrlEncoding": false
          }
        },
        {
          "id": "2c1e0c0b-6807-42a0-a8c8-ec3534caadb5",
          "name": "QZ0101 获取单个测试(QZ0101 获取单个测试)",
          "request": {
            "url": {
              "protocol": "http",
              "port": "8000",
              "path": [
                "quizzes",
                "{{quiz_id}}"
              ],
              "host": [
                "127",
                "0",
                "0",
                "1"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "User-Agent",
                "value": "Apifox/1.0.0 (https://www.apifox.cn)"
              }
            ],
            "method": "GET",
            "baseUrl": "http://127.0.0.1:8000",
            "body": {},
            "type": "http"
          },
          "response": [],
          "event": [],
          "responseDefinition": {
            "id": 70047710,
            "createdAt": "2022-07-15T11:04:02.000Z",
            "updatedAt": "2022-07-23T07:28:13.000Z",
            "deletedAt": null,
            "apiDetailId": 29662407,
            "name": "成功",
            "code": 200,
            "contentType": "json",
            "jsonSchema": {
              "x-apifox-overrides": {},
              "type": "object",
              "properties": {
                "quiz": {
                  "$ref": "#/definitions/13080595",
                  "x-apifox-overrides": {}
                }
              },
              "x-apifox-refs": {},
              "x-apifox-orders": [
                "quiz"
              ],
              "required": [
                "quiz"
              ]
            },
            "defaultEnable": true,
            "projectId": 0,
            "ordering": 1,
            "schemaDefinitions": {
              "1097305": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "integer",
                    "title": "user的id",
                    "mock": {
                      "mock": "@integer(10000)"
                    }
                  },
                  "username": {
                    "type": "string",
                    "title": "用户名",
                    "mock": {
                      "mock": "@cname"
                    }
                  },
                  "nickname": {
                    "type": "string",
                    "title": "昵称",
                    "mock": {
                      "mock": "@cname"
                    }
                  },
                  "email": {
                    "type": "string",
                    "title": "邮箱",
                    "mock": {
                      "mock": "@email"
                    }
                  },
                  "telephone": {
                    "type": "string",
                    "title": "电话"
                  },
                  "birthday": {
                    "type": "string",
                    "title": "生日",
                    "mock": {
                      "mock": "@date('yyyy-MM-dd')"
                    }
                  },
                  "avatar": {
                    "type": "string",
                    "title": "头像",
                    "description": "头像的url地址",
                    "mock": {
                      "mock": "@image"
                    }
                  },
                  "is_admin": {
                    "type": "boolean",
                    "title": "是否管理员",
                    "mock": {
                      "mock": "@boolean"
                    }
                  },
                  "county": {
                    "type": "string",
                    "title": "县区",
                    "description": "用户所在县区",
                    "mock": {
                      "mock": "@county"
                    }
                  },
                  "town": {
                    "type": "string",
                    "title": "乡镇",
                    "description": "用户所在乡镇",
                    "mock": {
                      "mock": "@county"
                    }
                  },
                  "registration_time": {
                    "type": "string",
                    "mock": {
                      "mock": "@datetime('yyyy-MM-dd HH:mm:ss')"
                    },
                    "title": "注册时间"
                  },
                  "login_time": {
                    "type": "string",
                    "mock": {
                      "mock": "@datetime('yyyy-MM-dd HH:mm:ss')"
                    },
                    "title": "登录时间"
                  },
                  "wechat": {
                    "type": "boolean",
                    "title": "绑定微信"
                  },
                  "points_sum": {
                    "type": "integer",
                    "title": "总分数",
                    "mock": {
                      "mock": "@integer(0)"
                    },
                    "minimum": 0
                  },
                  "points_now": {
                    "type": "integer",
                    "title": "现有分数",
                    "mock": {
                      "mock": "@integer(0)"
                    },
                    "minimum": 0
                  },
                  "title": {
                    "type": "object",
                    "properties": {
                      "color": {
                        "type": "string",
                        "mock": {
                          "mock": "@color"
                        },
                        "title": "颜色"
                      },
                      "title": {
                        "type": "string",
                        "mock": {
                          "mock": "@cword"
                        },
                        "title": "称号"
                      }
                    },
                    "title": "标题",
                    "mock": {
                      "mock": "@cname"
                    },
                    "x-apifox-orders": [
                      "title",
                      "color"
                    ],
                    "required": [
                      "title",
                      "color"
                    ]
                  }
                },
                "required": [
                  "id",
                  "email",
                  "username",
                  "is_admin",
                  "avatar",
                  "registration_time",
                  "login_time",
                  "nickname",
                  "telephone",
                  "birthday",
                  "county",
                  "town",
                  "wechat",
                  "points_sum",
                  "points_now",
                  "title"
                ],
                "x-apifox-orders": [
                  "id",
                  "username",
                  "nickname",
                  "email",
                  "telephone",
                  "birthday",
                  "avatar",
                  "is_admin",
                  "county",
                  "town",
                  "points_sum",
                  "points_now",
                  "title",
                  "registration_time",
                  "login_time",
                  "wechat"
                ],
                "title": "user_all",
                "name": "user_all"
              },
              "13080595": {
                "type": "object",
                "properties": {
                  "question": {
                    "type": "string",
                    "title": "问题",
                    "mock": {
                      "mock": "@ctitle"
                    }
                  },
                  "options": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "mock": {
                        "mock": "@csentence"
                      }
                    },
                    "title": "选项"
                  },
                  "explanation": {
                    "type": "string",
                    "title": "答案解析",
                    "mock": {
                      "mock": "@cparagraph"
                    }
                  },
                  "answer": {
                    "type": "integer",
                    "title": "答案序号",
                    "description": "options数组下标"
                  },
                  "id": {
                    "type": "integer"
                  },
                  "visibility": {
                    "type": "boolean",
                    "title": ""
                  },
                  "author": {
                    "$ref": "#/definitions/1097305"
                  },
                  "voice_source": {
                    "title": "播报语音链接",
                    "mock": {
                      "mock": "@url(\"http\")"
                    },
                    "type": [
                      "string",
                      "null"
                    ]
                  }
                },
                "x-apifox-orders": [
                  "question",
                  "options",
                  "answer",
                  "explanation",
                  "id",
                  "author",
                  "visibility",
                  "voice_source"
                ],
                "required": [
                  "question",
                  "answer",
                  "options",
                  "explanation",
                  "id",
                  "visibility",
                  "author",
                  "voice_source"
                ],
                "title": "quiz_all",
                "name": "quiz_all"
              }
            }
          },
          "requestDefinition": {
            "jsonSchema": {}
          },
          "metaInfo": {
            "httpApiId": 29662407,
            "httpApiCaseId": 65334137,
            "httpApiName": "QZ0101 获取单个测试",
            "httpApiPath": "/quizzes/{id}",
            "httpApiMethod": "get",
            "httpApiCaseName": "QZ0101 获取单个测试",
            "id": "82e5ddb4-7b21-4700-9150-c15dd54ea9ed",
            "type": "http"
          },
          "type": "http",
          "protocolProfileBehavior": {
            "useWhatWGUrlParser": false,
            "disableUrlEncoding": false
          }
        },
        {
          "id": "28b1a2d4-5377-49ca-883e-6e94203faaa3",
          "name": "QZ0103 修改单个测试(QZ0103 修改单个测试)",
          "request": {
            "url": {
              "protocol": "http",
              "port": "8000",
              "path": [
                "quizzes",
                "{{quiz_id}}"
              ],
              "host": [
                "127",
                "0",
                "0",
                "1"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "token",
                "value": "{{token}}"
              },
              {
                "key": "User-Agent",
                "value": "Apifox/1.0.0 (https://www.apifox.cn)"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "PUT",
            "baseUrl": "http://127.0.0.1:8000",
            "body": {
              "mode": "raw",
              "raw": "{\r\n    \"quiz\": {\r\n        \"question\": \"深时当行育\",\r\n        \"options\": [\r\n            \"品眼进复队任西常意统把下。\",\r\n            \"全这素什角证西信活除起或。\",\r\n            \"调层率术么品八色图科数具解路己安能题。\",\r\n            \"看国族样给声自级处两商般律发。\"\r\n        ],\r\n        \"answer\": 8,\r\n        \"explanation\": \"反现亲向而段养文等表参例经。设适住种何资用了取流量员今满事相。成区已才议争联而战民立象小始务民。决可体土报经青用保量适变儿并科。级劳流可八圆律支八满族想其表按。近心安风给生拉管求权党会维品车育。\",\r\n        \"voice_source\": \"\"\r\n    }\r\n}",
              "type": "application/json"
            },
            "type": "http"
          },
          "response": [],
          "event": [],
          "responseDefinition": {
            "id": 70048846,
            "createdAt": "2022-07-15T11:23:50.000Z",
            "updatedAt": "2022-07-23T08:32:09.000Z",
            "deletedAt": null,
            "apiDetailId": 29663120,
            "name": "成功",
            "code": 200,
            "contentType": "json",
            "jsonSchema": {
              "type": "object",
              "properties": {
                "quiz": {
                  "$ref": "#/definitions/13080595",
                  "x-apifox-overrides": {}
                }
              },
              "x-apifox-orders": [
                "quiz"
              ],
              "required": [
                "quiz"
              ]
            },
            "defaultEnable": true,
            "projectId": 0,
            "ordering": 1,
            "schemaDefinitions": {
              "1097305": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "integer",
                    "title": "user的id",
                    "mock": {
                      "mock": "@integer(10000)"
                    }
                  },
                  "username": {
                    "type": "string",
                    "title": "用户名",
                    "mock": {
                      "mock": "@cname"
                    }
                  },
                  "nickname": {
                    "type": "string",
                    "title": "昵称",
                    "mock": {
                      "mock": "@cname"
                    }
                  },
                  "email": {
                    "type": "string",
                    "title": "邮箱",
                    "mock": {
                      "mock": "@email"
                    }
                  },
                  "telephone": {
                    "type": "string",
                    "title": "电话"
                  },
                  "birthday": {
                    "type": "string",
                    "title": "生日",
                    "mock": {
                      "mock": "@date('yyyy-MM-dd')"
                    }
                  },
                  "avatar": {
                    "type": "string",
                    "title": "头像",
                    "description": "头像的url地址",
                    "mock": {
                      "mock": "@image"
                    }
                  },
                  "is_admin": {
                    "type": "boolean",
                    "title": "是否管理员",
                    "mock": {
                      "mock": "@boolean"
                    }
                  },
                  "county": {
                    "type": "string",
                    "title": "县区",
                    "description": "用户所在县区",
                    "mock": {
                      "mock": "@county"
                    }
                  },
                  "town": {
                    "type": "string",
                    "title": "乡镇",
                    "description": "用户所在乡镇",
                    "mock": {
                      "mock": "@county"
                    }
                  },
                  "registration_time": {
                    "type": "string",
                    "mock": {
                      "mock": "@datetime('yyyy-MM-dd HH:mm:ss')"
                    },
                    "title": "注册时间"
                  },
                  "login_time": {
                    "type": "string",
                    "mock": {
                      "mock": "@datetime('yyyy-MM-dd HH:mm:ss')"
                    },
                    "title": "登录时间"
                  },
                  "wechat": {
                    "type": "boolean",
                    "title": "绑定微信"
                  },
                  "points_sum": {
                    "type": "integer",
                    "title": "总分数",
                    "mock": {
                      "mock": "@integer(0)"
                    },
                    "minimum": 0
                  },
                  "points_now": {
                    "type": "integer",
                    "title": "现有分数",
                    "mock": {
                      "mock": "@integer(0)"
                    },
                    "minimum": 0
                  },
                  "title": {
                    "type": "object",
                    "properties": {
                      "color": {
                        "type": "string",
                        "mock": {
                          "mock": "@color"
                        },
                        "title": "颜色"
                      },
                      "title": {
                        "type": "string",
                        "mock": {
                          "mock": "@cword"
                        },
                        "title": "称号"
                      }
                    },
                    "title": "标题",
                    "mock": {
                      "mock": "@cname"
                    },
                    "x-apifox-orders": [
                      "title",
                      "color"
                    ],
                    "required": [
                      "title",
                      "color"
                    ]
                  }
                },
                "required": [
                  "id",
                  "email",
                  "username",
                  "is_admin",
                  "avatar",
                  "registration_time",
                  "login_time",
                  "nickname",
                  "telephone",
                  "birthday",
                  "county",
                  "town",
                  "wechat",
                  "points_sum",
                  "points_now",
                  "title"
                ],
                "x-apifox-orders": [
                  "id",
                  "username",
                  "nickname",
                  "email",
                  "telephone",
                  "birthday",
                  "avatar",
                  "is_admin",
                  "county",
                  "town",
                  "points_sum",
                  "points_now",
                  "title",
                  "registration_time",
                  "login_time",
                  "wechat"
                ],
                "title": "user_all",
                "name": "user_all"
              },
              "13080595": {
                "type": "object",
                "properties": {
                  "question": {
                    "type": "string",
                    "title": "问题",
                    "mock": {
                      "mock": "@ctitle"
                    }
                  },
                  "options": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "mock": {
                        "mock": "@csentence"
                      }
                    },
                    "title": "选项"
                  },
                  "explanation": {
                    "type": "string",
                    "title": "答案解析",
                    "mock": {
                      "mock": "@cparagraph"
                    }
                  },
                  "answer": {
                    "type": "integer",
                    "title": "答案序号",
                    "description": "options数组下标"
                  },
                  "id": {
                    "type": "integer"
                  },
                  "visibility": {
                    "type": "boolean",
                    "title": ""
                  },
                  "author": {
                    "$ref": "#/definitions/1097305"
                  },
                  "voice_source": {
                    "title": "播报语音链接",
                    "mock": {
                      "mock": "@url(\"http\")"
                    },
                    "type": [
                      "string",
                      "null"
                    ]
                  }
                },
                "x-apifox-orders": [
                  "question",
                  "options",
                  "answer",
                  "explanation",
                  "id",
                  "author",
                  "visibility",
                  "voice_source"
                ],
                "required": [
                  "question",
                  "answer",
                  "options",
                  "explanation",
                  "id",
                  "visibility",
                  "author",
                  "voice_source"
                ],
                "title": "quiz_all",
                "name": "quiz_all"
              }
            }
          },
          "requestDefinition": {
            "jsonSchema": {
              "x-apifox-overrides": {},
              "type": "object",
              "x-apifox-refs": {},
              "properties": {
                "quiz": {
                  "$ref": "#/definitions/13080737",
                  "x-apifox-overrides": {}
                }
              },
              "required": [
                "quiz"
              ],
              "x-apifox-orders": [
                "quiz"
              ]
            }
          },
          "metaInfo": {
            "httpApiId": 29663120,
            "httpApiCaseId": 65334227,
            "httpApiName": "QZ0103 修改单个测试",
            "httpApiPath": "/quizzes/{id}",
            "httpApiMethod": "put",
            "httpApiCaseName": "QZ0103 修改单个测试",
            "id": "20934c55-b354-4f09-88ef-407073a77ab4",
            "type": "http"
          },
          "type": "http",
          "protocolProfileBehavior": {
            "useWhatWGUrlParser": false,
            "disableUrlEncoding": false
          }
        },
        {
          "id": "2214d9bf-911c-41f3-a52f-28f06658a70c",
          "name": "QZ0101 获取单个测试(QZ0101 获取单个测试)",
          "request": {
            "url": {
              "protocol": "http",
              "port": "8000",
              "path": [
                "quizzes",
                "{{quiz_id}}"
              ],
              "host": [
                "127",
                "0",
                "0",
                "1"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "User-Agent",
                "value": "Apifox/1.0.0 (https://www.apifox.cn)"
              }
            ],
            "method": "GET",
            "baseUrl": "http://127.0.0.1:8000",
            "body": {},
            "type": "http"
          },
          "response": [],
          "event": [],
          "responseDefinition": {
            "id": 69812670,
            "createdAt": "2022-07-15T06:52:36.000Z",
            "updatedAt": "2022-07-15T06:52:36.000Z",
            "deletedAt": null,
            "name": "不存在",
            "apiDetailId": 0,
            "projectId": 404238,
            "code": 404,
            "contentType": "json",
            "ordering": 30,
            "jsonSchema": {},
            "defaultEnable": false,
            "folderId": 0,
            "responseExamples": [],
            "schemaDefinitions": {}
          },
          "requestDefinition": {
            "jsonSchema": {}
          },
          "metaInfo": {
            "httpApiId": 29662407,
            "httpApiCaseId": 49783812,
            "httpApiName": "QZ0101 获取单个测试",
            "httpApiPath": "/quizzes/{id}",
            "httpApiMethod": "get",
            "httpApiCaseName": "QZ0101 获取单个测试",
            "id": "7f70fb7b-5b3c-4053-8a62-8be9579f1a5c",
            "type": "http"
          },
          "type": "http",
          "protocolProfileBehavior": {
            "useWhatWGUrlParser": false,
            "disableUrlEncoding": false
          }
        },
        {
          "id": "eca3e66a-01b0-4a07-ab93-0956c0034335",
          "name": "QZ0104 删除单个测试(QZ0104 删除单个测试)",
          "request": {
            "url": {
              "protocol": "http",
              "port": "8000",
              "path": [
                "quizzes",
                "{{quiz_id}}"
              ],
              "host": [
                "127",
                "0",
                "0",
                "1"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "token",
                "value": "{{token}}"
              },
              {
                "key": "User-Agent",
                "value": "Apifox/1.0.0 (https://www.apifox.cn)"
              }
            ],
            "method": "DELETE",
            "baseUrl": "http://127.0.0.1:8000",
            "body": {},
            "type": "http"
          },
          "response": [],
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "id": "commonScript.assertion",
                "type": "text/javascript",
                "exec": [
                  "",
                  "  ____string2Array = function(value) {",
                  "    if(typeof value === 'object'){",
                  "      return value;",
                  "    }",
                  "    try {",
                  "      return JSON.parse(value);",
                  "    } catch (e) {",
                  "      return value;",
                  "    }",
                  "  }",
                  "  ____string2Number = function(value, errorMsg) {",
                  "   if(typeof value !== 'string'){",
                  "     return value;",
                  "   }",
                  "   if (/^\\-?\\d+$/.test(value)) {",
                  "       return parseInt(value);",
                  "   } else if (/^\\-?\\d+\\.\\d+$/.test(value)) {",
                  "       return parseFloat(value);",
                  "   } else {",
                  "       throw new Error(errorMsg || '数据类型不匹配')",
                  "   }",
                  " }",
                  "",
                  "  ____formatValues = function(value, stringCompareValue, comparison) {",
                  "   try{",
                  "     const isNumberComparisons = ['isBelow', 'isAtMost', 'isAbove', 'isAtLeast'].includes(comparison);",
                  "     const isCollectionComparisons = ['isOneOf', 'notOneOf'].includes(comparison);",
                  "     let compareValue;",
                  "     switch (typeof value) {",
                  "         case 'string':",
                  "             if (isNumberComparisons) {",
                  "                 value = ____string2Number(value);",
                  "                 compareValue = ____string2Number(stringCompareValue);",
                  "             } else if (isCollectionComparisons) {",
                  "              compareValue = ____string2Array(stringCompareValue);",
                  "             }",
                  "              else {",
                  "                 compareValue = stringCompareValue;",
                  "             }",
                  "             break;",
                  "         case 'object':",
                  "             const isArray = value instanceof Array;",
                  "             if (isNumberComparisons) {",
                  "                 throw new Error('object 类型的值不能使用 ' + comparison + ' 方式比较')",
                  "             } else if (isCollectionComparisons && isArray) {",
                  "              throw new Error('array 类型的值不能使用 ' + comparison + ' 方式比较')",
                  "            } else if (",
                  "              isArray &&",
                  "              comparison === 'include' &&",
                  "              value.includes(stringCompareValue)",
                  "            ) {",
                  "              compareValue = stringCompareValue;",
                  "            } else {",
                  "              try {",
                  "                  compareValue = JSON.parse(stringCompareValue);",
                  "              } catch (e) {",
                  "                  compareValue = stringCompareValue;",
                  "              }",
                  "            }",
                  "             break;",
                  "         case 'boolean':",
                  "             if (isNumberComparisons || isCollectionComparisons) {",
                  "                 throw new Error('boolean 类型的值不能使用 ' + comparison + ' 方式比较')",
                  "             }",
                  "             compareValue = stringCompareValue === 'true' ? true : (stringCompareValue === 'false' ? false : stringCompareValue);",
                  "             break;",
                  "           case 'bigint':",
                  "           case 'number':",
                  "             if (isNumberComparisons) {",
                  "               compareValue = ____string2Number(stringCompareValue);",
                  "             } else if (isCollectionComparisons) {",
                  "              compareValue = ____string2Array(stringCompareValue);",
                  "              value = '' + value;",
                  "            } else {",
                  "               compareValue = stringCompareValue;",
                  "               value = '' + value;",
                  "             }",
                  "             break;",
                  "         case 'null':",
                  "             if (isNumberComparisons) {",
                  "                 throw new Error('null 类型的值不能使用 ' + comparison + ' 方式比较')",
                  "             }",
                  "             compareValue = stringCompareValue === 'null' ? null : stringCompareValue;",
                  "             break;",
                  "         default:",
                  "            if (isCollectionComparisons) {",
                  "              compareValue = ____string2Array(stringCompareValue);",
                  "            } else {",
                  "              compareValue = stringCompareValue;",
                  "            }",
                  "            break;",
                  "     }",
                  "     return { compareValue, value };",
                  "   } catch(e) {",
                  "     console.log(e);",
                  "     throw e;",
                  "   }",
                  " }",
                  " "
                ]
              }
            },
            {
              "listen": "test",
              "script": {
                "id": "postProcessors.0.assertion",
                "type": "text/javascript",
                "exec": [
                  "",
                  "        if (JSON.setEnableBigInt) {",
                  "          JSON.setEnableBigInt(undefined);",
                  "        }",
                  "        pm.test(pm.variables.replaceIn(`Quiz删除校验`), function() {",
                  "        ",
                  "          const expression = pm.variables.replaceIn(`$`);",
                  "          const JSONPath = require('jsonpath-plus').JSONPath;",
                  "          let jsonData;",
                  "          try {",
                  "            jsonData = pm.response.json();",
                  "          } catch(e) {",
                  "            let text = pm.response.text();",
                  "            const xml2js = require('xml2js');",
                  "            text = text.replace(/^[^<]*/, '').replace(/[^>]*$/, '');",
                  "            let json;",
                  "            let xmlParseOptions = {",
                  "                explicitArray: false,",
                  "                trim: true,",
                  "                ignoreAttrs: true,",
                  "            };",
                  "            xml2js.parseString(text, xmlParseOptions, function (_, result) {",
                  "                jsonData = result;",
                  "            });",
                  "          }",
                  "          let value = JSONPath({",
                  "            json: jsonData,",
                  "            path: expression,",
                  "            wrap: false",
                  "          });",
                  "",
                  "          if (false && undefined !== undefined) {",
                  "            if (Array.isArray(value)) {",
                  "              value = Number(undefined) >= 0 ? value[undefined] : value[value.length + Number(undefined)];",
                  "            } else {",
                  "              value = undefined;",
                  "            }",
                  "          }",
                  "",
                  "          ",
                  "        const formattedValues = ____formatValues(value, pm.variables.replaceIn(`{}`), 'equal');",
                  "        pm.expect(formattedValues.value).to.eql(formattedValues.compareValue);",
                  "      });",
                  "      "
                ]
              }
            }
          ],
          "responseDefinition": {
            "id": 70048940,
            "createdAt": "2022-07-15T11:25:39.000Z",
            "updatedAt": "2022-07-15T11:25:39.000Z",
            "deletedAt": null,
            "apiDetailId": 29663170,
            "name": "成功",
            "code": 200,
            "contentType": "json",
            "jsonSchema": {
              "type": "object",
              "properties": {}
            },
            "defaultEnable": true,
            "projectId": 0,
            "ordering": 1,
            "schemaDefinitions": {}
          },
          "requestDefinition": {
            "jsonSchema": {}
          },
          "metaInfo": {
            "httpApiId": 29663170,
            "httpApiCaseId": 34623803,
            "httpApiName": "QZ0104 删除单个测试",
            "httpApiPath": "/quizzes/{id}",
            "httpApiMethod": "delete",
            "httpApiCaseName": "QZ0104 删除单个测试",
            "id": "792b7f93-3f27-4d14-8530-a2b228fc67e1",
            "type": "http"
          },
          "type": "http",
          "protocolProfileBehavior": {
            "useWhatWGUrlParser": false,
            "disableUrlEncoding": false
          }
        },
        {
          "id": "918a4e4b-74f6-4f22-9d4c-48219675cad7",
          "name": "LG0101 账号密码登录(登录用户user_test)",
          "request": {
            "url": {
              "protocol": "http",
              "port": "8000",
              "path": [
                "login"
              ],
              "host": [
                "127",
                "0",
                "0",
                "1"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "token",
                "value": "{{token}}"
              },
              {
                "key": "User-Agent",
                "value": "Apifox/1.0.0 (https://www.apifox.cn)"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "baseUrl": "http://127.0.0.1:8000",
            "body": {
              "mode": "raw",
              "raw": "{\r\n    \"username\": \"user_test\",\r\n    \"password\": \"123456\"\r\n}",
              "type": "application/json"
            },
            "type": "http"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "postProcessors.0.extractor",
                "type": "text/javascript",
                "exec": [
                  "",
                  "        if (JSON.setEnableBigInt) {",
                  "          JSON.setEnableBigInt(undefined);",
                  "        }",
                  "        ",
                  "      try{",
                  "        ",
                  "          const expression = pm.variables.replaceIn(`$.token`);",
                  "          const JSONPath = require('jsonpath-plus').JSONPath;",
                  "          const jsonData = pm.response.json();",
                  "          let value = JSONPath({",
                  "            json: jsonData,",
                  "            path: expression,",
                  "            wrap: false",
                  "          });",
                  "",
                  "          ",
                  "          if (false && undefined !== undefined) {",
                  "            if (Array.isArray(value)) {",
                  "              value = Number(undefined) >= 0 ? value[undefined] : value[value.length + Number(undefined)];",
                  "            } else {",
                  "              value = undefined;",
                  "            }",
                  "          }",
                  "          ",
                  "        ",
                  "        switch (typeof value) {",
                  "          case 'object':",
                  "            value = JSON.stringify(value);",
                  "            break;",
                  "          default:",
                  "            value = String(value);",
                  "            break;",
                  "        }",
                  "      ",
                  "        pm.environment.set(`token`, value);console.log('已设置环境变量【token】，值为 【' + value + '】')",
                  "      } catch(e) {",
                  "        e.message = '提取变量【token】出错: ' + e.message;",
                  "        throw e;",
                  "      }",
                  "  ",
                  "      "
                ]
              }
            }
          ],
          "responseDefinition": {
            "id": 4183271,
            "createdAt": "2021-07-29T14:43:37.000Z",
            "updatedAt": "2021-08-12T16:27:18.000Z",
            "deletedAt": null,
            "apiDetailId": 5318056,
            "name": "成功",
            "code": 200,
            "contentType": "json",
            "jsonSchema": {
              "type": "object",
              "properties": {
                "token": {
                  "type": "string",
                  "mock": {
                    "mock": "@string"
                  },
                  "title": "权"
                },
                "id": {
                  "type": "integer",
                  "title": "用户id"
                }
              },
              "required": [
                "token",
                "id"
              ]
            },
            "defaultEnable": true,
            "projectId": 0,
            "ordering": 1,
            "schemaDefinitions": {}
          },
          "requestDefinition": {
            "jsonSchema": {
              "type": "object",
              "properties": {
                "username": {
                  "type": "string",
                  "mock": {
                    "mock": "@cname"
                  },
                  "title": "用户名"
                },
                "password": {
                  "type": "string",
                  "mock": {
                    "mock": "@string('lower', 1, 3)"
                  },
                  "title": "密码"
                }
              },
              "required": [
                "username",
                "password"
              ]
            }
          },
          "metaInfo": {
            "httpApiId": 5318056,
            "httpApiCaseId": 65361572,
            "httpApiName": "LG0101 账号密码登录",
            "httpApiPath": "/login",
            "httpApiMethod": "post",
            "httpApiCaseName": "登录用户user_test",
            "id": "daee5e60-448f-48e5-b2f5-da36365021ed",
            "type": "http"
          },
          "type": "http",
          "protocolProfileBehavior": {
            "useWhatWGUrlParser": false,
            "disableUrlEncoding": false
          }
        },
        {
          "id": "2e744246-7c2b-47cd-abc4-5c0826bf4c85",
          "name": "QZ0201 搜索测试题(QZ0201 搜索测试题)",
          "request": {
            "url": {
              "protocol": "http",
              "port": "8000",
              "path": [
                "quizzes"
              ],
              "host": [
                "127",
                "0",
                "0",
                "1"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "keywords",
                  "value": ""
                }
              ],
              "variable": []
            },
            "header": [
              {
                "key": "User-Agent",
                "value": "Apifox/1.0.0 (https://www.apifox.cn)"
              }
            ],
            "method": "GET",
            "baseUrl": "http://127.0.0.1:8000",
            "body": {},
            "type": "http"
          },
          "response": [],
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "id": "commonScript.assertion",
                "type": "text/javascript",
                "exec": [
                  "",
                  "  ____string2Array = function(value) {",
                  "    if(typeof value === 'object'){",
                  "      return value;",
                  "    }",
                  "    try {",
                  "      return JSON.parse(value);",
                  "    } catch (e) {",
                  "      return value;",
                  "    }",
                  "  }",
                  "  ____string2Number = function(value, errorMsg) {",
                  "   if(typeof value !== 'string'){",
                  "     return value;",
                  "   }",
                  "   if (/^\\-?\\d+$/.test(value)) {",
                  "       return parseInt(value);",
                  "   } else if (/^\\-?\\d+\\.\\d+$/.test(value)) {",
                  "       return parseFloat(value);",
                  "   } else {",
                  "       throw new Error(errorMsg || '数据类型不匹配')",
                  "   }",
                  " }",
                  "",
                  "  ____formatValues = function(value, stringCompareValue, comparison) {",
                  "   try{",
                  "     const isNumberComparisons = ['isBelow', 'isAtMost', 'isAbove', 'isAtLeast'].includes(comparison);",
                  "     const isCollectionComparisons = ['isOneOf', 'notOneOf'].includes(comparison);",
                  "     let compareValue;",
                  "     switch (typeof value) {",
                  "         case 'string':",
                  "             if (isNumberComparisons) {",
                  "                 value = ____string2Number(value);",
                  "                 compareValue = ____string2Number(stringCompareValue);",
                  "             } else if (isCollectionComparisons) {",
                  "              compareValue = ____string2Array(stringCompareValue);",
                  "             }",
                  "              else {",
                  "                 compareValue = stringCompareValue;",
                  "             }",
                  "             break;",
                  "         case 'object':",
                  "             const isArray = value instanceof Array;",
                  "             if (isNumberComparisons) {",
                  "                 throw new Error('object 类型的值不能使用 ' + comparison + ' 方式比较')",
                  "             } else if (isCollectionComparisons && isArray) {",
                  "              throw new Error('array 类型的值不能使用 ' + comparison + ' 方式比较')",
                  "            } else if (",
                  "              isArray &&",
                  "              comparison === 'include' &&",
                  "              value.includes(stringCompareValue)",
                  "            ) {",
                  "              compareValue = stringCompareValue;",
                  "            } else {",
                  "              try {",
                  "                  compareValue = JSON.parse(stringCompareValue);",
                  "              } catch (e) {",
                  "                  compareValue = stringCompareValue;",
                  "              }",
                  "            }",
                  "             break;",
                  "         case 'boolean':",
                  "             if (isNumberComparisons || isCollectionComparisons) {",
                  "                 throw new Error('boolean 类型的值不能使用 ' + comparison + ' 方式比较')",
                  "             }",
                  "             compareValue = stringCompareValue === 'true' ? true : (stringCompareValue === 'false' ? false : stringCompareValue);",
                  "             break;",
                  "           case 'bigint':",
                  "           case 'number':",
                  "             if (isNumberComparisons) {",
                  "               compareValue = ____string2Number(stringCompareValue);",
                  "             } else if (isCollectionComparisons) {",
                  "              compareValue = ____string2Array(stringCompareValue);",
                  "              value = '' + value;",
                  "            } else {",
                  "               compareValue = stringCompareValue;",
                  "               value = '' + value;",
                  "             }",
                  "             break;",
                  "         case 'null':",
                  "             if (isNumberComparisons) {",
                  "                 throw new Error('null 类型的值不能使用 ' + comparison + ' 方式比较')",
                  "             }",
                  "             compareValue = stringCompareValue === 'null' ? null : stringCompareValue;",
                  "             break;",
                  "         default:",
                  "            if (isCollectionComparisons) {",
                  "              compareValue = ____string2Array(stringCompareValue);",
                  "            } else {",
                  "              compareValue = stringCompareValue;",
                  "            }",
                  "            break;",
                  "     }",
                  "     return { compareValue, value };",
                  "   } catch(e) {",
                  "     console.log(e);",
                  "     throw e;",
                  "   }",
                  " }",
                  " "
                ]
              }
            },
            {
              "listen": "test",
              "script": {
                "id": "postProcessors.0.extractor",
                "type": "text/javascript",
                "exec": [
                  "",
                  "        if (JSON.setEnableBigInt) {",
                  "          JSON.setEnableBigInt(undefined);",
                  "        }",
                  "        ",
                  "      try{",
                  "        ",
                  "          const expression = pm.variables.replaceIn(`$.result.length`);",
                  "          const JSONPath = require('jsonpath-plus').JSONPath;",
                  "          const jsonData = pm.response.json();",
                  "          let value = JSONPath({",
                  "            json: jsonData,",
                  "            path: expression,",
                  "            wrap: false",
                  "          });",
                  "",
                  "          ",
                  "          if (false && undefined !== undefined) {",
                  "            if (Array.isArray(value)) {",
                  "              value = Number(undefined) >= 0 ? value[undefined] : value[value.length + Number(undefined)];",
                  "            } else {",
                  "              value = undefined;",
                  "            }",
                  "          }",
                  "          ",
                  "        ",
                  "        switch (typeof value) {",
                  "          case 'object':",
                  "            value = JSON.stringify(value);",
                  "            break;",
                  "          default:",
                  "            value = String(value);",
                  "            break;",
                  "        }",
                  "      ",
                  "        pm.environment.set(`num_later`, value);console.log('已设置环境变量【num_later】，值为 【' + value + '】')",
                  "      } catch(e) {",
                  "        e.message = '提取变量【num_later】出错: ' + e.message;",
                  "        throw e;",
                  "      }",
                  "  ",
                  "      "
                ]
              }
            },
            {
              "listen": "test",
              "script": {
                "id": "postProcessors.1.assertion",
                "type": "text/javascript",
                "exec": [
                  "",
                  "        if (JSON.setEnableBigInt) {",
                  "          JSON.setEnableBigInt(undefined);",
                  "        }",
                  "        pm.test(pm.variables.replaceIn(`quiz数量校验`), function() {",
                  "        ",
                  "          const expression = pm.variables.replaceIn(`num_pre`);",
                  "          const value = pm.environment.get(expression)",
                  "      ",
                  "        const formattedValues = ____formatValues(value, pm.variables.replaceIn(`{{num_later}}`), 'equal');",
                  "        pm.expect(formattedValues.value).to.eql(formattedValues.compareValue);",
                  "      });",
                  "      "
                ]
              }
            }
          ],
          "responseDefinition": {
            "id": 70049266,
            "createdAt": "2022-07-15T11:28:36.000Z",
            "updatedAt": "2022-07-15T11:29:54.000Z",
            "deletedAt": null,
            "apiDetailId": 29663288,
            "name": "成功",
            "code": 200,
            "contentType": "json",
            "jsonSchema": {
              "type": "object",
              "properties": {
                "result": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/13080595"
                  }
                }
              },
              "x-apifox-orders": [
                "result"
              ],
              "required": [
                "result"
              ]
            },
            "defaultEnable": true,
            "projectId": 0,
            "ordering": 1,
            "schemaDefinitions": {
              "1097305": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "integer",
                    "title": "user的id",
                    "mock": {
                      "mock": "@integer(10000)"
                    }
                  },
                  "username": {
                    "type": "string",
                    "title": "用户名",
                    "mock": {
                      "mock": "@cname"
                    }
                  },
                  "nickname": {
                    "type": "string",
                    "title": "昵称",
                    "mock": {
                      "mock": "@cname"
                    }
                  },
                  "email": {
                    "type": "string",
                    "title": "邮箱",
                    "mock": {
                      "mock": "@email"
                    }
                  },
                  "telephone": {
                    "type": "string",
                    "title": "电话"
                  },
                  "birthday": {
                    "type": "string",
                    "title": "生日",
                    "mock": {
                      "mock": "@date('yyyy-MM-dd')"
                    }
                  },
                  "avatar": {
                    "type": "string",
                    "title": "头像",
                    "description": "头像的url地址",
                    "mock": {
                      "mock": "@image"
                    }
                  },
                  "is_admin": {
                    "type": "boolean",
                    "title": "是否管理员",
                    "mock": {
                      "mock": "@boolean"
                    }
                  },
                  "county": {
                    "type": "string",
                    "title": "县区",
                    "description": "用户所在县区",
                    "mock": {
                      "mock": "@county"
                    }
                  },
                  "town": {
                    "type": "string",
                    "title": "乡镇",
                    "description": "用户所在乡镇",
                    "mock": {
                      "mock": "@county"
                    }
                  },
                  "registration_time": {
                    "type": "string",
                    "mock": {
                      "mock": "@datetime('yyyy-MM-dd HH:mm:ss')"
                    },
                    "title": "注册时间"
                  },
                  "login_time": {
                    "type": "string",
                    "mock": {
                      "mock": "@datetime('yyyy-MM-dd HH:mm:ss')"
                    },
                    "title": "登录时间"
                  },
                  "wechat": {
                    "type": "boolean",
                    "title": "绑定微信"
                  },
                  "points_sum": {
                    "type": "integer",
                    "title": "总分数",
                    "mock": {
                      "mock": "@integer(0)"
                    },
                    "minimum": 0
                  },
                  "points_now": {
                    "type": "integer",
                    "title": "现有分数",
                    "mock": {
                      "mock": "@integer(0)"
                    },
                    "minimum": 0
                  },
                  "title": {
                    "type": "object",
                    "properties": {
                      "color": {
                        "type": "string",
                        "mock": {
                          "mock": "@color"
                        },
                        "title": "颜色"
                      },
                      "title": {
                        "type": "string",
                        "mock": {
                          "mock": "@cword"
                        },
                        "title": "称号"
                      }
                    },
                    "title": "标题",
                    "mock": {
                      "mock": "@cname"
                    },
                    "x-apifox-orders": [
                      "title",
                      "color"
                    ],
                    "required": [
                      "title",
                      "color"
                    ]
                  }
                },
                "required": [
                  "id",
                  "email",
                  "username",
                  "is_admin",
                  "avatar",
                  "registration_time",
                  "login_time",
                  "nickname",
                  "telephone",
                  "birthday",
                  "county",
                  "town",
                  "wechat",
                  "points_sum",
                  "points_now",
                  "title"
                ],
                "x-apifox-orders": [
                  "id",
                  "username",
                  "nickname",
                  "email",
                  "telephone",
                  "birthday",
                  "avatar",
                  "is_admin",
                  "county",
                  "town",
                  "points_sum",
                  "points_now",
                  "title",
                  "registration_time",
                  "login_time",
                  "wechat"
                ],
                "title": "user_all",
                "name": "user_all"
              },
              "13080595": {
                "type": "object",
                "properties": {
                  "question": {
                    "type": "string",
                    "title": "问题",
                    "mock": {
                      "mock": "@ctitle"
                    }
                  },
                  "options": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "mock": {
                        "mock": "@csentence"
                      }
                    },
                    "title": "选项"
                  },
                  "explanation": {
                    "type": "string",
                    "title": "答案解析",
                    "mock": {
                      "mock": "@cparagraph"
                    }
                  },
                  "answer": {
                    "type": "integer",
                    "title": "答案序号",
                    "description": "options数组下标"
                  },
                  "id": {
                    "type": "integer"
                  },
                  "visibility": {
                    "type": "boolean",
                    "title": ""
                  },
                  "author": {
                    "$ref": "#/definitions/1097305"
                  },
                  "voice_source": {
                    "title": "播报语音链接",
                    "mock": {
                      "mock": "@url(\"http\")"
                    },
                    "type": [
                      "string",
                      "null"
                    ]
                  }
                },
                "x-apifox-orders": [
                  "question",
                  "options",
                  "answer",
                  "explanation",
                  "id",
                  "author",
                  "visibility",
                  "voice_source"
                ],
                "required": [
                  "question",
                  "answer",
                  "options",
                  "explanation",
                  "id",
                  "visibility",
                  "author",
                  "voice_source"
                ],
                "title": "quiz_all",
                "name": "quiz_all"
              }
            }
          },
          "requestDefinition": {
            "jsonSchema": {}
          },
          "metaInfo": {
            "httpApiId": 29663288,
            "httpApiCaseId": 37913169,
            "httpApiName": "QZ0201 搜索测试题",
            "httpApiPath": "/quizzes",
            "httpApiMethod": "get",
            "httpApiCaseName": "QZ0201 搜索测试题",
            "id": "2df7e7ce-f381-4d01-9bcd-4c2111d143d3",
            "type": "http"
          },
          "type": "http",
          "protocolProfileBehavior": {
            "useWhatWGUrlParser": false,
            "disableUrlEncoding": false
          }
        },
        {
          "id": "c00fa242-e11c-4fc3-bc13-6d1fd30d5bba",
          "name": "QZ0102 增加单个测试(QZ0102 增加单个测试)",
          "request": {
            "url": {
              "protocol": "http",
              "port": "8000",
              "path": [
                "quizzes"
              ],
              "host": [
                "127",
                "0",
                "0",
                "1"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "token",
                "value": "{{token}}"
              },
              {
                "key": "User-Agent",
                "value": "Apifox/1.0.0 (https://www.apifox.cn)"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "baseUrl": "http://127.0.0.1:8000",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"question\": \"实论术影化使\",\n    \"options\": [\n        \"商参百设动深重温义同府事。\",\n        \"况新将治法题往长断拉也要天本西变年。\",\n        \"放般约只段文料难江把当五规据改加候。\"\n    ],\n    \"answer\": 68,\n    \"explanation\": \"保为题日而能参装确才养阶验。目除式称准要以史计为图百。并太了备多素向时路江方由东水才之高。克好状算化切育张要酸构线传反设。省己院都质见青验状从工很代。\",\n    \"voice_source\": \"http://demjhs.lc/tiwepkmjl\"\n}",
              "type": "application/json"
            },
            "type": "http"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "postProcessors.0.assertion",
                "type": "text/javascript",
                "exec": [
                  "",
                  "        if (JSON.setEnableBigInt) {",
                  "          JSON.setEnableBigInt(undefined);",
                  "        }",
                  "        pm.test(pm.variables.replaceIn(`Quiz添加结果检查`), function() {",
                  "        ",
                  "          const expression = pm.variables.replaceIn(`$`);",
                  "          const JSONPath = require('jsonpath-plus').JSONPath;",
                  "          let jsonData;",
                  "          try {",
                  "            jsonData = pm.response.json();",
                  "          } catch(e) {",
                  "            let text = pm.response.text();",
                  "            const xml2js = require('xml2js');",
                  "            text = text.replace(/^[^<]*/, '').replace(/[^>]*$/, '');",
                  "            let json;",
                  "            let xmlParseOptions = {",
                  "                explicitArray: false,",
                  "                trim: true,",
                  "                ignoreAttrs: true,",
                  "            };",
                  "            xml2js.parseString(text, xmlParseOptions, function (_, result) {",
                  "                jsonData = result;",
                  "            });",
                  "          }",
                  "          let value = JSONPath({",
                  "            json: jsonData,",
                  "            path: expression,",
                  "            wrap: false",
                  "          });",
                  "",
                  "          if (false && undefined !== undefined) {",
                  "            if (Array.isArray(value)) {",
                  "              value = Number(undefined) >= 0 ? value[undefined] : value[value.length + Number(undefined)];",
                  "            } else {",
                  "              value = undefined;",
                  "            }",
                  "          }",
                  "",
                  "          ",
                  "        ",
                  "        pm.expectWithKey({key:'$',value: value === null ? '' : value }).to.exist",
                  "      });",
                  "      "
                ]
              }
            },
            {
              "listen": "test",
              "script": {
                "id": "postProcessors.1.extractor",
                "type": "text/javascript",
                "exec": [
                  "",
                  "        if (JSON.setEnableBigInt) {",
                  "          JSON.setEnableBigInt(undefined);",
                  "        }",
                  "        ",
                  "      try{",
                  "        ",
                  "          const expression = pm.variables.replaceIn(`$.quiz.id`);",
                  "          const JSONPath = require('jsonpath-plus').JSONPath;",
                  "          const jsonData = pm.response.json();",
                  "          let value = JSONPath({",
                  "            json: jsonData,",
                  "            path: expression,",
                  "            wrap: false",
                  "          });",
                  "",
                  "          ",
                  "          if (false && undefined !== undefined) {",
                  "            if (Array.isArray(value)) {",
                  "              value = Number(undefined) >= 0 ? value[undefined] : value[value.length + Number(undefined)];",
                  "            } else {",
                  "              value = undefined;",
                  "            }",
                  "          }",
                  "          ",
                  "        ",
                  "        switch (typeof value) {",
                  "          case 'object':",
                  "            value = JSON.stringify(value);",
                  "            break;",
                  "          default:",
                  "            value = String(value);",
                  "            break;",
                  "        }",
                  "      ",
                  "        pm.environment.set(`quiz_id`, value);console.log('已设置环境变量【quiz_id】，值为 【' + value + '】')",
                  "      } catch(e) {",
                  "        e.message = '提取变量【quiz_id】出错: ' + e.message;",
                  "        throw e;",
                  "      }",
                  "  ",
                  "      "
                ]
              }
            }
          ],
          "responseDefinition": {
            "id": 70048663,
            "createdAt": "2022-07-15T11:22:03.000Z",
            "updatedAt": "2022-07-23T08:30:31.000Z",
            "deletedAt": null,
            "apiDetailId": 29662986,
            "name": "成功",
            "code": 200,
            "contentType": "json",
            "jsonSchema": {
              "x-apifox-overrides": {},
              "type": "object",
              "x-apifox-refs": {},
              "properties": {
                "quiz": {
                  "$ref": "#/definitions/13080595",
                  "x-apifox-overrides": {}
                }
              },
              "required": [
                "quiz"
              ],
              "x-apifox-orders": [
                "quiz"
              ]
            },
            "defaultEnable": true,
            "projectId": 0,
            "ordering": 1,
            "schemaDefinitions": {
              "1097305": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "integer",
                    "title": "user的id",
                    "mock": {
                      "mock": "@integer(10000)"
                    }
                  },
                  "username": {
                    "type": "string",
                    "title": "用户名",
                    "mock": {
                      "mock": "@cname"
                    }
                  },
                  "nickname": {
                    "type": "string",
                    "title": "昵称",
                    "mock": {
                      "mock": "@cname"
                    }
                  },
                  "email": {
                    "type": "string",
                    "title": "邮箱",
                    "mock": {
                      "mock": "@email"
                    }
                  },
                  "telephone": {
                    "type": "string",
                    "title": "电话"
                  },
                  "birthday": {
                    "type": "string",
                    "title": "生日",
                    "mock": {
                      "mock": "@date('yyyy-MM-dd')"
                    }
                  },
                  "avatar": {
                    "type": "string",
                    "title": "头像",
                    "description": "头像的url地址",
                    "mock": {
                      "mock": "@image"
                    }
                  },
                  "is_admin": {
                    "type": "boolean",
                    "title": "是否管理员",
                    "mock": {
                      "mock": "@boolean"
                    }
                  },
                  "county": {
                    "type": "string",
                    "title": "县区",
                    "description": "用户所在县区",
                    "mock": {
                      "mock": "@county"
                    }
                  },
                  "town": {
                    "type": "string",
                    "title": "乡镇",
                    "description": "用户所在乡镇",
                    "mock": {
                      "mock": "@county"
                    }
                  },
                  "registration_time": {
                    "type": "string",
                    "mock": {
                      "mock": "@datetime('yyyy-MM-dd HH:mm:ss')"
                    },
                    "title": "注册时间"
                  },
                  "login_time": {
                    "type": "string",
                    "mock": {
                      "mock": "@datetime('yyyy-MM-dd HH:mm:ss')"
                    },
                    "title": "登录时间"
                  },
                  "wechat": {
                    "type": "boolean",
                    "title": "绑定微信"
                  },
                  "points_sum": {
                    "type": "integer",
                    "title": "总分数",
                    "mock": {
                      "mock": "@integer(0)"
                    },
                    "minimum": 0
                  },
                  "points_now": {
                    "type": "integer",
                    "title": "现有分数",
                    "mock": {
                      "mock": "@integer(0)"
                    },
                    "minimum": 0
                  },
                  "title": {
                    "type": "object",
                    "properties": {
                      "color": {
                        "type": "string",
                        "mock": {
                          "mock": "@color"
                        },
                        "title": "颜色"
                      },
                      "title": {
                        "type": "string",
                        "mock": {
                          "mock": "@cword"
                        },
                        "title": "称号"
                      }
                    },
                    "title": "标题",
                    "mock": {
                      "mock": "@cname"
                    },
                    "x-apifox-orders": [
                      "title",
                      "color"
                    ],
                    "required": [
                      "title",
                      "color"
                    ]
                  }
                },
                "required": [
                  "id",
                  "email",
                  "username",
                  "is_admin",
                  "avatar",
                  "registration_time",
                  "login_time",
                  "nickname",
                  "telephone",
                  "birthday",
                  "county",
                  "town",
                  "wechat",
                  "points_sum",
                  "points_now",
                  "title"
                ],
                "x-apifox-orders": [
                  "id",
                  "username",
                  "nickname",
                  "email",
                  "telephone",
                  "birthday",
                  "avatar",
                  "is_admin",
                  "county",
                  "town",
                  "points_sum",
                  "points_now",
                  "title",
                  "registration_time",
                  "login_time",
                  "wechat"
                ],
                "title": "user_all",
                "name": "user_all"
              },
              "13080595": {
                "type": "object",
                "properties": {
                  "question": {
                    "type": "string",
                    "title": "问题",
                    "mock": {
                      "mock": "@ctitle"
                    }
                  },
                  "options": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "mock": {
                        "mock": "@csentence"
                      }
                    },
                    "title": "选项"
                  },
                  "explanation": {
                    "type": "string",
                    "title": "答案解析",
                    "mock": {
                      "mock": "@cparagraph"
                    }
                  },
                  "answer": {
                    "type": "integer",
                    "title": "答案序号",
                    "description": "options数组下标"
                  },
                  "id": {
                    "type": "integer"
                  },
                  "visibility": {
                    "type": "boolean",
                    "title": ""
                  },
                  "author": {
                    "$ref": "#/definitions/1097305"
                  },
                  "voice_source": {
                    "title": "播报语音链接",
                    "mock": {
                      "mock": "@url(\"http\")"
                    },
                    "type": [
                      "string",
                      "null"
                    ]
                  }
                },
                "x-apifox-orders": [
                  "question",
                  "options",
                  "answer",
                  "explanation",
                  "id",
                  "author",
                  "visibility",
                  "voice_source"
                ],
                "required": [
                  "question",
                  "answer",
                  "options",
                  "explanation",
                  "id",
                  "visibility",
                  "author",
                  "voice_source"
                ],
                "title": "quiz_all",
                "name": "quiz_all"
              }
            }
          },
          "requestDefinition": {
            "jsonSchema": {
              "$ref": "#/definitions/13080737",
              "x-apifox-overrides": {}
            }
          },
          "metaInfo": {
            "httpApiId": 29662986,
            "httpApiCaseId": 34623804,
            "httpApiName": "QZ0102 增加单个测试",
            "httpApiPath": "/quizzes",
            "httpApiMethod": "post",
            "httpApiCaseName": "QZ0102 增加单个测试",
            "id": "8f482a93-fde8-41f2-a90e-15333fb0ebb2",
            "type": "http"
          },
          "type": "http",
          "protocolProfileBehavior": {
            "useWhatWGUrlParser": false,
            "disableUrlEncoding": false
          }
        },
        {
          "id": "0f406e0f-e702-4503-900f-5051c127a089",
          "name": "QZ0102 增加单个测试(QZ0102 增加单个测试)",
          "request": {
            "url": {
              "protocol": "http",
              "port": "8000",
              "path": [
                "quizzes"
              ],
              "host": [
                "127",
                "0",
                "0",
                "1"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "token",
                "value": "{{token}}"
              },
              {
                "key": "User-Agent",
                "value": "Apifox/1.0.0 (https://www.apifox.cn)"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "baseUrl": "http://127.0.0.1:8000",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"question\": \"斗设他放从政比\",\n    \"options\": [\n        \"又亲计圆市过物四明三斯气。\",\n        \"往红明资需总被例在老门同合。\",\n        \"集许质型素来电立非备话是。\"\n    ],\n    \"answer\": 29,\n    \"explanation\": \"资文矿深消精林心消保府动。织见它所离强直联称定业以相观飞响农。品养算传农千热造水六八导。出半适世院队合从工太部真整开。现反验称亲月且率期能期步阶如一律。声题国龙地本色队思光置教机各准。\",\n    \"voice_source\": \"\"\n}",
              "type": "application/json"
            },
            "type": "http"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "postProcessors.0.assertion",
                "type": "text/javascript",
                "exec": [
                  "",
                  "        if (JSON.setEnableBigInt) {",
                  "          JSON.setEnableBigInt(undefined);",
                  "        }",
                  "        pm.test(pm.variables.replaceIn(`Quiz添加结果检查`), function() {",
                  "        ",
                  "          const expression = pm.variables.replaceIn(`$`);",
                  "          const JSONPath = require('jsonpath-plus').JSONPath;",
                  "          let jsonData;",
                  "          try {",
                  "            jsonData = pm.response.json();",
                  "          } catch(e) {",
                  "            let text = pm.response.text();",
                  "            const xml2js = require('xml2js');",
                  "            text = text.replace(/^[^<]*/, '').replace(/[^>]*$/, '');",
                  "            let json;",
                  "            let xmlParseOptions = {",
                  "                explicitArray: false,",
                  "                trim: true,",
                  "                ignoreAttrs: true,",
                  "            };",
                  "            xml2js.parseString(text, xmlParseOptions, function (_, result) {",
                  "                jsonData = result;",
                  "            });",
                  "          }",
                  "          let value = JSONPath({",
                  "            json: jsonData,",
                  "            path: expression,",
                  "            wrap: false",
                  "          });",
                  "",
                  "          if (false && undefined !== undefined) {",
                  "            if (Array.isArray(value)) {",
                  "              value = Number(undefined) >= 0 ? value[undefined] : value[value.length + Number(undefined)];",
                  "            } else {",
                  "              value = undefined;",
                  "            }",
                  "          }",
                  "",
                  "          ",
                  "        ",
                  "        pm.expectWithKey({key:'$',value: value === null ? '' : value }).to.exist",
                  "      });",
                  "      "
                ]
              }
            }
          ],
          "responseDefinition": {
            "id": 70048663,
            "createdAt": "2022-07-15T11:22:03.000Z",
            "updatedAt": "2022-07-23T08:30:31.000Z",
            "deletedAt": null,
            "apiDetailId": 29662986,
            "name": "成功",
            "code": 200,
            "contentType": "json",
            "jsonSchema": {
              "x-apifox-overrides": {},
              "type": "object",
              "x-apifox-refs": {},
              "properties": {
                "quiz": {
                  "$ref": "#/definitions/13080595",
                  "x-apifox-overrides": {}
                }
              },
              "required": [
                "quiz"
              ],
              "x-apifox-orders": [
                "quiz"
              ]
            },
            "defaultEnable": true,
            "projectId": 0,
            "ordering": 1,
            "schemaDefinitions": {
              "1097305": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "integer",
                    "title": "user的id",
                    "mock": {
                      "mock": "@integer(10000)"
                    }
                  },
                  "username": {
                    "type": "string",
                    "title": "用户名",
                    "mock": {
                      "mock": "@cname"
                    }
                  },
                  "nickname": {
                    "type": "string",
                    "title": "昵称",
                    "mock": {
                      "mock": "@cname"
                    }
                  },
                  "email": {
                    "type": "string",
                    "title": "邮箱",
                    "mock": {
                      "mock": "@email"
                    }
                  },
                  "telephone": {
                    "type": "string",
                    "title": "电话"
                  },
                  "birthday": {
                    "type": "string",
                    "title": "生日",
                    "mock": {
                      "mock": "@date('yyyy-MM-dd')"
                    }
                  },
                  "avatar": {
                    "type": "string",
                    "title": "头像",
                    "description": "头像的url地址",
                    "mock": {
                      "mock": "@image"
                    }
                  },
                  "is_admin": {
                    "type": "boolean",
                    "title": "是否管理员",
                    "mock": {
                      "mock": "@boolean"
                    }
                  },
                  "county": {
                    "type": "string",
                    "title": "县区",
                    "description": "用户所在县区",
                    "mock": {
                      "mock": "@county"
                    }
                  },
                  "town": {
                    "type": "string",
                    "title": "乡镇",
                    "description": "用户所在乡镇",
                    "mock": {
                      "mock": "@county"
                    }
                  },
                  "registration_time": {
                    "type": "string",
                    "mock": {
                      "mock": "@datetime('yyyy-MM-dd HH:mm:ss')"
                    },
                    "title": "注册时间"
                  },
                  "login_time": {
                    "type": "string",
                    "mock": {
                      "mock": "@datetime('yyyy-MM-dd HH:mm:ss')"
                    },
                    "title": "登录时间"
                  },
                  "wechat": {
                    "type": "boolean",
                    "title": "绑定微信"
                  },
                  "points_sum": {
                    "type": "integer",
                    "title": "总分数",
                    "mock": {
                      "mock": "@integer(0)"
                    },
                    "minimum": 0
                  },
                  "points_now": {
                    "type": "integer",
                    "title": "现有分数",
                    "mock": {
                      "mock": "@integer(0)"
                    },
                    "minimum": 0
                  },
                  "title": {
                    "type": "object",
                    "properties": {
                      "color": {
                        "type": "string",
                        "mock": {
                          "mock": "@color"
                        },
                        "title": "颜色"
                      },
                      "title": {
                        "type": "string",
                        "mock": {
                          "mock": "@cword"
                        },
                        "title": "称号"
                      }
                    },
                    "title": "标题",
                    "mock": {
                      "mock": "@cname"
                    },
                    "x-apifox-orders": [
                      "title",
                      "color"
                    ],
                    "required": [
                      "title",
                      "color"
                    ]
                  }
                },
                "required": [
                  "id",
                  "email",
                  "username",
                  "is_admin",
                  "avatar",
                  "registration_time",
                  "login_time",
                  "nickname",
                  "telephone",
                  "birthday",
                  "county",
                  "town",
                  "wechat",
                  "points_sum",
                  "points_now",
                  "title"
                ],
                "x-apifox-orders": [
                  "id",
                  "username",
                  "nickname",
                  "email",
                  "telephone",
                  "birthday",
                  "avatar",
                  "is_admin",
                  "county",
                  "town",
                  "points_sum",
                  "points_now",
                  "title",
                  "registration_time",
                  "login_time",
                  "wechat"
                ],
                "title": "user_all",
                "name": "user_all"
              },
              "13080595": {
                "type": "object",
                "properties": {
                  "question": {
                    "type": "string",
                    "title": "问题",
                    "mock": {
                      "mock": "@ctitle"
                    }
                  },
                  "options": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "mock": {
                        "mock": "@csentence"
                      }
                    },
                    "title": "选项"
                  },
                  "explanation": {
                    "type": "string",
                    "title": "答案解析",
                    "mock": {
                      "mock": "@cparagraph"
                    }
                  },
                  "answer": {
                    "type": "integer",
                    "title": "答案序号",
                    "description": "options数组下标"
                  },
                  "id": {
                    "type": "integer"
                  },
                  "visibility": {
                    "type": "boolean",
                    "title": ""
                  },
                  "author": {
                    "$ref": "#/definitions/1097305"
                  },
                  "voice_source": {
                    "title": "播报语音链接",
                    "mock": {
                      "mock": "@url(\"http\")"
                    },
                    "type": [
                      "string",
                      "null"
                    ]
                  }
                },
                "x-apifox-orders": [
                  "question",
                  "options",
                  "answer",
                  "explanation",
                  "id",
                  "author",
                  "visibility",
                  "voice_source"
                ],
                "required": [
                  "question",
                  "answer",
                  "options",
                  "explanation",
                  "id",
                  "visibility",
                  "author",
                  "voice_source"
                ],
                "title": "quiz_all",
                "name": "quiz_all"
              }
            }
          },
          "requestDefinition": {
            "jsonSchema": {
              "$ref": "#/definitions/13080737",
              "x-apifox-overrides": {}
            }
          },
          "metaInfo": {
            "httpApiId": 29662986,
            "httpApiCaseId": 34623805,
            "httpApiName": "QZ0102 增加单个测试",
            "httpApiPath": "/quizzes",
            "httpApiMethod": "post",
            "httpApiCaseName": "QZ0102 增加单个测试",
            "id": "e2f00686-c314-4dc7-b9bf-c8abf7f17687",
            "type": "http"
          },
          "type": "http",
          "protocolProfileBehavior": {
            "useWhatWGUrlParser": false,
            "disableUrlEncoding": false
          }
        },
        {
          "id": "76efede0-bc20-481e-adb3-3d07c8ac73f5",
          "name": "QZ0102 增加单个测试(QZ0102 增加单个测试)",
          "request": {
            "url": {
              "protocol": "http",
              "port": "8000",
              "path": [
                "quizzes"
              ],
              "host": [
                "127",
                "0",
                "0",
                "1"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "token",
                "value": "{{token}}"
              },
              {
                "key": "User-Agent",
                "value": "Apifox/1.0.0 (https://www.apifox.cn)"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "baseUrl": "http://127.0.0.1:8000",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"question\": \"新角外林\",\n    \"options\": [\n        \"三好界意习们如现克群备海那两。\",\n        \"公影照完方里极界他行件育种。\",\n        \"局老组记式深有多可形增实花。\",\n        \"全机温作合看意点府今专型值可采。\",\n        \"况选海议图明严开价主克中米。\"\n    ],\n    \"answer\": 98,\n    \"explanation\": \"处识且会性商员着将市每常又。最据石提派科求务式流军得学风种周难个。书治再管可思气白信能心本老时。并者委布江品选处常京青周才。\",\n    \"voice_source\": \"http://wqwtph.nu/nrmlhc\"\n}",
              "type": "application/json"
            },
            "type": "http"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "postProcessors.0.assertion",
                "type": "text/javascript",
                "exec": [
                  "",
                  "        if (JSON.setEnableBigInt) {",
                  "          JSON.setEnableBigInt(undefined);",
                  "        }",
                  "        pm.test(pm.variables.replaceIn(`Quiz添加结果检查`), function() {",
                  "        ",
                  "          const expression = pm.variables.replaceIn(`$`);",
                  "          const JSONPath = require('jsonpath-plus').JSONPath;",
                  "          let jsonData;",
                  "          try {",
                  "            jsonData = pm.response.json();",
                  "          } catch(e) {",
                  "            let text = pm.response.text();",
                  "            const xml2js = require('xml2js');",
                  "            text = text.replace(/^[^<]*/, '').replace(/[^>]*$/, '');",
                  "            let json;",
                  "            let xmlParseOptions = {",
                  "                explicitArray: false,",
                  "                trim: true,",
                  "                ignoreAttrs: true,",
                  "            };",
                  "            xml2js.parseString(text, xmlParseOptions, function (_, result) {",
                  "                jsonData = result;",
                  "            });",
                  "          }",
                  "          let value = JSONPath({",
                  "            json: jsonData,",
                  "            path: expression,",
                  "            wrap: false",
                  "          });",
                  "",
                  "          if (false && undefined !== undefined) {",
                  "            if (Array.isArray(value)) {",
                  "              value = Number(undefined) >= 0 ? value[undefined] : value[value.length + Number(undefined)];",
                  "            } else {",
                  "              value = undefined;",
                  "            }",
                  "          }",
                  "",
                  "          ",
                  "        ",
                  "        pm.expectWithKey({key:'$',value: value === null ? '' : value }).to.exist",
                  "      });",
                  "      "
                ]
              }
            }
          ],
          "responseDefinition": {
            "id": 70048663,
            "createdAt": "2022-07-15T11:22:03.000Z",
            "updatedAt": "2022-07-23T08:30:31.000Z",
            "deletedAt": null,
            "apiDetailId": 29662986,
            "name": "成功",
            "code": 200,
            "contentType": "json",
            "jsonSchema": {
              "x-apifox-overrides": {},
              "type": "object",
              "x-apifox-refs": {},
              "properties": {
                "quiz": {
                  "$ref": "#/definitions/13080595",
                  "x-apifox-overrides": {}
                }
              },
              "required": [
                "quiz"
              ],
              "x-apifox-orders": [
                "quiz"
              ]
            },
            "defaultEnable": true,
            "projectId": 0,
            "ordering": 1,
            "schemaDefinitions": {
              "1097305": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "integer",
                    "title": "user的id",
                    "mock": {
                      "mock": "@integer(10000)"
                    }
                  },
                  "username": {
                    "type": "string",
                    "title": "用户名",
                    "mock": {
                      "mock": "@cname"
                    }
                  },
                  "nickname": {
                    "type": "string",
                    "title": "昵称",
                    "mock": {
                      "mock": "@cname"
                    }
                  },
                  "email": {
                    "type": "string",
                    "title": "邮箱",
                    "mock": {
                      "mock": "@email"
                    }
                  },
                  "telephone": {
                    "type": "string",
                    "title": "电话"
                  },
                  "birthday": {
                    "type": "string",
                    "title": "生日",
                    "mock": {
                      "mock": "@date('yyyy-MM-dd')"
                    }
                  },
                  "avatar": {
                    "type": "string",
                    "title": "头像",
                    "description": "头像的url地址",
                    "mock": {
                      "mock": "@image"
                    }
                  },
                  "is_admin": {
                    "type": "boolean",
                    "title": "是否管理员",
                    "mock": {
                      "mock": "@boolean"
                    }
                  },
                  "county": {
                    "type": "string",
                    "title": "县区",
                    "description": "用户所在县区",
                    "mock": {
                      "mock": "@county"
                    }
                  },
                  "town": {
                    "type": "string",
                    "title": "乡镇",
                    "description": "用户所在乡镇",
                    "mock": {
                      "mock": "@county"
                    }
                  },
                  "registration_time": {
                    "type": "string",
                    "mock": {
                      "mock": "@datetime('yyyy-MM-dd HH:mm:ss')"
                    },
                    "title": "注册时间"
                  },
                  "login_time": {
                    "type": "string",
                    "mock": {
                      "mock": "@datetime('yyyy-MM-dd HH:mm:ss')"
                    },
                    "title": "登录时间"
                  },
                  "wechat": {
                    "type": "boolean",
                    "title": "绑定微信"
                  },
                  "points_sum": {
                    "type": "integer",
                    "title": "总分数",
                    "mock": {
                      "mock": "@integer(0)"
                    },
                    "minimum": 0
                  },
                  "points_now": {
                    "type": "integer",
                    "title": "现有分数",
                    "mock": {
                      "mock": "@integer(0)"
                    },
                    "minimum": 0
                  },
                  "title": {
                    "type": "object",
                    "properties": {
                      "color": {
                        "type": "string",
                        "mock": {
                          "mock": "@color"
                        },
                        "title": "颜色"
                      },
                      "title": {
                        "type": "string",
                        "mock": {
                          "mock": "@cword"
                        },
                        "title": "称号"
                      }
                    },
                    "title": "标题",
                    "mock": {
                      "mock": "@cname"
                    },
                    "x-apifox-orders": [
                      "title",
                      "color"
                    ],
                    "required": [
                      "title",
                      "color"
                    ]
                  }
                },
                "required": [
                  "id",
                  "email",
                  "username",
                  "is_admin",
                  "avatar",
                  "registration_time",
                  "login_time",
                  "nickname",
                  "telephone",
                  "birthday",
                  "county",
                  "town",
                  "wechat",
                  "points_sum",
                  "points_now",
                  "title"
                ],
                "x-apifox-orders": [
                  "id",
                  "username",
                  "nickname",
                  "email",
                  "telephone",
                  "birthday",
                  "avatar",
                  "is_admin",
                  "county",
                  "town",
                  "points_sum",
                  "points_now",
                  "title",
                  "registration_time",
                  "login_time",
                  "wechat"
                ],
                "title": "user_all",
                "name": "user_all"
              },
              "13080595": {
                "type": "object",
                "properties": {
                  "question": {
                    "type": "string",
                    "title": "问题",
                    "mock": {
                      "mock": "@ctitle"
                    }
                  },
                  "options": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "mock": {
                        "mock": "@csentence"
                      }
                    },
                    "title": "选项"
                  },
                  "explanation": {
                    "type": "string",
                    "title": "答案解析",
                    "mock": {
                      "mock": "@cparagraph"
                    }
                  },
                  "answer": {
                    "type": "integer",
                    "title": "答案序号",
                    "description": "options数组下标"
                  },
                  "id": {
                    "type": "integer"
                  },
                  "visibility": {
                    "type": "boolean",
                    "title": ""
                  },
                  "author": {
                    "$ref": "#/definitions/1097305"
                  },
                  "voice_source": {
                    "title": "播报语音链接",
                    "mock": {
                      "mock": "@url(\"http\")"
                    },
                    "type": [
                      "string",
                      "null"
                    ]
                  }
                },
                "x-apifox-orders": [
                  "question",
                  "options",
                  "answer",
                  "explanation",
                  "id",
                  "author",
                  "visibility",
                  "voice_source"
                ],
                "required": [
                  "question",
                  "answer",
                  "options",
                  "explanation",
                  "id",
                  "visibility",
                  "author",
                  "voice_source"
                ],
                "title": "quiz_all",
                "name": "quiz_all"
              }
            }
          },
          "requestDefinition": {
            "jsonSchema": {
              "$ref": "#/definitions/13080737",
              "x-apifox-overrides": {}
            }
          },
          "metaInfo": {
            "httpApiId": 29662986,
            "httpApiCaseId": 34623806,
            "httpApiName": "QZ0102 增加单个测试",
            "httpApiPath": "/quizzes",
            "httpApiMethod": "post",
            "httpApiCaseName": "QZ0102 增加单个测试",
            "id": "c14115ad-bcb0-4bcc-9a5c-ab56a5689314",
            "type": "http"
          },
          "type": "http",
          "protocolProfileBehavior": {
            "useWhatWGUrlParser": false,
            "disableUrlEncoding": false
          }
        },
        {
          "id": "8e4c2b47-c72d-42d3-9cca-4c00177c9557",
          "name": "LG0101 账号密码登录(登录用户admin)",
          "request": {
            "url": {
              "protocol": "http",
              "port": "8000",
              "path": [
                "login"
              ],
              "host": [
                "127",
                "0",
                "0",
                "1"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "token",
                "value": "{{token}}"
              },
              {
                "key": "User-Agent",
                "value": "Apifox/1.0.0 (https://www.apifox.cn)"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "baseUrl": "http://127.0.0.1:8000",
            "body": {
              "mode": "raw",
              "raw": "{\r\n    \"username\": \"admin\",\r\n    \"password\": \"testtest123\"\r\n}",
              "type": "application/json"
            },
            "type": "http"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "postProcessors.0.extractor",
                "type": "text/javascript",
                "exec": [
                  "",
                  "        if (JSON.setEnableBigInt) {",
                  "          JSON.setEnableBigInt(undefined);",
                  "        }",
                  "        ",
                  "      try{",
                  "        ",
                  "          const expression = pm.variables.replaceIn(`$.token`);",
                  "          const JSONPath = require('jsonpath-plus').JSONPath;",
                  "          const jsonData = pm.response.json();",
                  "          let value = JSONPath({",
                  "            json: jsonData,",
                  "            path: expression,",
                  "            wrap: false",
                  "          });",
                  "",
                  "          ",
                  "          if (false && undefined !== undefined) {",
                  "            if (Array.isArray(value)) {",
                  "              value = Number(undefined) >= 0 ? value[undefined] : value[value.length + Number(undefined)];",
                  "            } else {",
                  "              value = undefined;",
                  "            }",
                  "          }",
                  "          ",
                  "        ",
                  "        switch (typeof value) {",
                  "          case 'object':",
                  "            value = JSON.stringify(value);",
                  "            break;",
                  "          default:",
                  "            value = String(value);",
                  "            break;",
                  "        }",
                  "      ",
                  "        pm.environment.set(`token`, value);console.log('已设置环境变量【token】，值为 【' + value + '】')",
                  "      } catch(e) {",
                  "        e.message = '提取变量【token】出错: ' + e.message;",
                  "        throw e;",
                  "      }",
                  "  ",
                  "      "
                ]
              }
            },
            {
              "listen": "test",
              "script": {
                "id": "postProcessors.1.extractor",
                "type": "text/javascript",
                "exec": [
                  "",
                  "        if (JSON.setEnableBigInt) {",
                  "          JSON.setEnableBigInt(undefined);",
                  "        }",
                  "        ",
                  "      try{",
                  "        ",
                  "          const expression = pm.variables.replaceIn(`$.id`);",
                  "          const JSONPath = require('jsonpath-plus').JSONPath;",
                  "          const jsonData = pm.response.json();",
                  "          let value = JSONPath({",
                  "            json: jsonData,",
                  "            path: expression,",
                  "            wrap: false",
                  "          });",
                  "",
                  "          ",
                  "          if (false && undefined !== undefined) {",
                  "            if (Array.isArray(value)) {",
                  "              value = Number(undefined) >= 0 ? value[undefined] : value[value.length + Number(undefined)];",
                  "            } else {",
                  "              value = undefined;",
                  "            }",
                  "          }",
                  "          ",
                  "        ",
                  "        switch (typeof value) {",
                  "          case 'object':",
                  "            value = JSON.stringify(value);",
                  "            break;",
                  "          default:",
                  "            value = String(value);",
                  "            break;",
                  "        }",
                  "      ",
                  "        pm.variables.set(`user_id`, value);console.log('已设置临时变量【user_id】，值为 【' + value + '】')",
                  "      } catch(e) {",
                  "        e.message = '提取变量【user_id】出错: ' + e.message;",
                  "        throw e;",
                  "      }",
                  "  ",
                  "      "
                ]
              }
            }
          ],
          "responseDefinition": {
            "id": 4183271,
            "createdAt": "2021-07-29T14:43:37.000Z",
            "updatedAt": "2021-08-12T16:27:18.000Z",
            "deletedAt": null,
            "apiDetailId": 5318056,
            "name": "成功",
            "code": 200,
            "contentType": "json",
            "jsonSchema": {
              "type": "object",
              "properties": {
                "token": {
                  "type": "string",
                  "mock": {
                    "mock": "@string"
                  },
                  "title": "权"
                },
                "id": {
                  "type": "integer",
                  "title": "用户id"
                }
              },
              "required": [
                "token",
                "id"
              ]
            },
            "defaultEnable": true,
            "projectId": 0,
            "ordering": 1,
            "schemaDefinitions": {}
          },
          "requestDefinition": {
            "jsonSchema": {
              "type": "object",
              "properties": {
                "username": {
                  "type": "string",
                  "mock": {
                    "mock": "@cname"
                  },
                  "title": "用户名"
                },
                "password": {
                  "type": "string",
                  "mock": {
                    "mock": "@string('lower', 1, 3)"
                  },
                  "title": "密码"
                }
              },
              "required": [
                "username",
                "password"
              ]
            }
          },
          "metaInfo": {
            "httpApiId": 5318056,
            "httpApiCaseId": 32697822,
            "httpApiName": "LG0101 账号密码登录",
            "httpApiPath": "/login",
            "httpApiMethod": "post",
            "httpApiCaseName": "登录用户admin",
            "id": "2f76933d-4dd9-4a53-ac30-cc722ea1f42e",
            "type": "http"
          },
          "type": "http",
          "protocolProfileBehavior": {
            "useWhatWGUrlParser": false,
            "disableUrlEncoding": false
          }
        },
        {
          "id": "62ad87c5-0f4b-42b5-911e-20d365c83797",
          "name": "QZ0105 审核测试题(QZ0105审核测试题)",
          "request": {
            "url": {
              "protocol": "http",
              "port": "8000",
              "path": [
                "quizzes",
                "{{quiz_id}}",
                "visibility"
              ],
              "host": [
                "127",
                "0",
                "0",
                "1"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "token",
                "value": "{{token}}"
              },
              {
                "key": "User-Agent",
                "value": "Apifox/1.0.0 (https://www.apifox.cn)"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "PUT",
            "baseUrl": "http://127.0.0.1:8000",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"result\": true,\n    \"reason\": \"quis\"\n}",
              "type": "application/json"
            },
            "type": "http"
          },
          "response": [],
          "event": [],
          "responseDefinition": {
            "id": 106182475,
            "createdAt": "2022-10-06T08:43:19.000Z",
            "updatedAt": "2022-10-06T08:43:19.000Z",
            "deletedAt": null,
            "apiDetailId": 42646298,
            "name": "成功",
            "code": 200,
            "contentType": "json",
            "jsonSchema": {
              "type": "object",
              "properties": {}
            },
            "defaultEnable": true,
            "projectId": 0,
            "ordering": 1,
            "schemaDefinitions": {}
          },
          "requestDefinition": {
            "jsonSchema": {
              "type": "object",
              "properties": {
                "result": {
                  "type": "boolean",
                  "title": "审核结果"
                },
                "reason": {
                  "type": "string",
                  "title": "原因"
                }
              },
              "x-apifox-orders": [
                "result",
                "reason"
              ],
              "required": [
                "result",
                "reason"
              ]
            }
          },
          "metaInfo": {
            "httpApiId": 42646298,
            "httpApiCaseId": 65358730,
            "httpApiName": "QZ0105 审核测试题",
            "httpApiPath": "/quizzes/{id}/visibility",
            "httpApiMethod": "put",
            "httpApiCaseName": "QZ0105审核测试题",
            "id": "b7c116f3-8fc0-41f3-bcd6-f58bc8da44fc",
            "type": "http"
          },
          "type": "http",
          "protocolProfileBehavior": {
            "useWhatWGUrlParser": false,
            "disableUrlEncoding": false
          }
        },
        {
          "id": "96d27940-ea18-480f-9dcc-2a62ab1e181a",
          "name": "LG0101 账号密码登录(登录用户user_test)",
          "request": {
            "url": {
              "protocol": "http",
              "port": "8000",
              "path": [
                "login"
              ],
              "host": [
                "127",
                "0",
                "0",
                "1"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "token",
                "value": "{{token}}"
              },
              {
                "key": "User-Agent",
                "value": "Apifox/1.0.0 (https://www.apifox.cn)"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "baseUrl": "http://127.0.0.1:8000",
            "body": {
              "mode": "raw",
              "raw": "{\r\n    \"username\": \"user_test\",\r\n    \"password\": \"123456\"\r\n}",
              "type": "application/json"
            },
            "type": "http"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "postProcessors.0.extractor",
                "type": "text/javascript",
                "exec": [
                  "",
                  "        if (JSON.setEnableBigInt) {",
                  "          JSON.setEnableBigInt(undefined);",
                  "        }",
                  "        ",
                  "      try{",
                  "        ",
                  "          const expression = pm.variables.replaceIn(`$.token`);",
                  "          const JSONPath = require('jsonpath-plus').JSONPath;",
                  "          const jsonData = pm.response.json();",
                  "          let value = JSONPath({",
                  "            json: jsonData,",
                  "            path: expression,",
                  "            wrap: false",
                  "          });",
                  "",
                  "          ",
                  "          if (false && undefined !== undefined) {",
                  "            if (Array.isArray(value)) {",
                  "              value = Number(undefined) >= 0 ? value[undefined] : value[value.length + Number(undefined)];",
                  "            } else {",
                  "              value = undefined;",
                  "            }",
                  "          }",
                  "          ",
                  "        ",
                  "        switch (typeof value) {",
                  "          case 'object':",
                  "            value = JSON.stringify(value);",
                  "            break;",
                  "          default:",
                  "            value = String(value);",
                  "            break;",
                  "        }",
                  "      ",
                  "        pm.environment.set(`token`, value);console.log('已设置环境变量【token】，值为 【' + value + '】')",
                  "      } catch(e) {",
                  "        e.message = '提取变量【token】出错: ' + e.message;",
                  "        throw e;",
                  "      }",
                  "  ",
                  "      "
                ]
              }
            }
          ],
          "responseDefinition": {
            "id": 4183271,
            "createdAt": "2021-07-29T14:43:37.000Z",
            "updatedAt": "2021-08-12T16:27:18.000Z",
            "deletedAt": null,
            "apiDetailId": 5318056,
            "name": "成功",
            "code": 200,
            "contentType": "json",
            "jsonSchema": {
              "type": "object",
              "properties": {
                "token": {
                  "type": "string",
                  "mock": {
                    "mock": "@string"
                  },
                  "title": "权"
                },
                "id": {
                  "type": "integer",
                  "title": "用户id"
                }
              },
              "required": [
                "token",
                "id"
              ]
            },
            "defaultEnable": true,
            "projectId": 0,
            "ordering": 1,
            "schemaDefinitions": {}
          },
          "requestDefinition": {
            "jsonSchema": {
              "type": "object",
              "properties": {
                "username": {
                  "type": "string",
                  "mock": {
                    "mock": "@cname"
                  },
                  "title": "用户名"
                },
                "password": {
                  "type": "string",
                  "mock": {
                    "mock": "@string('lower', 1, 3)"
                  },
                  "title": "密码"
                }
              },
              "required": [
                "username",
                "password"
              ]
            }
          },
          "metaInfo": {
            "httpApiId": 5318056,
            "httpApiCaseId": 65361575,
            "httpApiName": "LG0101 账号密码登录",
            "httpApiPath": "/login",
            "httpApiMethod": "post",
            "httpApiCaseName": "登录用户user_test",
            "id": "6b674884-faa2-4aae-a0fd-41eb9f17d47e",
            "type": "http"
          },
          "type": "http",
          "protocolProfileBehavior": {
            "useWhatWGUrlParser": false,
            "disableUrlEncoding": false
          }
        },
        {
          "id": "0d39ed7b-e952-4221-a7e8-d7e20d28b759",
          "name": "QZ0201 搜索测试题(QZ0201 搜索测试题)",
          "request": {
            "url": {
              "protocol": "http",
              "port": "8000",
              "path": [
                "quizzes"
              ],
              "host": [
                "127",
                "0",
                "0",
                "1"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "keywords",
                  "value": ""
                }
              ],
              "variable": []
            },
            "header": [
              {
                "key": "User-Agent",
                "value": "Apifox/1.0.0 (https://www.apifox.cn)"
              }
            ],
            "method": "GET",
            "baseUrl": "http://127.0.0.1:8000",
            "body": {},
            "type": "http"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "postProcessors.0.extractor",
                "type": "text/javascript",
                "exec": [
                  "",
                  "        if (JSON.setEnableBigInt) {",
                  "          JSON.setEnableBigInt(undefined);",
                  "        }",
                  "        ",
                  "      try{",
                  "        ",
                  "          const expression = pm.variables.replaceIn(`$.result.length`);",
                  "          const JSONPath = require('jsonpath-plus').JSONPath;",
                  "          const jsonData = pm.response.json();",
                  "          let value = JSONPath({",
                  "            json: jsonData,",
                  "            path: expression,",
                  "            wrap: false",
                  "          });",
                  "",
                  "          ",
                  "          if (false && undefined !== undefined) {",
                  "            if (Array.isArray(value)) {",
                  "              value = Number(undefined) >= 0 ? value[undefined] : value[value.length + Number(undefined)];",
                  "            } else {",
                  "              value = undefined;",
                  "            }",
                  "          }",
                  "          ",
                  "        ",
                  "        switch (typeof value) {",
                  "          case 'object':",
                  "            value = JSON.stringify(value);",
                  "            break;",
                  "          default:",
                  "            value = String(value);",
                  "            break;",
                  "        }",
                  "      ",
                  "        pm.environment.set(`num_later`, value);console.log('已设置环境变量【num_later】，值为 【' + value + '】')",
                  "      } catch(e) {",
                  "        e.message = '提取变量【num_later】出错: ' + e.message;",
                  "        throw e;",
                  "      }",
                  "  ",
                  "      "
                ]
              }
            },
            {
              "listen": "test",
              "script": {
                "id": "postProcessors.1.customScript",
                "type": "text/javascript",
                "exec": [
                  "",
                  "        if (JSON.setEnableBigInt) {",
                  "          JSON.setEnableBigInt(undefined);",
                  "        }",
                  "        var num_pre = Number(pm.environment.get('num_pre'));",
                  "",
                  "pm.environment.set('num_pre', Number(num_pre)+3);",
                  "      "
                ]
              }
            }
          ],
          "responseDefinition": {
            "id": 70049266,
            "createdAt": "2022-07-15T11:28:36.000Z",
            "updatedAt": "2022-07-15T11:29:54.000Z",
            "deletedAt": null,
            "apiDetailId": 29663288,
            "name": "成功",
            "code": 200,
            "contentType": "json",
            "jsonSchema": {
              "type": "object",
              "properties": {
                "result": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/13080595"
                  }
                }
              },
              "x-apifox-orders": [
                "result"
              ],
              "required": [
                "result"
              ]
            },
            "defaultEnable": true,
            "projectId": 0,
            "ordering": 1,
            "schemaDefinitions": {
              "1097305": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "integer",
                    "title": "user的id",
                    "mock": {
                      "mock": "@integer(10000)"
                    }
                  },
                  "username": {
                    "type": "string",
                    "title": "用户名",
                    "mock": {
                      "mock": "@cname"
                    }
                  },
                  "nickname": {
                    "type": "string",
                    "title": "昵称",
                    "mock": {
                      "mock": "@cname"
                    }
                  },
                  "email": {
                    "type": "string",
                    "title": "邮箱",
                    "mock": {
                      "mock": "@email"
                    }
                  },
                  "telephone": {
                    "type": "string",
                    "title": "电话"
                  },
                  "birthday": {
                    "type": "string",
                    "title": "生日",
                    "mock": {
                      "mock": "@date('yyyy-MM-dd')"
                    }
                  },
                  "avatar": {
                    "type": "string",
                    "title": "头像",
                    "description": "头像的url地址",
                    "mock": {
                      "mock": "@image"
                    }
                  },
                  "is_admin": {
                    "type": "boolean",
                    "title": "是否管理员",
                    "mock": {
                      "mock": "@boolean"
                    }
                  },
                  "county": {
                    "type": "string",
                    "title": "县区",
                    "description": "用户所在县区",
                    "mock": {
                      "mock": "@county"
                    }
                  },
                  "town": {
                    "type": "string",
                    "title": "乡镇",
                    "description": "用户所在乡镇",
                    "mock": {
                      "mock": "@county"
                    }
                  },
                  "registration_time": {
                    "type": "string",
                    "mock": {
                      "mock": "@datetime('yyyy-MM-dd HH:mm:ss')"
                    },
                    "title": "注册时间"
                  },
                  "login_time": {
                    "type": "string",
                    "mock": {
                      "mock": "@datetime('yyyy-MM-dd HH:mm:ss')"
                    },
                    "title": "登录时间"
                  },
                  "wechat": {
                    "type": "boolean",
                    "title": "绑定微信"
                  },
                  "points_sum": {
                    "type": "integer",
                    "title": "总分数",
                    "mock": {
                      "mock": "@integer(0)"
                    },
                    "minimum": 0
                  },
                  "points_now": {
                    "type": "integer",
                    "title": "现有分数",
                    "mock": {
                      "mock": "@integer(0)"
                    },
                    "minimum": 0
                  },
                  "title": {
                    "type": "object",
                    "properties": {
                      "color": {
                        "type": "string",
                        "mock": {
                          "mock": "@color"
                        },
                        "title": "颜色"
                      },
                      "title": {
                        "type": "string",
                        "mock": {
                          "mock": "@cword"
                        },
                        "title": "称号"
                      }
                    },
                    "title": "标题",
                    "mock": {
                      "mock": "@cname"
                    },
                    "x-apifox-orders": [
                      "title",
                      "color"
                    ],
                    "required": [
                      "title",
                      "color"
                    ]
                  }
                },
                "required": [
                  "id",
                  "email",
                  "username",
                  "is_admin",
                  "avatar",
                  "registration_time",
                  "login_time",
                  "nickname",
                  "telephone",
                  "birthday",
                  "county",
                  "town",
                  "wechat",
                  "points_sum",
                  "points_now",
                  "title"
                ],
                "x-apifox-orders": [
                  "id",
                  "username",
                  "nickname",
                  "email",
                  "telephone",
                  "birthday",
                  "avatar",
                  "is_admin",
                  "county",
                  "town",
                  "points_sum",
                  "points_now",
                  "title",
                  "registration_time",
                  "login_time",
                  "wechat"
                ],
                "title": "user_all",
                "name": "user_all"
              },
              "13080595": {
                "type": "object",
                "properties": {
                  "question": {
                    "type": "string",
                    "title": "问题",
                    "mock": {
                      "mock": "@ctitle"
                    }
                  },
                  "options": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "mock": {
                        "mock": "@csentence"
                      }
                    },
                    "title": "选项"
                  },
                  "explanation": {
                    "type": "string",
                    "title": "答案解析",
                    "mock": {
                      "mock": "@cparagraph"
                    }
                  },
                  "answer": {
                    "type": "integer",
                    "title": "答案序号",
                    "description": "options数组下标"
                  },
                  "id": {
                    "type": "integer"
                  },
                  "visibility": {
                    "type": "boolean",
                    "title": ""
                  },
                  "author": {
                    "$ref": "#/definitions/1097305"
                  },
                  "voice_source": {
                    "title": "播报语音链接",
                    "mock": {
                      "mock": "@url(\"http\")"
                    },
                    "type": [
                      "string",
                      "null"
                    ]
                  }
                },
                "x-apifox-orders": [
                  "question",
                  "options",
                  "answer",
                  "explanation",
                  "id",
                  "author",
                  "visibility",
                  "voice_source"
                ],
                "required": [
                  "question",
                  "answer",
                  "options",
                  "explanation",
                  "id",
                  "visibility",
                  "author",
                  "voice_source"
                ],
                "title": "quiz_all",
                "name": "quiz_all"
              }
            }
          },
          "requestDefinition": {
            "jsonSchema": {}
          },
          "metaInfo": {
            "httpApiId": 29663288,
            "httpApiCaseId": 34623807,
            "httpApiName": "QZ0201 搜索测试题",
            "httpApiPath": "/quizzes",
            "httpApiMethod": "get",
            "httpApiCaseName": "QZ0201 搜索测试题",
            "id": "99d0c733-1e00-44f4-a47c-f335d115d1d8",
            "type": "http"
          },
          "type": "http",
          "protocolProfileBehavior": {
            "useWhatWGUrlParser": false,
            "disableUrlEncoding": false
          }
        },
        {
          "id": "50226571-1951-49d1-a187-23609b5c1b51",
          "name": "QZ0202 随机测试题(QZ0202 随机测试题)",
          "request": {
            "url": {
              "protocol": "http",
              "port": "8000",
              "path": [
                "quizzes",
                "random"
              ],
              "host": [
                "127",
                "0",
                "0",
                "1"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "User-Agent",
                "value": "Apifox/1.0.0 (https://www.apifox.cn)"
              }
            ],
            "method": "GET",
            "baseUrl": "http://127.0.0.1:8000",
            "body": {},
            "type": "http"
          },
          "response": [],
          "event": [],
          "responseDefinition": {
            "id": 70049339,
            "createdAt": "2022-07-15T11:30:51.000Z",
            "updatedAt": "2022-07-23T08:32:52.000Z",
            "deletedAt": null,
            "apiDetailId": 29663329,
            "name": "成功",
            "code": 200,
            "contentType": "json",
            "jsonSchema": {
              "x-apifox-overrides": {},
              "type": "object",
              "properties": {
                "quiz": {
                  "$ref": "#/definitions/13080595",
                  "x-apifox-overrides": {}
                }
              },
              "x-apifox-refs": {},
              "x-apifox-orders": [
                "quiz"
              ],
              "required": [
                "quiz"
              ]
            },
            "defaultEnable": true,
            "projectId": 0,
            "ordering": 1,
            "schemaDefinitions": {
              "1097305": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "integer",
                    "title": "user的id",
                    "mock": {
                      "mock": "@integer(10000)"
                    }
                  },
                  "username": {
                    "type": "string",
                    "title": "用户名",
                    "mock": {
                      "mock": "@cname"
                    }
                  },
                  "nickname": {
                    "type": "string",
                    "title": "昵称",
                    "mock": {
                      "mock": "@cname"
                    }
                  },
                  "email": {
                    "type": "string",
                    "title": "邮箱",
                    "mock": {
                      "mock": "@email"
                    }
                  },
                  "telephone": {
                    "type": "string",
                    "title": "电话"
                  },
                  "birthday": {
                    "type": "string",
                    "title": "生日",
                    "mock": {
                      "mock": "@date('yyyy-MM-dd')"
                    }
                  },
                  "avatar": {
                    "type": "string",
                    "title": "头像",
                    "description": "头像的url地址",
                    "mock": {
                      "mock": "@image"
                    }
                  },
                  "is_admin": {
                    "type": "boolean",
                    "title": "是否管理员",
                    "mock": {
                      "mock": "@boolean"
                    }
                  },
                  "county": {
                    "type": "string",
                    "title": "县区",
                    "description": "用户所在县区",
                    "mock": {
                      "mock": "@county"
                    }
                  },
                  "town": {
                    "type": "string",
                    "title": "乡镇",
                    "description": "用户所在乡镇",
                    "mock": {
                      "mock": "@county"
                    }
                  },
                  "registration_time": {
                    "type": "string",
                    "mock": {
                      "mock": "@datetime('yyyy-MM-dd HH:mm:ss')"
                    },
                    "title": "注册时间"
                  },
                  "login_time": {
                    "type": "string",
                    "mock": {
                      "mock": "@datetime('yyyy-MM-dd HH:mm:ss')"
                    },
                    "title": "登录时间"
                  },
                  "wechat": {
                    "type": "boolean",
                    "title": "绑定微信"
                  },
                  "points_sum": {
                    "type": "integer",
                    "title": "总分数",
                    "mock": {
                      "mock": "@integer(0)"
                    },
                    "minimum": 0
                  },
                  "points_now": {
                    "type": "integer",
                    "title": "现有分数",
                    "mock": {
                      "mock": "@integer(0)"
                    },
                    "minimum": 0
                  },
                  "title": {
                    "type": "object",
                    "properties": {
                      "color": {
                        "type": "string",
                        "mock": {
                          "mock": "@color"
                        },
                        "title": "颜色"
                      },
                      "title": {
                        "type": "string",
                        "mock": {
                          "mock": "@cword"
                        },
                        "title": "称号"
                      }
                    },
                    "title": "标题",
                    "mock": {
                      "mock": "@cname"
                    },
                    "x-apifox-orders": [
                      "title",
                      "color"
                    ],
                    "required": [
                      "title",
                      "color"
                    ]
                  }
                },
                "required": [
                  "id",
                  "email",
                  "username",
                  "is_admin",
                  "avatar",
                  "registration_time",
                  "login_time",
                  "nickname",
                  "telephone",
                  "birthday",
                  "county",
                  "town",
                  "wechat",
                  "points_sum",
                  "points_now",
                  "title"
                ],
                "x-apifox-orders": [
                  "id",
                  "username",
                  "nickname",
                  "email",
                  "telephone",
                  "birthday",
                  "avatar",
                  "is_admin",
                  "county",
                  "town",
                  "points_sum",
                  "points_now",
                  "title",
                  "registration_time",
                  "login_time",
                  "wechat"
                ],
                "title": "user_all",
                "name": "user_all"
              },
              "13080595": {
                "type": "object",
                "properties": {
                  "question": {
                    "type": "string",
                    "title": "问题",
                    "mock": {
                      "mock": "@ctitle"
                    }
                  },
                  "options": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "mock": {
                        "mock": "@csentence"
                      }
                    },
                    "title": "选项"
                  },
                  "explanation": {
                    "type": "string",
                    "title": "答案解析",
                    "mock": {
                      "mock": "@cparagraph"
                    }
                  },
                  "answer": {
                    "type": "integer",
                    "title": "答案序号",
                    "description": "options数组下标"
                  },
                  "id": {
                    "type": "integer"
                  },
                  "visibility": {
                    "type": "boolean",
                    "title": ""
                  },
                  "author": {
                    "$ref": "#/definitions/1097305"
                  },
                  "voice_source": {
                    "title": "播报语音链接",
                    "mock": {
                      "mock": "@url(\"http\")"
                    },
                    "type": [
                      "string",
                      "null"
                    ]
                  }
                },
                "x-apifox-orders": [
                  "question",
                  "options",
                  "answer",
                  "explanation",
                  "id",
                  "author",
                  "visibility",
                  "voice_source"
                ],
                "required": [
                  "question",
                  "answer",
                  "options",
                  "explanation",
                  "id",
                  "visibility",
                  "author",
                  "voice_source"
                ],
                "title": "quiz_all",
                "name": "quiz_all"
              }
            }
          },
          "requestDefinition": {
            "jsonSchema": {}
          },
          "metaInfo": {
            "httpApiId": 29663329,
            "httpApiCaseId": 34644618,
            "httpApiName": "QZ0202 随机测试题",
            "httpApiPath": "/quizzes/random",
            "httpApiMethod": "get",
            "httpApiCaseName": "QZ0202 随机测试题",
            "id": "ffebe94c-de23-4470-9ca9-78e6a97a1365",
            "type": "http"
          },
          "type": "http",
          "protocolProfileBehavior": {
            "useWhatWGUrlParser": false,
            "disableUrlEncoding": false
          }
        }
      ],
      "name": "QZ模块理想状况"
    }
  ],
  "info": {
    "name": "QZ模块理想状况"
  },
  "dataSchemas": {
    "1097305": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "title": "user的id",
          "mock": {
            "mock": "@integer(10000)"
          }
        },
        "username": {
          "type": "string",
          "title": "用户名",
          "mock": {
            "mock": "@cname"
          }
        },
        "nickname": {
          "type": "string",
          "title": "昵称",
          "mock": {
            "mock": "@cname"
          }
        },
        "email": {
          "type": "string",
          "title": "邮箱",
          "mock": {
            "mock": "@email"
          }
        },
        "telephone": {
          "type": "string",
          "title": "电话"
        },
        "birthday": {
          "type": "string",
          "title": "生日",
          "mock": {
            "mock": "@date('yyyy-MM-dd')"
          }
        },
        "avatar": {
          "type": "string",
          "title": "头像",
          "description": "头像的url地址",
          "mock": {
            "mock": "@image"
          }
        },
        "is_admin": {
          "type": "boolean",
          "title": "是否管理员",
          "mock": {
            "mock": "@boolean"
          }
        },
        "county": {
          "type": "string",
          "title": "县区",
          "description": "用户所在县区",
          "mock": {
            "mock": "@county"
          }
        },
        "town": {
          "type": "string",
          "title": "乡镇",
          "description": "用户所在乡镇",
          "mock": {
            "mock": "@county"
          }
        },
        "registration_time": {
          "type": "string",
          "mock": {
            "mock": "@datetime('yyyy-MM-dd HH:mm:ss')"
          },
          "title": "注册时间"
        },
        "login_time": {
          "type": "string",
          "mock": {
            "mock": "@datetime('yyyy-MM-dd HH:mm:ss')"
          },
          "title": "登录时间"
        },
        "wechat": {
          "type": "boolean",
          "title": "绑定微信"
        },
        "points_sum": {
          "type": "integer",
          "title": "总分数",
          "mock": {
            "mock": "@integer(0)"
          },
          "minimum": 0
        },
        "points_now": {
          "type": "integer",
          "title": "现有分数",
          "mock": {
            "mock": "@integer(0)"
          },
          "minimum": 0
        },
        "title": {
          "type": "object",
          "properties": {
            "color": {
              "type": "string",
              "mock": {
                "mock": "@color"
              },
              "title": "颜色"
            },
            "title": {
              "type": "string",
              "mock": {
                "mock": "@cword"
              },
              "title": "称号"
            }
          },
          "title": "标题",
          "mock": {
            "mock": "@cname"
          },
          "x-apifox-orders": [
            "title",
            "color"
          ],
          "required": [
            "title",
            "color"
          ]
        }
      },
      "required": [
        "id",
        "email",
        "username",
        "is_admin",
        "avatar",
        "registration_time",
        "login_time",
        "nickname",
        "telephone",
        "birthday",
        "county",
        "town",
        "wechat",
        "points_sum",
        "points_now",
        "title"
      ],
      "x-apifox-orders": [
        "id",
        "username",
        "nickname",
        "email",
        "telephone",
        "birthday",
        "avatar",
        "is_admin",
        "county",
        "town",
        "points_sum",
        "points_now",
        "title",
        "registration_time",
        "login_time",
        "wechat"
      ],
      "title": "user_all",
      "name": "user_all"
    },
    "13080595": {
      "type": "object",
      "properties": {
        "question": {
          "type": "string",
          "title": "问题",
          "mock": {
            "mock": "@ctitle"
          }
        },
        "options": {
          "type": "array",
          "items": {
            "type": "string",
            "mock": {
              "mock": "@csentence"
            }
          },
          "title": "选项"
        },
        "explanation": {
          "type": "string",
          "title": "答案解析",
          "mock": {
            "mock": "@cparagraph"
          }
        },
        "answer": {
          "type": "integer",
          "title": "答案序号",
          "description": "options数组下标"
        },
        "id": {
          "type": "integer"
        },
        "visibility": {
          "type": "boolean",
          "title": ""
        },
        "author": {
          "$ref": "#/definitions/1097305"
        },
        "voice_source": {
          "title": "播报语音链接",
          "mock": {
            "mock": "@url(\"http\")"
          },
          "type": [
            "string",
            "null"
          ]
        }
      },
      "x-apifox-orders": [
        "question",
        "options",
        "answer",
        "explanation",
        "id",
        "author",
        "visibility",
        "voice_source"
      ],
      "required": [
        "question",
        "answer",
        "options",
        "explanation",
        "id",
        "visibility",
        "author",
        "voice_source"
      ],
      "title": "quiz_all",
      "name": "quiz_all"
    },
    "13080737": {
      "type": "object",
      "properties": {
        "question": {
          "type": "string",
          "title": "问题",
          "mock": {
            "mock": "@ctitle"
          }
        },
        "options": {
          "type": "array",
          "items": {
            "type": "string",
            "mock": {
              "mock": "@csentence"
            }
          },
          "title": "选项"
        },
        "explanation": {
          "type": "string",
          "title": "答案解析",
          "mock": {
            "mock": "@cparagraph"
          }
        },
        "answer": {
          "type": "integer",
          "title": "答案序号"
        },
        "voice_source": {
          "type": "string",
          "mock": {
            "mock": "@url(\"http\")"
          },
          "title": "播报语音链接"
        }
      },
      "x-apifox-orders": [
        "question",
        "options",
        "answer",
        "explanation",
        "voice_source"
      ],
      "required": [
        "question",
        "answer",
        "options",
        "explanation"
      ],
      "title": "[入] quiz_update",
      "name": "[入] quiz_update"
    }
  },
  "mockRules": {
    "rules": [],
    "enableSystemRule": true
  },
  "environment": {
    "id": 510825,
    "name": "测试环境",
    "baseUrl": "http://127.0.0.1:8000",
    "baseUrls": {
      "default": "http://127.0.0.1:8000"
    },
    "variable": {
      "id": "0a6ea52d-30fe-4f5d-aeb8-a852a42df6ad",
      "name": "测试环境",
      "baseUrl": "http://127.0.0.1:8000",
      "baseUrls": {
        "default": "http://127.0.0.1:8000"
      },
      "values": [
        {
          "type": "any",
          "value": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ1c2VybmFtZSI6ImFkbWluIiwiaWQiOjEsImV4cCI6MTY5MTMzNDQxOC4xNzgyMjZ9.G4VOuMCrE_SwF3qw1Nq8fIwILC2AhUmQ3TlTmv3vnjs",
          "key": "token",
          "initialValue": ""
        },
        {
          "type": "any",
          "value": "87",
          "key": "quiz_id",
          "initialValue": ""
        },
        {
          "type": "any",
          "value": "",
          "key": "word_id_2",
          "initialValue": ""
        },
        {
          "type": "any",
          "value": "",
          "key": "word_id_1",
          "initialValue": ""
        },
        {
          "type": "any",
          "value": "",
          "key": "token_2",
          "initialValue": ""
        },
        {
          "type": "any",
          "value": "",
          "key": "word_id_3",
          "initialValue": ""
        },
        {
          "type": "any",
          "value": "2",
          "key": "user_id",
          "initialValue": ""
        },
        {
          "type": "any",
          "value": "17",
          "key": "article_id",
          "initialValue": ""
        },
        {
          "type": "any",
          "value": "",
          "key": "comment_id_1",
          "initialValue": ""
        },
        {
          "type": "any",
          "value": "",
          "key": "comment_id_2",
          "initialValue": ""
        },
        {
          "type": "any",
          "value": "",
          "key": "like_num_2",
          "initialValue": ""
        },
        {
          "type": "any",
          "value": 6,
          "key": "num_pre",
          "initialValue": ""
        },
        {
          "type": "any",
          "value": "7",
          "key": "num_later",
          "initialValue": ""
        },
        {
          "type": "any",
          "value": "2",
          "key": "id",
          "initialValue": "2"
        },
        {
          "type": "any",
          "value": "13",
          "key": "music_id",
          "initialValue": "13"
        },
        {
          "type": "any",
          "value": "undefined",
          "key": "rewards_id",
          "initialValue": "undefined"
        },
        {
          "type": "any",
          "value": "undefined",
          "key": "title_id",
          "initialValue": "undefined"
        },
        {
          "type": "any",
          "value": "SP000011",
          "key": "products_id",
          "initialValue": "SP000011"
        },
        {
          "type": "any",
          "value": "DD000024",
          "key": "order_id",
          "isBindInitial": false,
          "initialValue": "undefined"
        },
        {
          "type": "any",
          "value": "JL000039",
          "key": "transaction_id",
          "initialValue": "JL000039"
        }
      ]
    },
    "type": "normal",
    "parameter": {
      "header": [],
      "query": [],
      "body": [],
      "cookie": []
    }
  },
  "globals": {
    "baseUrl": "",
    "baseUrls": {},
    "variable": {
      "id": "e362dfca-4c10-492d-9417-57d2a77ff8dc",
      "baseUrl": "",
      "baseUrls": {},
      "values": []
    },
    "parameter": {
      "header": [],
      "query": [],
      "body": [],
      "cookie": []
    }
  },
  "isServerBuild": false,
  "isTestFlowControl": false
}
