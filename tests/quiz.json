{
    "apifoxCli": "1.1.0",
    "item": [
        {
            "item": [
                {
                    "id": "7645e325-03ec-4200-a397-dcf2cd3dd7a6",
                    "name": "LG0101 账号密码登录(登录用户user_test)",
                    "request": {
                        "url": {
                            "protocol": "http",
                            "port": "8000",
                            "path": [
                                "login"
                            ],
                            "host": [
                                "127",
                                "0",
                                "0",
                                "1"
                            ],
                            "query": [],
                            "variable": []
                        },
                        "header": [
                            {
                                "key": "token",
                                "value": "{{token}}"
                            },
                            {
                                "key": "User-Agent",
                                "value": "apifox/1.0.0 (https://www.apifox.cn)"
                            },
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "method": "POST",
                        "body": {
                            "mode": "raw",
                            "raw": "{\r\n    \"username\": \"user_test\",\r\n    \"password\": \"123456\"\r\n}"
                        },
                        "type": "http"
                    },
                    "response": [],
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "id": "postProcessors.0.extractor",
                                "type": "text/javascript",
                                "exec": [
                                    "",
                                    "      try{",
                                    "        ",
                                    "          const expression = pm.variables.replaceIn(`$.token`);",
                                    "          const JSONPath = require('jsonpath-plus').JSONPath;",
                                    "          const jsonData = pm.response.json();",
                                    "          let value = JSONPath({",
                                    "            json: jsonData,",
                                    "            path: expression,",
                                    "            wrap: false",
                                    "          });",
                                    "          ",
                                    "        ",
                                    "        switch (typeof value) {",
                                    "          case 'object':",
                                    "            value = JSON.stringify(value);",
                                    "            break;",
                                    "          default:",
                                    "            value = String(value);",
                                    "            break;",
                                    "        }",
                                    "      ",
                                    "        pm.environment.set(`token`, value);console.log('已设置环境变量【'+ `token` + '】，值为【' + value + '】')",
                                    "      } catch(e) {",
                                    "        e.message = '提取变量【token】出错：' + e.message;",
                                    "        throw e;",
                                    "      }",
                                    "  "
                                ]
                            }
                        }
                    ],
                    "responseDefinition": {
                        "id": 4183271,
                        "createdAt": "2021-07-29T14:43:37.000Z",
                        "updatedAt": "2021-08-12T16:27:18.000Z",
                        "deletedAt": null,
                        "apiDetailId": 5318056,
                        "name": "成功",
                        "code": 200,
                        "contentType": "json",
                        "jsonSchema": {
                            "type": "object",
                            "properties": {
                                "token": {
                                    "type": "string",
                                    "mock": {
                                        "mock": "@string"
                                    },
                                    "title": "权"
                                },
                                "id": {
                                    "type": "integer",
                                    "title": "用户id"
                                }
                            },
                            "required": [
                                "token",
                                "id"
                            ]
                        },
                        "defaultEnable": true,
                        "projectId": 0,
                        "ordering": 1
                    },
                    "metaInfo": {
                        "httpApiId": 5318056,
                        "httpApiCaseId": 65361417,
                        "httpApiName": "LG0101 账号密码登录",
                        "httpApiPath": "/login",
                        "httpApiMethod": "post",
                        "httpApiCaseName": "登录用户user_test"
                    },
                    "type": "http",
                    "protocolProfileBehavior": {
                        "disableUrlEncoding": false
                    }
                },
                {
                    "id": "92ae4d4f-9093-4841-9404-6631107df6b2",
                    "name": "QZ0201 搜索测试题(QZ0201 搜索测试题)",
                    "request": {
                        "url": {
                            "protocol": "http",
                            "port": "8000",
                            "path": [
                                "quizzes"
                            ],
                            "host": [
                                "127",
                                "0",
                                "0",
                                "1"
                            ],
                            "query": [
                                {
                                    "key": "keywords",
                                    "value": ""
                                }
                            ],
                            "variable": []
                        },
                        "header": [
                            {
                                "key": "token",
                                "value": "{{token}}"
                            },
                            {
                                "key": "User-Agent",
                                "value": "apifox/1.0.0 (https://www.apifox.cn)"
                            }
                        ],
                        "method": "GET",
                        "body": {},
                        "type": "http"
                    },
                    "response": [],
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "id": "postProcessors.0.extractor",
                                "type": "text/javascript",
                                "exec": [
                                    "",
                                    "      try{",
                                    "        ",
                                    "          const expression = pm.variables.replaceIn(`$.result.length`);",
                                    "          const JSONPath = require('jsonpath-plus').JSONPath;",
                                    "          const jsonData = pm.response.json();",
                                    "          let value = JSONPath({",
                                    "            json: jsonData,",
                                    "            path: expression,",
                                    "            wrap: false",
                                    "          });",
                                    "          ",
                                    "        ",
                                    "        switch (typeof value) {",
                                    "          case 'object':",
                                    "            value = JSON.stringify(value);",
                                    "            break;",
                                    "          default:",
                                    "            value = String(value);",
                                    "            break;",
                                    "        }",
                                    "      ",
                                    "        pm.environment.set(`num_pre`, value);console.log('已设置环境变量【'+ `num_pre` + '】，值为【' + value + '】')",
                                    "      } catch(e) {",
                                    "        e.message = '提取变量【num_pre】出错：' + e.message;",
                                    "        throw e;",
                                    "      }",
                                    "  "
                                ]
                            }
                        }
                    ],
                    "responseDefinition": {
                        "id": 70049266,
                        "createdAt": "2022-07-15T11:28:36.000Z",
                        "updatedAt": "2022-07-15T11:29:54.000Z",
                        "deletedAt": null,
                        "apiDetailId": 29663288,
                        "name": "成功",
                        "code": 200,
                        "contentType": "json",
                        "jsonSchema": {
                            "type": "object",
                            "properties": {
                                "result": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/13080595"
                                    }
                                }
                            },
                            "x-apifox-orders": [
                                "result"
                            ],
                            "required": [
                                "result"
                            ]
                        },
                        "defaultEnable": true,
                        "projectId": 0,
                        "ordering": 1
                    },
                    "metaInfo": {
                        "httpApiId": 29663288,
                        "httpApiCaseId": 37835120,
                        "httpApiName": "QZ0201 搜索测试题",
                        "httpApiPath": "/quizzes",
                        "httpApiMethod": "get",
                        "httpApiCaseName": "QZ0201 搜索测试题"
                    },
                    "type": "http",
                    "protocolProfileBehavior": {
                        "disableUrlEncoding": false
                    }
                },
                {
                    "id": "f9ed8ccc-df2f-42e6-9481-c49fc8149c7d",
                    "name": "QZ0102 增加单个测试(QZ0102 增加单个测试)",
                    "request": {
                        "url": {
                            "protocol": "http",
                            "port": "8000",
                            "path": [
                                "quizzes"
                            ],
                            "host": [
                                "127",
                                "0",
                                "0",
                                "1"
                            ],
                            "query": [],
                            "variable": []
                        },
                        "header": [
                            {
                                "key": "token",
                                "value": "{{token}}"
                            },
                            {
                                "key": "User-Agent",
                                "value": "apifox/1.0.0 (https://www.apifox.cn)"
                            },
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "method": "POST",
                        "body": {
                            "mode": "raw",
                            "raw": "{\n    \"question\": \"目里特意七\",\n    \"options\": [\n        \"下改深区矿许之体山因本电气强收用度。\",\n        \"但存务事需见热却候心部切各。\"\n    ],\n    \"answer\": 6,\n    \"explanation\": \"正周按到组同先现亲通布安角事便明。书厂例了温最此回教况直元取提单叫。调任思角行石状东那种联关义观。提比便化满才与造我话切况外。受报指几使院精土难基车清不才可基候。\",\n    \"voice_source\": \"http://qdnwcqfb.id/aifs\"\n}"
                        },
                        "type": "http"
                    },
                    "response": [],
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "id": "postProcessors.0.assertion",
                                "type": "text/javascript",
                                "exec": [
                                    "pm.test(pm.variables.replaceIn(`Quiz添加结果检查`), function() {",
                                    "        ",
                                    "          const expression = pm.variables.replaceIn(`$`);",
                                    "          const JSONPath = require('jsonpath-plus').JSONPath;",
                                    "          let jsonData;",
                                    "          try {",
                                    "            jsonData = pm.response.json();",
                                    "          } catch(e) {",
                                    "            let text = pm.response.text();",
                                    "            // xml 转 json",
                                    "            const xml2js = require('xml2js');",
                                    "            text = text.replace(/^[^<]*/, '').replace(/[^>]*$/, '');",
                                    "            let json;",
                                    "            let xmlParseOptions = {",
                                    "                explicitArray: false,",
                                    "                trim: true,",
                                    "                ignoreAttrs: true,",
                                    "            };",
                                    "            xml2js.parseString(text, xmlParseOptions, function (_, result) {",
                                    "                jsonData = result;",
                                    "            });",
                                    "          }",
                                    "          const value = JSONPath({",
                                    "            json: jsonData,",
                                    "            path: expression,",
                                    "            wrap: false",
                                    "          });",
                                    "          ",
                                    "        ",
                                    "        pm.expectWithKey({key:'$',value:value}).to.exist",
                                    "      });"
                                ]
                            }
                        },
                        {
                            "listen": "test",
                            "script": {
                                "id": "postProcessors.1.extractor",
                                "type": "text/javascript",
                                "exec": [
                                    "",
                                    "      try{",
                                    "        ",
                                    "          const expression = pm.variables.replaceIn(`$.quiz.id`);",
                                    "          const JSONPath = require('jsonpath-plus').JSONPath;",
                                    "          const jsonData = pm.response.json();",
                                    "          let value = JSONPath({",
                                    "            json: jsonData,",
                                    "            path: expression,",
                                    "            wrap: false",
                                    "          });",
                                    "          ",
                                    "        ",
                                    "        switch (typeof value) {",
                                    "          case 'object':",
                                    "            value = JSON.stringify(value);",
                                    "            break;",
                                    "          default:",
                                    "            value = String(value);",
                                    "            break;",
                                    "        }",
                                    "      ",
                                    "        pm.environment.set(`quiz_id`, value);console.log('已设置环境变量【'+ `quiz_id` + '】，值为【' + value + '】')",
                                    "      } catch(e) {",
                                    "        e.message = '提取变量【quiz_id】出错：' + e.message;",
                                    "        throw e;",
                                    "      }",
                                    "  "
                                ]
                            }
                        }
                    ],
                    "responseDefinition": {
                        "id": 70048663,
                        "createdAt": "2022-07-15T11:22:03.000Z",
                        "updatedAt": "2022-07-23T08:30:31.000Z",
                        "deletedAt": null,
                        "apiDetailId": 29662986,
                        "name": "成功",
                        "code": 200,
                        "contentType": "json",
                        "jsonSchema": {
                            "x-apifox-overrides": {},
                            "type": "object",
                            "x-apifox-refs": {},
                            "properties": {
                                "quiz": {
                                    "$ref": "#/definitions/13080595",
                                    "x-apifox-overrides": {}
                                }
                            },
                            "required": [
                                "quiz"
                            ],
                            "x-apifox-orders": [
                                "quiz"
                            ]
                        },
                        "defaultEnable": true,
                        "projectId": 0,
                        "ordering": 1
                    },
                    "metaInfo": {
                        "httpApiId": 29662986,
                        "httpApiCaseId": 34623800,
                        "httpApiName": "QZ0102 增加单个测试",
                        "httpApiPath": "/quizzes",
                        "httpApiMethod": "post",
                        "httpApiCaseName": "QZ0102 增加单个测试"
                    },
                    "type": "http",
                    "protocolProfileBehavior": {
                        "disableUrlEncoding": false
                    }
                },
                {
                    "id": "d4406afa-a39a-42f7-a3be-355ee874183c",
                    "name": "QZ0201 搜索测试题(QZ0201 搜索测试题)",
                    "request": {
                        "url": {
                            "protocol": "http",
                            "port": "8000",
                            "path": [
                                "quizzes"
                            ],
                            "host": [
                                "127",
                                "0",
                                "0",
                                "1"
                            ],
                            "query": [
                                {
                                    "key": "keywords",
                                    "value": ""
                                }
                            ],
                            "variable": []
                        },
                        "header": [
                            {
                                "key": "token",
                                "value": "{{token}}"
                            },
                            {
                                "key": "User-Agent",
                                "value": "apifox/1.0.0 (https://www.apifox.cn)"
                            }
                        ],
                        "method": "GET",
                        "body": {},
                        "type": "http"
                    },
                    "response": [],
                    "event": [
                        {
                            "listen": "prerequest",
                            "script": {
                                "id": "commonScript.assertion",
                                "type": "text/javascript",
                                "exec": [
                                    "",
                                    " ____string2Number = function(value, errorMsg) {",
                                    "  if(typeof value !== 'string'){",
                                    "    return value;",
                                    "  }",
                                    "  // 转换成数字类型后比较",
                                    "  if (/^\\-?\\d+$/.test(value)) {",
                                    "      return parseInt(value);",
                                    "  } else if (/^\\-?\\d+\\.\\d+$/.test(value)) {",
                                    "      return parseFloat(value);",
                                    "  } else {",
                                    "      throw new Error(errorMsg || '数据类型不匹配')",
                                    "  }",
                                    "}",
                                    "",
                                    " ____formatValues = function(value, stringCompareValue, comparison) {",
                                    "  try{",
                                    "    const isNumberComparisons = ['isBelow', 'isAtMost', 'isAbove', 'isAtLeast'].includes(comparison);",
                                    "    let compareValue;",
                                    "    switch (typeof value) {",
                                    "        case 'string':",
                                    "            if (isNumberComparisons) {",
                                    "                value = ____string2Number(value);",
                                    "                compareValue = ____string2Number(stringCompareValue);",
                                    "            } else {",
                                    "                compareValue = stringCompareValue;",
                                    "            }",
                                    "            break;",
                                    "        case 'object':",
                                    "            if (isNumberComparisons) {",
                                    "                throw new Error('object 类型的值不能使用 ' + comparison + ' 方式比较')",
                                    "            }",
                                    "            try {",
                                    "                compareValue = JSON.parse(stringCompareValue);",
                                    "            } catch (e) {",
                                    "                compareValue = stringCompareValue;",
                                    "            }",
                                    "            break;",
                                    "        case 'boolean':",
                                    "            if (isNumberComparisons) {",
                                    "                throw new Error('boolean 类型的值不能使用 ' + comparison + ' 方式比较')",
                                    "            }",
                                    "            compareValue = stringCompareValue === 'true' ? true : (stringCompareValue === 'false' ? false : stringCompareValue);",
                                    "            break;",
                                    "        case 'number':",
                                    "            if (isNumberComparisons) {",
                                    "              compareValue = ____string2Number(stringCompareValue);",
                                    "            } else {",
                                    "              compareValue = stringCompareValue;",
                                    "              value = '' + value;",
                                    "            }",
                                    "            break;",
                                    "        case 'null':",
                                    "            if (isNumberComparisons) {",
                                    "                throw new Error('null 值不能使用 ' + comparison + ' 方式比较')",
                                    "            }",
                                    "            compareValue = stringCompareValue === 'null' ? null : stringCompareValue;",
                                    "            break;",
                                    "        default:",
                                    "            compareValue = stringCompareValue;",
                                    "            break;",
                                    "    }",
                                    "    return { compareValue, value };",
                                    "  } catch(e) {",
                                    "    console.log(e);",
                                    "    throw e;",
                                    "  }",
                                    "}",
                                    ""
                                ]
                            }
                        },
                        {
                            "listen": "test",
                            "script": {
                                "id": "postProcessors.0.extractor",
                                "type": "text/javascript",
                                "exec": [
                                    "",
                                    "      try{",
                                    "        ",
                                    "          const expression = pm.variables.replaceIn(`$.result.length`);",
                                    "          const JSONPath = require('jsonpath-plus').JSONPath;",
                                    "          const jsonData = pm.response.json();",
                                    "          let value = JSONPath({",
                                    "            json: jsonData,",
                                    "            path: expression,",
                                    "            wrap: false",
                                    "          });",
                                    "          ",
                                    "        ",
                                    "        switch (typeof value) {",
                                    "          case 'object':",
                                    "            value = JSON.stringify(value);",
                                    "            break;",
                                    "          default:",
                                    "            value = String(value);",
                                    "            break;",
                                    "        }",
                                    "      ",
                                    "        pm.environment.set(`num_later`, value);console.log('已设置环境变量【'+ `num_later` + '】，值为【' + value + '】')",
                                    "      } catch(e) {",
                                    "        e.message = '提取变量【num_later】出错：' + e.message;",
                                    "        throw e;",
                                    "      }",
                                    "  "
                                ]
                            }
                        },
                        {
                            "listen": "test",
                            "script": {
                                "id": "postProcessors.1.customScript",
                                "type": "text/javascript",
                                "exec": [
                                    "var num_pre = Number(pm.environment.get('num_pre'));",
                                    "",
                                    "pm.environment.set('num_pre', Number(num_pre)+1);"
                                ]
                            }
                        },
                        {
                            "listen": "test",
                            "script": {
                                "id": "postProcessors.2.assertion",
                                "type": "text/javascript",
                                "exec": [
                                    "pm.test(pm.variables.replaceIn(`quiz数量校验`), function() {",
                                    "        ",
                                    "          const expression = pm.variables.replaceIn(`num_pre`);",
                                    "          const value = pm.environment.get(expression)",
                                    "      ",
                                    "        const formattedValues = ____formatValues(value, pm.variables.replaceIn(`{{num_later}}`), 'equal');",
                                    "        pm.expect(formattedValues.value).to.eql(formattedValues.compareValue);",
                                    "      });"
                                ]
                            }
                        }
                    ],
                    "responseDefinition": {
                        "id": 70049266,
                        "createdAt": "2022-07-15T11:28:36.000Z",
                        "updatedAt": "2022-07-15T11:29:54.000Z",
                        "deletedAt": null,
                        "apiDetailId": 29663288,
                        "name": "成功",
                        "code": 200,
                        "contentType": "json",
                        "jsonSchema": {
                            "type": "object",
                            "properties": {
                                "result": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/13080595"
                                    }
                                }
                            },
                            "x-apifox-orders": [
                                "result"
                            ],
                            "required": [
                                "result"
                            ]
                        },
                        "defaultEnable": true,
                        "projectId": 0,
                        "ordering": 1
                    },
                    "metaInfo": {
                        "httpApiId": 29663288,
                        "httpApiCaseId": 37842102,
                        "httpApiName": "QZ0201 搜索测试题",
                        "httpApiPath": "/quizzes",
                        "httpApiMethod": "get",
                        "httpApiCaseName": "QZ0201 搜索测试题"
                    },
                    "type": "http",
                    "protocolProfileBehavior": {
                        "disableUrlEncoding": false
                    }
                },
                {
                    "id": "2566081f-c6ac-4e76-95de-a1fd8174496e",
                    "name": "QZ0101 获取单个测试(QZ0101 获取单个测试)",
                    "request": {
                        "url": {
                            "protocol": "http",
                            "port": "8000",
                            "path": [
                                "quizzes",
                                "{{quiz_id}}"
                            ],
                            "host": [
                                "127",
                                "0",
                                "0",
                                "1"
                            ],
                            "query": [],
                            "variable": []
                        },
                        "header": [
                            {
                                "key": "token",
                                "value": "{{token}}"
                            },
                            {
                                "key": "User-Agent",
                                "value": "apifox/1.0.0 (https://www.apifox.cn)"
                            }
                        ],
                        "method": "GET",
                        "body": {},
                        "type": "http"
                    },
                    "response": [],
                    "event": [],
                    "responseDefinition": {
                        "id": 70047710,
                        "createdAt": "2022-07-15T11:04:02.000Z",
                        "updatedAt": "2022-07-23T07:28:13.000Z",
                        "deletedAt": null,
                        "apiDetailId": 29662407,
                        "name": "成功",
                        "code": 200,
                        "contentType": "json",
                        "jsonSchema": {
                            "x-apifox-overrides": {},
                            "type": "object",
                            "properties": {
                                "quiz": {
                                    "$ref": "#/definitions/13080595",
                                    "x-apifox-overrides": {}
                                }
                            },
                            "x-apifox-refs": {},
                            "x-apifox-orders": [
                                "quiz"
                            ],
                            "required": [
                                "quiz"
                            ]
                        },
                        "defaultEnable": true,
                        "projectId": 0,
                        "ordering": 1
                    },
                    "metaInfo": {
                        "httpApiId": 29662407,
                        "httpApiCaseId": 34623801,
                        "httpApiName": "QZ0101 获取单个测试",
                        "httpApiPath": "/quizzes/{id}",
                        "httpApiMethod": "get",
                        "httpApiCaseName": "QZ0101 获取单个测试"
                    },
                    "type": "http",
                    "protocolProfileBehavior": {
                        "disableUrlEncoding": false
                    }
                },
                {
                    "id": "ca6914a2-aee2-4c4c-aae8-16bd1b12b6a8",
                    "name": "LG0101 账号密码登录(登录用户admin)",
                    "request": {
                        "url": {
                            "protocol": "http",
                            "port": "8000",
                            "path": [
                                "login"
                            ],
                            "host": [
                                "127",
                                "0",
                                "0",
                                "1"
                            ],
                            "query": [],
                            "variable": []
                        },
                        "header": [
                            {
                                "key": "token",
                                "value": "{{token}}"
                            },
                            {
                                "key": "User-Agent",
                                "value": "apifox/1.0.0 (https://www.apifox.cn)"
                            },
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "method": "POST",
                        "body": {
                            "mode": "raw",
                            "raw": "{\r\n    \"username\": \"admin\",\r\n    \"password\": \"testtest123\"\r\n}"
                        },
                        "type": "http"
                    },
                    "response": [],
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "id": "postProcessors.0.extractor",
                                "type": "text/javascript",
                                "exec": [
                                    "",
                                    "      try{",
                                    "        ",
                                    "          const expression = pm.variables.replaceIn(`$.token`);",
                                    "          const JSONPath = require('jsonpath-plus').JSONPath;",
                                    "          const jsonData = pm.response.json();",
                                    "          let value = JSONPath({",
                                    "            json: jsonData,",
                                    "            path: expression,",
                                    "            wrap: false",
                                    "          });",
                                    "          ",
                                    "        ",
                                    "        switch (typeof value) {",
                                    "          case 'object':",
                                    "            value = JSON.stringify(value);",
                                    "            break;",
                                    "          default:",
                                    "            value = String(value);",
                                    "            break;",
                                    "        }",
                                    "      ",
                                    "        pm.environment.set(`token`, value);console.log('已设置环境变量【'+ `token` + '】，值为【' + value + '】')",
                                    "      } catch(e) {",
                                    "        e.message = '提取变量【token】出错：' + e.message;",
                                    "        throw e;",
                                    "      }",
                                    "  "
                                ]
                            }
                        },
                        {
                            "listen": "test",
                            "script": {
                                "id": "postProcessors.1.extractor",
                                "type": "text/javascript",
                                "exec": [
                                    "",
                                    "      try{",
                                    "        ",
                                    "          const expression = pm.variables.replaceIn(`$.id`);",
                                    "          const JSONPath = require('jsonpath-plus').JSONPath;",
                                    "          const jsonData = pm.response.json();",
                                    "          let value = JSONPath({",
                                    "            json: jsonData,",
                                    "            path: expression,",
                                    "            wrap: false",
                                    "          });",
                                    "          ",
                                    "        ",
                                    "        switch (typeof value) {",
                                    "          case 'object':",
                                    "            value = JSON.stringify(value);",
                                    "            break;",
                                    "          default:",
                                    "            value = String(value);",
                                    "            break;",
                                    "        }",
                                    "      ",
                                    "        pm.variables.set(`user_id`, value);console.log('已设置临时变量【'+ `user_id` + '】，值为【' + value + '】')",
                                    "      } catch(e) {",
                                    "        e.message = '提取变量【user_id】出错：' + e.message;",
                                    "        throw e;",
                                    "      }",
                                    "  "
                                ]
                            }
                        }
                    ],
                    "responseDefinition": {
                        "id": 4183271,
                        "createdAt": "2021-07-29T14:43:37.000Z",
                        "updatedAt": "2021-08-12T16:27:18.000Z",
                        "deletedAt": null,
                        "apiDetailId": 5318056,
                        "name": "成功",
                        "code": 200,
                        "contentType": "json",
                        "jsonSchema": {
                            "type": "object",
                            "properties": {
                                "token": {
                                    "type": "string",
                                    "mock": {
                                        "mock": "@string"
                                    },
                                    "title": "权"
                                },
                                "id": {
                                    "type": "integer",
                                    "title": "用户id"
                                }
                            },
                            "required": [
                                "token",
                                "id"
                            ]
                        },
                        "defaultEnable": true,
                        "projectId": 0,
                        "ordering": 1
                    },
                    "metaInfo": {
                        "httpApiId": 5318056,
                        "httpApiCaseId": 32697822,
                        "httpApiName": "LG0101 账号密码登录",
                        "httpApiPath": "/login",
                        "httpApiMethod": "post",
                        "httpApiCaseName": "登录用户admin"
                    },
                    "type": "http",
                    "protocolProfileBehavior": {
                        "disableUrlEncoding": false
                    }
                },
                {
                    "id": "f3fb7835-72e9-4a35-9a1a-c87c90d0cb5a",
                    "name": "QZ0105 审核测试题(QZ0105审核测试题)",
                    "request": {
                        "url": {
                            "protocol": "http",
                            "port": "8000",
                            "path": [
                                "quizzes",
                                "{{quiz_id}}",
                                "visibility"
                            ],
                            "host": [
                                "127",
                                "0",
                                "0",
                                "1"
                            ],
                            "query": [],
                            "variable": []
                        },
                        "header": [
                            {
                                "key": "token",
                                "value": "{{token}}"
                            },
                            {
                                "key": "User-Agent",
                                "value": "apifox/1.0.0 (https://www.apifox.cn)"
                            },
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "method": "PUT",
                        "body": {
                            "mode": "raw",
                            "raw": "{\n    \"result\": true,\n    \"reason\": \"quis\"\n}"
                        },
                        "type": "http"
                    },
                    "response": [],
                    "event": [],
                    "responseDefinition": {
                        "id": 106182475,
                        "createdAt": "2022-10-06T08:43:19.000Z",
                        "updatedAt": "2022-10-06T08:43:19.000Z",
                        "deletedAt": null,
                        "apiDetailId": 42646298,
                        "name": "成功",
                        "code": 200,
                        "contentType": "json",
                        "jsonSchema": {
                            "type": "object",
                            "properties": {}
                        },
                        "defaultEnable": true,
                        "projectId": 0,
                        "ordering": 1
                    },
                    "metaInfo": {
                        "httpApiId": 42646298,
                        "httpApiCaseId": 49776817,
                        "httpApiName": "QZ0105 审核测试题",
                        "httpApiPath": "/quizzes/{id}/visibility",
                        "httpApiMethod": "put",
                        "httpApiCaseName": "QZ0105审核测试题"
                    },
                    "type": "http",
                    "protocolProfileBehavior": {
                        "disableUrlEncoding": false
                    }
                },
                {
                    "id": "2af0b424-6d94-4f51-a7c3-612fc70acd13",
                    "name": "QZ0101 获取单个测试(QZ0101 获取单个测试)",
                    "request": {
                        "url": {
                            "protocol": "http",
                            "port": "8000",
                            "path": [
                                "quizzes",
                                "{{quiz_id}}"
                            ],
                            "host": [
                                "127",
                                "0",
                                "0",
                                "1"
                            ],
                            "query": [],
                            "variable": []
                        },
                        "header": [
                            {
                                "key": "token",
                                "value": "{{token}}"
                            },
                            {
                                "key": "User-Agent",
                                "value": "apifox/1.0.0 (https://www.apifox.cn)"
                            }
                        ],
                        "method": "GET",
                        "body": {},
                        "type": "http"
                    },
                    "response": [],
                    "event": [],
                    "responseDefinition": {
                        "id": 70047710,
                        "createdAt": "2022-07-15T11:04:02.000Z",
                        "updatedAt": "2022-07-23T07:28:13.000Z",
                        "deletedAt": null,
                        "apiDetailId": 29662407,
                        "name": "成功",
                        "code": 200,
                        "contentType": "json",
                        "jsonSchema": {
                            "x-apifox-overrides": {},
                            "type": "object",
                            "properties": {
                                "quiz": {
                                    "$ref": "#/definitions/13080595",
                                    "x-apifox-overrides": {}
                                }
                            },
                            "x-apifox-refs": {},
                            "x-apifox-orders": [
                                "quiz"
                            ],
                            "required": [
                                "quiz"
                            ]
                        },
                        "defaultEnable": true,
                        "projectId": 0,
                        "ordering": 1
                    },
                    "metaInfo": {
                        "httpApiId": 29662407,
                        "httpApiCaseId": 49776823,
                        "httpApiName": "QZ0101 获取单个测试",
                        "httpApiPath": "/quizzes/{id}",
                        "httpApiMethod": "get",
                        "httpApiCaseName": "QZ0101 获取单个测试"
                    },
                    "type": "http",
                    "protocolProfileBehavior": {
                        "disableUrlEncoding": false
                    }
                },
                {
                    "id": "d465ec51-ad76-4578-ae01-0e99ee02c2d5",
                    "name": "QZ0103 修改单个测试(QZ0103 修改单个测试)",
                    "request": {
                        "url": {
                            "protocol": "http",
                            "port": "8000",
                            "path": [
                                "quizzes",
                                "{{quiz_id}}"
                            ],
                            "host": [
                                "127",
                                "0",
                                "0",
                                "1"
                            ],
                            "query": [],
                            "variable": []
                        },
                        "header": [
                            {
                                "key": "token",
                                "value": "{{token}}"
                            },
                            {
                                "key": "User-Agent",
                                "value": "apifox/1.0.0 (https://www.apifox.cn)"
                            },
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "method": "PUT",
                        "body": {
                            "mode": "raw",
                            "raw": "{\n    \"quiz\": {\n        \"question\": \"酸者部三值出\",\n        \"options\": [\n            \"什取无新联线东产造代平声极切到存却。\",\n            \"去物片对道采各化样委两张厂取技。\",\n            \"产张才回何看元整系温验解想算酸。\",\n            \"车为志提规展海回了带各较者己导科。\",\n            \"度实张据无变把调方极或界设约月系。\"\n        ],\n        \"answer\": 64,\n        \"explanation\": \"选新克导规进主与每白性起精比。分心引小相但义消第比万分权它在。教结素毛工式安却办消权场委展。广织众级热该导百接期音与院意。\",\n        \"voice_source\": \"http://swuce.ua/cnnt\"\n    }\n}"
                        },
                        "type": "http"
                    },
                    "response": [],
                    "event": [],
                    "responseDefinition": {
                        "id": 70048846,
                        "createdAt": "2022-07-15T11:23:50.000Z",
                        "updatedAt": "2022-07-23T08:32:09.000Z",
                        "deletedAt": null,
                        "apiDetailId": 29663120,
                        "name": "成功",
                        "code": 200,
                        "contentType": "json",
                        "jsonSchema": {
                            "type": "object",
                            "properties": {
                                "quiz": {
                                    "$ref": "#/definitions/13080595",
                                    "x-apifox-overrides": {}
                                }
                            },
                            "x-apifox-orders": [
                                "quiz"
                            ],
                            "required": [
                                "quiz"
                            ]
                        },
                        "defaultEnable": true,
                        "projectId": 0,
                        "ordering": 1
                    },
                    "metaInfo": {
                        "httpApiId": 29663120,
                        "httpApiCaseId": 34623802,
                        "httpApiName": "QZ0103 修改单个测试",
                        "httpApiPath": "/quizzes/{id}",
                        "httpApiMethod": "put",
                        "httpApiCaseName": "QZ0103 修改单个测试"
                    },
                    "type": "http",
                    "protocolProfileBehavior": {
                        "disableUrlEncoding": false
                    }
                },
                {
                    "id": "12226479-20ae-44c0-99ed-b8dbce3d419b",
                    "name": "QZ0101 获取单个测试(QZ0101 获取单个测试)",
                    "request": {
                        "url": {
                            "protocol": "http",
                            "port": "8000",
                            "path": [
                                "quizzes",
                                "{{quiz_id}}"
                            ],
                            "host": [
                                "127",
                                "0",
                                "0",
                                "1"
                            ],
                            "query": [],
                            "variable": []
                        },
                        "header": [
                            {
                                "key": "token",
                                "value": "{{token}}"
                            },
                            {
                                "key": "User-Agent",
                                "value": "apifox/1.0.0 (https://www.apifox.cn)"
                            }
                        ],
                        "method": "GET",
                        "body": {},
                        "type": "http"
                    },
                    "response": [],
                    "event": [],
                    "responseDefinition": {
                        "id": 70047710,
                        "createdAt": "2022-07-15T11:04:02.000Z",
                        "updatedAt": "2022-07-23T07:28:13.000Z",
                        "deletedAt": null,
                        "apiDetailId": 29662407,
                        "name": "成功",
                        "code": 200,
                        "contentType": "json",
                        "jsonSchema": {
                            "x-apifox-overrides": {},
                            "type": "object",
                            "properties": {
                                "quiz": {
                                    "$ref": "#/definitions/13080595",
                                    "x-apifox-overrides": {}
                                }
                            },
                            "x-apifox-refs": {},
                            "x-apifox-orders": [
                                "quiz"
                            ],
                            "required": [
                                "quiz"
                            ]
                        },
                        "defaultEnable": true,
                        "projectId": 0,
                        "ordering": 1
                    },
                    "metaInfo": {
                        "httpApiId": 29662407,
                        "httpApiCaseId": 38220543,
                        "httpApiName": "QZ0101 获取单个测试",
                        "httpApiPath": "/quizzes/{id}",
                        "httpApiMethod": "get",
                        "httpApiCaseName": "QZ0101 获取单个测试"
                    },
                    "type": "http",
                    "protocolProfileBehavior": {
                        "disableUrlEncoding": false
                    }
                },
                {
                    "id": "fdd12c11-464c-4ce4-9831-00716f8e8854",
                    "name": "QZ0105 审核测试题(QZ0105审核测试题)",
                    "request": {
                        "url": {
                            "protocol": "http",
                            "port": "8000",
                            "path": [
                                "quizzes",
                                "{{quiz_id}}",
                                "visibility"
                            ],
                            "host": [
                                "127",
                                "0",
                                "0",
                                "1"
                            ],
                            "query": [],
                            "variable": []
                        },
                        "header": [
                            {
                                "key": "token",
                                "value": "{{token}}"
                            },
                            {
                                "key": "User-Agent",
                                "value": "apifox/1.0.0 (https://www.apifox.cn)"
                            },
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "method": "PUT",
                        "body": {
                            "mode": "raw",
                            "raw": "{\n    \"result\": true,\n    \"reason\": \"quis\"\n}"
                        },
                        "type": "http"
                    },
                    "response": [],
                    "event": [],
                    "responseDefinition": {
                        "id": 106182475,
                        "createdAt": "2022-10-06T08:43:19.000Z",
                        "updatedAt": "2022-10-06T08:43:19.000Z",
                        "deletedAt": null,
                        "apiDetailId": 42646298,
                        "name": "成功",
                        "code": 200,
                        "contentType": "json",
                        "jsonSchema": {
                            "type": "object",
                            "properties": {}
                        },
                        "defaultEnable": true,
                        "projectId": 0,
                        "ordering": 1
                    },
                    "metaInfo": {
                        "httpApiId": 42646298,
                        "httpApiCaseId": 49783829,
                        "httpApiName": "QZ0105 审核测试题",
                        "httpApiPath": "/quizzes/{id}/visibility",
                        "httpApiMethod": "put",
                        "httpApiCaseName": "QZ0105审核测试题"
                    },
                    "type": "http",
                    "protocolProfileBehavior": {
                        "disableUrlEncoding": false
                    }
                },
                {
                    "id": "18924d8c-d5a3-4007-a8ab-33430e67658c",
                    "name": "QZ0101 获取单个测试(QZ0101 获取单个测试)",
                    "request": {
                        "url": {
                            "protocol": "http",
                            "port": "8000",
                            "path": [
                                "quizzes",
                                "{{quiz_id}}"
                            ],
                            "host": [
                                "127",
                                "0",
                                "0",
                                "1"
                            ],
                            "query": [],
                            "variable": []
                        },
                        "header": [
                            {
                                "key": "token",
                                "value": "{{token}}"
                            },
                            {
                                "key": "User-Agent",
                                "value": "apifox/1.0.0 (https://www.apifox.cn)"
                            }
                        ],
                        "method": "GET",
                        "body": {},
                        "type": "http"
                    },
                    "response": [],
                    "event": [],
                    "responseDefinition": {
                        "id": 70047710,
                        "createdAt": "2022-07-15T11:04:02.000Z",
                        "updatedAt": "2022-07-23T07:28:13.000Z",
                        "deletedAt": null,
                        "apiDetailId": 29662407,
                        "name": "成功",
                        "code": 200,
                        "contentType": "json",
                        "jsonSchema": {
                            "x-apifox-overrides": {},
                            "type": "object",
                            "properties": {
                                "quiz": {
                                    "$ref": "#/definitions/13080595",
                                    "x-apifox-overrides": {}
                                }
                            },
                            "x-apifox-refs": {},
                            "x-apifox-orders": [
                                "quiz"
                            ],
                            "required": [
                                "quiz"
                            ]
                        },
                        "defaultEnable": true,
                        "projectId": 0,
                        "ordering": 1
                    },
                    "metaInfo": {
                        "httpApiId": 29662407,
                        "httpApiCaseId": 65334137,
                        "httpApiName": "QZ0101 获取单个测试",
                        "httpApiPath": "/quizzes/{id}",
                        "httpApiMethod": "get",
                        "httpApiCaseName": "QZ0101 获取单个测试"
                    },
                    "type": "http",
                    "protocolProfileBehavior": {
                        "disableUrlEncoding": false
                    }
                },
                {
                    "id": "5264ff8e-9db4-402b-8959-d40af2722f49",
                    "name": "QZ0103 修改单个测试(QZ0103 修改单个测试)",
                    "request": {
                        "url": {
                            "protocol": "http",
                            "port": "8000",
                            "path": [
                                "quizzes",
                                "{{quiz_id}}"
                            ],
                            "host": [
                                "127",
                                "0",
                                "0",
                                "1"
                            ],
                            "query": [],
                            "variable": []
                        },
                        "header": [
                            {
                                "key": "token",
                                "value": "{{token}}"
                            },
                            {
                                "key": "User-Agent",
                                "value": "apifox/1.0.0 (https://www.apifox.cn)"
                            },
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "method": "PUT",
                        "body": {
                            "mode": "raw",
                            "raw": "{\r\n    \"quiz\": {\r\n        \"question\": \"深时当行育\",\r\n        \"options\": [\r\n            \"品眼进复队任西常意统把下。\",\r\n            \"全这素什角证西信活除起或。\",\r\n            \"调层率术么品八色图科数具解路己安能题。\",\r\n            \"看国族样给声自级处两商般律发。\"\r\n        ],\r\n        \"answer\": 8,\r\n        \"explanation\": \"反现亲向而段养文等表参例经。设适住种何资用了取流量员今满事相。成区已才议争联而战民立象小始务民。决可体土报经青用保量适变儿并科。级劳流可八圆律支八满族想其表按。近心安风给生拉管求权党会维品车育。\",\r\n        \"voice_source\": \"\"\r\n    }\r\n}"
                        },
                        "type": "http"
                    },
                    "response": [],
                    "event": [],
                    "responseDefinition": {
                        "id": 70048846,
                        "createdAt": "2022-07-15T11:23:50.000Z",
                        "updatedAt": "2022-07-23T08:32:09.000Z",
                        "deletedAt": null,
                        "apiDetailId": 29663120,
                        "name": "成功",
                        "code": 200,
                        "contentType": "json",
                        "jsonSchema": {
                            "type": "object",
                            "properties": {
                                "quiz": {
                                    "$ref": "#/definitions/13080595",
                                    "x-apifox-overrides": {}
                                }
                            },
                            "x-apifox-orders": [
                                "quiz"
                            ],
                            "required": [
                                "quiz"
                            ]
                        },
                        "defaultEnable": true,
                        "projectId": 0,
                        "ordering": 1
                    },
                    "metaInfo": {
                        "httpApiId": 29663120,
                        "httpApiCaseId": 65334227,
                        "httpApiName": "QZ0103 修改单个测试",
                        "httpApiPath": "/quizzes/{id}",
                        "httpApiMethod": "put",
                        "httpApiCaseName": "QZ0103 修改单个测试"
                    },
                    "type": "http",
                    "protocolProfileBehavior": {
                        "disableUrlEncoding": false
                    }
                },
                {
                    "id": "61a2afb1-78bb-4064-939c-fd48bea57697",
                    "name": "QZ0101 获取单个测试(QZ0101 获取单个测试)",
                    "request": {
                        "url": {
                            "protocol": "http",
                            "port": "8000",
                            "path": [
                                "quizzes",
                                "{{quiz_id}}"
                            ],
                            "host": [
                                "127",
                                "0",
                                "0",
                                "1"
                            ],
                            "query": [],
                            "variable": []
                        },
                        "header": [
                            {
                                "key": "token",
                                "value": "{{token}}"
                            },
                            {
                                "key": "User-Agent",
                                "value": "apifox/1.0.0 (https://www.apifox.cn)"
                            }
                        ],
                        "method": "GET",
                        "body": {},
                        "type": "http"
                    },
                    "response": [],
                    "event": [],
                    "responseDefinition": {
                        "id": 70047710,
                        "createdAt": "2022-07-15T11:04:02.000Z",
                        "updatedAt": "2022-07-23T07:28:13.000Z",
                        "deletedAt": null,
                        "apiDetailId": 29662407,
                        "name": "成功",
                        "code": 200,
                        "contentType": "json",
                        "jsonSchema": {
                            "x-apifox-overrides": {},
                            "type": "object",
                            "properties": {
                                "quiz": {
                                    "$ref": "#/definitions/13080595",
                                    "x-apifox-overrides": {}
                                }
                            },
                            "x-apifox-refs": {},
                            "x-apifox-orders": [
                                "quiz"
                            ],
                            "required": [
                                "quiz"
                            ]
                        },
                        "defaultEnable": true,
                        "projectId": 0,
                        "ordering": 1
                    },
                    "metaInfo": {
                        "httpApiId": 29662407,
                        "httpApiCaseId": 49783812,
                        "httpApiName": "QZ0101 获取单个测试",
                        "httpApiPath": "/quizzes/{id}",
                        "httpApiMethod": "get",
                        "httpApiCaseName": "QZ0101 获取单个测试"
                    },
                    "type": "http",
                    "protocolProfileBehavior": {
                        "disableUrlEncoding": false
                    }
                },
                {
                    "id": "03b60e96-8d50-461e-adb6-72e9735ab8b7",
                    "name": "QZ0104 删除单个测试(QZ0104 删除单个测试)",
                    "request": {
                        "url": {
                            "protocol": "http",
                            "port": "8000",
                            "path": [
                                "quizzes",
                                "{{quiz_id}}"
                            ],
                            "host": [
                                "127",
                                "0",
                                "0",
                                "1"
                            ],
                            "query": [],
                            "variable": []
                        },
                        "header": [
                            {
                                "key": "token",
                                "value": "{{token}}"
                            },
                            {
                                "key": "User-Agent",
                                "value": "apifox/1.0.0 (https://www.apifox.cn)"
                            }
                        ],
                        "method": "DELETE",
                        "body": {},
                        "type": "http"
                    },
                    "response": [],
                    "event": [
                        {
                            "listen": "prerequest",
                            "script": {
                                "id": "commonScript.assertion",
                                "type": "text/javascript",
                                "exec": [
                                    "",
                                    " ____string2Number = function(value, errorMsg) {",
                                    "  if(typeof value !== 'string'){",
                                    "    return value;",
                                    "  }",
                                    "  // 转换成数字类型后比较",
                                    "  if (/^\\-?\\d+$/.test(value)) {",
                                    "      return parseInt(value);",
                                    "  } else if (/^\\-?\\d+\\.\\d+$/.test(value)) {",
                                    "      return parseFloat(value);",
                                    "  } else {",
                                    "      throw new Error(errorMsg || '数据类型不匹配')",
                                    "  }",
                                    "}",
                                    "",
                                    " ____formatValues = function(value, stringCompareValue, comparison) {",
                                    "  try{",
                                    "    const isNumberComparisons = ['isBelow', 'isAtMost', 'isAbove', 'isAtLeast'].includes(comparison);",
                                    "    let compareValue;",
                                    "    switch (typeof value) {",
                                    "        case 'string':",
                                    "            if (isNumberComparisons) {",
                                    "                value = ____string2Number(value);",
                                    "                compareValue = ____string2Number(stringCompareValue);",
                                    "            } else {",
                                    "                compareValue = stringCompareValue;",
                                    "            }",
                                    "            break;",
                                    "        case 'object':",
                                    "            if (isNumberComparisons) {",
                                    "                throw new Error('object 类型的值不能使用 ' + comparison + ' 方式比较')",
                                    "            }",
                                    "            try {",
                                    "                compareValue = JSON.parse(stringCompareValue);",
                                    "            } catch (e) {",
                                    "                compareValue = stringCompareValue;",
                                    "            }",
                                    "            break;",
                                    "        case 'boolean':",
                                    "            if (isNumberComparisons) {",
                                    "                throw new Error('boolean 类型的值不能使用 ' + comparison + ' 方式比较')",
                                    "            }",
                                    "            compareValue = stringCompareValue === 'true' ? true : (stringCompareValue === 'false' ? false : stringCompareValue);",
                                    "            break;",
                                    "        case 'number':",
                                    "            if (isNumberComparisons) {",
                                    "              compareValue = ____string2Number(stringCompareValue);",
                                    "            } else {",
                                    "              compareValue = stringCompareValue;",
                                    "              value = '' + value;",
                                    "            }",
                                    "            break;",
                                    "        case 'null':",
                                    "            if (isNumberComparisons) {",
                                    "                throw new Error('null 值不能使用 ' + comparison + ' 方式比较')",
                                    "            }",
                                    "            compareValue = stringCompareValue === 'null' ? null : stringCompareValue;",
                                    "            break;",
                                    "        default:",
                                    "            compareValue = stringCompareValue;",
                                    "            break;",
                                    "    }",
                                    "    return { compareValue, value };",
                                    "  } catch(e) {",
                                    "    console.log(e);",
                                    "    throw e;",
                                    "  }",
                                    "}",
                                    ""
                                ]
                            }
                        },
                        {
                            "listen": "test",
                            "script": {
                                "id": "postProcessors.0.assertion",
                                "type": "text/javascript",
                                "exec": [
                                    "pm.test(pm.variables.replaceIn(`Quiz删除校验`), function() {",
                                    "        ",
                                    "          const expression = pm.variables.replaceIn(`$`);",
                                    "          const JSONPath = require('jsonpath-plus').JSONPath;",
                                    "          let jsonData;",
                                    "          try {",
                                    "            jsonData = pm.response.json();",
                                    "          } catch(e) {",
                                    "            let text = pm.response.text();",
                                    "            // xml 转 json",
                                    "            const xml2js = require('xml2js');",
                                    "            text = text.replace(/^[^<]*/, '').replace(/[^>]*$/, '');",
                                    "            let json;",
                                    "            let xmlParseOptions = {",
                                    "                explicitArray: false,",
                                    "                trim: true,",
                                    "                ignoreAttrs: true,",
                                    "            };",
                                    "            xml2js.parseString(text, xmlParseOptions, function (_, result) {",
                                    "                jsonData = result;",
                                    "            });",
                                    "          }",
                                    "          const value = JSONPath({",
                                    "            json: jsonData,",
                                    "            path: expression,",
                                    "            wrap: false",
                                    "          });",
                                    "          ",
                                    "        const formattedValues = ____formatValues(value, pm.variables.replaceIn(`{}`), 'equal');",
                                    "        pm.expect(formattedValues.value).to.eql(formattedValues.compareValue);",
                                    "      });"
                                ]
                            }
                        }
                    ],
                    "responseDefinition": {
                        "id": 70048940,
                        "createdAt": "2022-07-15T11:25:39.000Z",
                        "updatedAt": "2022-07-15T11:25:39.000Z",
                        "deletedAt": null,
                        "apiDetailId": 29663170,
                        "name": "成功",
                        "code": 200,
                        "contentType": "json",
                        "jsonSchema": {
                            "type": "object",
                            "properties": {}
                        },
                        "defaultEnable": true,
                        "projectId": 0,
                        "ordering": 1
                    },
                    "metaInfo": {
                        "httpApiId": 29663170,
                        "httpApiCaseId": 34623803,
                        "httpApiName": "QZ0104 删除单个测试",
                        "httpApiPath": "/quizzes/{id}",
                        "httpApiMethod": "delete",
                        "httpApiCaseName": "QZ0104 删除单个测试"
                    },
                    "type": "http",
                    "protocolProfileBehavior": {
                        "disableUrlEncoding": false
                    }
                },
                {
                    "id": "03745244-a56d-47ad-9233-98be5efee01d",
                    "name": "LG0101 账号密码登录(登录用户user_test)",
                    "request": {
                        "url": {
                            "protocol": "http",
                            "port": "8000",
                            "path": [
                                "login"
                            ],
                            "host": [
                                "127",
                                "0",
                                "0",
                                "1"
                            ],
                            "query": [],
                            "variable": []
                        },
                        "header": [
                            {
                                "key": "token",
                                "value": "{{token}}"
                            },
                            {
                                "key": "User-Agent",
                                "value": "apifox/1.0.0 (https://www.apifox.cn)"
                            },
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "method": "POST",
                        "body": {
                            "mode": "raw",
                            "raw": "{\r\n    \"username\": \"user_test\",\r\n    \"password\": \"123456\"\r\n}"
                        },
                        "type": "http"
                    },
                    "response": [],
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "id": "postProcessors.0.extractor",
                                "type": "text/javascript",
                                "exec": [
                                    "",
                                    "      try{",
                                    "        ",
                                    "          const expression = pm.variables.replaceIn(`$.token`);",
                                    "          const JSONPath = require('jsonpath-plus').JSONPath;",
                                    "          const jsonData = pm.response.json();",
                                    "          let value = JSONPath({",
                                    "            json: jsonData,",
                                    "            path: expression,",
                                    "            wrap: false",
                                    "          });",
                                    "          ",
                                    "        ",
                                    "        switch (typeof value) {",
                                    "          case 'object':",
                                    "            value = JSON.stringify(value);",
                                    "            break;",
                                    "          default:",
                                    "            value = String(value);",
                                    "            break;",
                                    "        }",
                                    "      ",
                                    "        pm.environment.set(`token`, value);console.log('已设置环境变量【'+ `token` + '】，值为【' + value + '】')",
                                    "      } catch(e) {",
                                    "        e.message = '提取变量【token】出错：' + e.message;",
                                    "        throw e;",
                                    "      }",
                                    "  "
                                ]
                            }
                        }
                    ],
                    "responseDefinition": {
                        "id": 4183271,
                        "createdAt": "2021-07-29T14:43:37.000Z",
                        "updatedAt": "2021-08-12T16:27:18.000Z",
                        "deletedAt": null,
                        "apiDetailId": 5318056,
                        "name": "成功",
                        "code": 200,
                        "contentType": "json",
                        "jsonSchema": {
                            "type": "object",
                            "properties": {
                                "token": {
                                    "type": "string",
                                    "mock": {
                                        "mock": "@string"
                                    },
                                    "title": "权"
                                },
                                "id": {
                                    "type": "integer",
                                    "title": "用户id"
                                }
                            },
                            "required": [
                                "token",
                                "id"
                            ]
                        },
                        "defaultEnable": true,
                        "projectId": 0,
                        "ordering": 1
                    },
                    "metaInfo": {
                        "httpApiId": 5318056,
                        "httpApiCaseId": 65361572,
                        "httpApiName": "LG0101 账号密码登录",
                        "httpApiPath": "/login",
                        "httpApiMethod": "post",
                        "httpApiCaseName": "登录用户user_test"
                    },
                    "type": "http",
                    "protocolProfileBehavior": {
                        "disableUrlEncoding": false
                    }
                },
                {
                    "id": "f8151302-3f2a-4c89-b623-3de1c1d85768",
                    "name": "QZ0201 搜索测试题(QZ0201 搜索测试题)",
                    "request": {
                        "url": {
                            "protocol": "http",
                            "port": "8000",
                            "path": [
                                "quizzes"
                            ],
                            "host": [
                                "127",
                                "0",
                                "0",
                                "1"
                            ],
                            "query": [
                                {
                                    "key": "keywords",
                                    "value": ""
                                }
                            ],
                            "variable": []
                        },
                        "header": [
                            {
                                "key": "token",
                                "value": "{{token}}"
                            },
                            {
                                "key": "User-Agent",
                                "value": "apifox/1.0.0 (https://www.apifox.cn)"
                            }
                        ],
                        "method": "GET",
                        "body": {},
                        "type": "http"
                    },
                    "response": [],
                    "event": [
                        {
                            "listen": "prerequest",
                            "script": {
                                "id": "commonScript.assertion",
                                "type": "text/javascript",
                                "exec": [
                                    "",
                                    " ____string2Number = function(value, errorMsg) {",
                                    "  if(typeof value !== 'string'){",
                                    "    return value;",
                                    "  }",
                                    "  // 转换成数字类型后比较",
                                    "  if (/^\\-?\\d+$/.test(value)) {",
                                    "      return parseInt(value);",
                                    "  } else if (/^\\-?\\d+\\.\\d+$/.test(value)) {",
                                    "      return parseFloat(value);",
                                    "  } else {",
                                    "      throw new Error(errorMsg || '数据类型不匹配')",
                                    "  }",
                                    "}",
                                    "",
                                    " ____formatValues = function(value, stringCompareValue, comparison) {",
                                    "  try{",
                                    "    const isNumberComparisons = ['isBelow', 'isAtMost', 'isAbove', 'isAtLeast'].includes(comparison);",
                                    "    let compareValue;",
                                    "    switch (typeof value) {",
                                    "        case 'string':",
                                    "            if (isNumberComparisons) {",
                                    "                value = ____string2Number(value);",
                                    "                compareValue = ____string2Number(stringCompareValue);",
                                    "            } else {",
                                    "                compareValue = stringCompareValue;",
                                    "            }",
                                    "            break;",
                                    "        case 'object':",
                                    "            if (isNumberComparisons) {",
                                    "                throw new Error('object 类型的值不能使用 ' + comparison + ' 方式比较')",
                                    "            }",
                                    "            try {",
                                    "                compareValue = JSON.parse(stringCompareValue);",
                                    "            } catch (e) {",
                                    "                compareValue = stringCompareValue;",
                                    "            }",
                                    "            break;",
                                    "        case 'boolean':",
                                    "            if (isNumberComparisons) {",
                                    "                throw new Error('boolean 类型的值不能使用 ' + comparison + ' 方式比较')",
                                    "            }",
                                    "            compareValue = stringCompareValue === 'true' ? true : (stringCompareValue === 'false' ? false : stringCompareValue);",
                                    "            break;",
                                    "        case 'number':",
                                    "            if (isNumberComparisons) {",
                                    "              compareValue = ____string2Number(stringCompareValue);",
                                    "            } else {",
                                    "              compareValue = stringCompareValue;",
                                    "              value = '' + value;",
                                    "            }",
                                    "            break;",
                                    "        case 'null':",
                                    "            if (isNumberComparisons) {",
                                    "                throw new Error('null 值不能使用 ' + comparison + ' 方式比较')",
                                    "            }",
                                    "            compareValue = stringCompareValue === 'null' ? null : stringCompareValue;",
                                    "            break;",
                                    "        default:",
                                    "            compareValue = stringCompareValue;",
                                    "            break;",
                                    "    }",
                                    "    return { compareValue, value };",
                                    "  } catch(e) {",
                                    "    console.log(e);",
                                    "    throw e;",
                                    "  }",
                                    "}",
                                    ""
                                ]
                            }
                        },
                        {
                            "listen": "test",
                            "script": {
                                "id": "postProcessors.0.extractor",
                                "type": "text/javascript",
                                "exec": [
                                    "",
                                    "      try{",
                                    "        ",
                                    "          const expression = pm.variables.replaceIn(`$.result.length`);",
                                    "          const JSONPath = require('jsonpath-plus').JSONPath;",
                                    "          const jsonData = pm.response.json();",
                                    "          let value = JSONPath({",
                                    "            json: jsonData,",
                                    "            path: expression,",
                                    "            wrap: false",
                                    "          });",
                                    "          ",
                                    "        ",
                                    "        switch (typeof value) {",
                                    "          case 'object':",
                                    "            value = JSON.stringify(value);",
                                    "            break;",
                                    "          default:",
                                    "            value = String(value);",
                                    "            break;",
                                    "        }",
                                    "      ",
                                    "        pm.environment.set(`num_later`, value);console.log('已设置环境变量【'+ `num_later` + '】，值为【' + value + '】')",
                                    "      } catch(e) {",
                                    "        e.message = '提取变量【num_later】出错：' + e.message;",
                                    "        throw e;",
                                    "      }",
                                    "  "
                                ]
                            }
                        },
                        {
                            "listen": "test",
                            "script": {
                                "id": "postProcessors.1.customScript",
                                "type": "text/javascript",
                                "exec": [
                                    "var num_pre = Number(pm.environment.get('num_pre'));",
                                    "",
                                    "pm.environment.set('num_pre', Number(num_pre)-1);"
                                ]
                            }
                        },
                        {
                            "listen": "test",
                            "script": {
                                "id": "postProcessors.2.assertion",
                                "type": "text/javascript",
                                "exec": [
                                    "pm.test(pm.variables.replaceIn(`quiz数量校验`), function() {",
                                    "        ",
                                    "          const expression = pm.variables.replaceIn(`num_pre`);",
                                    "          const value = pm.environment.get(expression)",
                                    "      ",
                                    "        const formattedValues = ____formatValues(value, pm.variables.replaceIn(`{{num_later}}`), 'equal');",
                                    "        pm.expect(formattedValues.value).to.eql(formattedValues.compareValue);",
                                    "      });"
                                ]
                            }
                        }
                    ],
                    "responseDefinition": {
                        "id": 70049266,
                        "createdAt": "2022-07-15T11:28:36.000Z",
                        "updatedAt": "2022-07-15T11:29:54.000Z",
                        "deletedAt": null,
                        "apiDetailId": 29663288,
                        "name": "成功",
                        "code": 200,
                        "contentType": "json",
                        "jsonSchema": {
                            "type": "object",
                            "properties": {
                                "result": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/13080595"
                                    }
                                }
                            },
                            "x-apifox-orders": [
                                "result"
                            ],
                            "required": [
                                "result"
                            ]
                        },
                        "defaultEnable": true,
                        "projectId": 0,
                        "ordering": 1
                    },
                    "metaInfo": {
                        "httpApiId": 29663288,
                        "httpApiCaseId": 37913169,
                        "httpApiName": "QZ0201 搜索测试题",
                        "httpApiPath": "/quizzes",
                        "httpApiMethod": "get",
                        "httpApiCaseName": "QZ0201 搜索测试题"
                    },
                    "type": "http",
                    "protocolProfileBehavior": {
                        "disableUrlEncoding": false
                    }
                },
                {
                    "id": "40c8679a-0cb1-4dcc-b00a-a813cd7951d2",
                    "name": "QZ0102 增加单个测试(QZ0102 增加单个测试)",
                    "request": {
                        "url": {
                            "protocol": "http",
                            "port": "8000",
                            "path": [
                                "quizzes"
                            ],
                            "host": [
                                "127",
                                "0",
                                "0",
                                "1"
                            ],
                            "query": [],
                            "variable": []
                        },
                        "header": [
                            {
                                "key": "token",
                                "value": "{{token}}"
                            },
                            {
                                "key": "User-Agent",
                                "value": "apifox/1.0.0 (https://www.apifox.cn)"
                            },
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "method": "POST",
                        "body": {
                            "mode": "raw",
                            "raw": "{\n    \"question\": \"实论术影化使\",\n    \"options\": [\n        \"商参百设动深重温义同府事。\",\n        \"况新将治法题往长断拉也要天本西变年。\",\n        \"放般约只段文料难江把当五规据改加候。\"\n    ],\n    \"answer\": 68,\n    \"explanation\": \"保为题日而能参装确才养阶验。目除式称准要以史计为图百。并太了备多素向时路江方由东水才之高。克好状算化切育张要酸构线传反设。省己院都质见青验状从工很代。\",\n    \"voice_source\": \"http://demjhs.lc/tiwepkmjl\"\n}"
                        },
                        "type": "http"
                    },
                    "response": [],
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "id": "postProcessors.0.assertion",
                                "type": "text/javascript",
                                "exec": [
                                    "pm.test(pm.variables.replaceIn(`Quiz添加结果检查`), function() {",
                                    "        ",
                                    "          const expression = pm.variables.replaceIn(`$`);",
                                    "          const JSONPath = require('jsonpath-plus').JSONPath;",
                                    "          let jsonData;",
                                    "          try {",
                                    "            jsonData = pm.response.json();",
                                    "          } catch(e) {",
                                    "            let text = pm.response.text();",
                                    "            // xml 转 json",
                                    "            const xml2js = require('xml2js');",
                                    "            text = text.replace(/^[^<]*/, '').replace(/[^>]*$/, '');",
                                    "            let json;",
                                    "            let xmlParseOptions = {",
                                    "                explicitArray: false,",
                                    "                trim: true,",
                                    "                ignoreAttrs: true,",
                                    "            };",
                                    "            xml2js.parseString(text, xmlParseOptions, function (_, result) {",
                                    "                jsonData = result;",
                                    "            });",
                                    "          }",
                                    "          const value = JSONPath({",
                                    "            json: jsonData,",
                                    "            path: expression,",
                                    "            wrap: false",
                                    "          });",
                                    "          ",
                                    "        ",
                                    "        pm.expectWithKey({key:'$',value:value}).to.exist",
                                    "      });"
                                ]
                            }
                        },
                        {
                            "listen": "test",
                            "script": {
                                "id": "postProcessors.1.extractor",
                                "type": "text/javascript",
                                "exec": [
                                    "",
                                    "      try{",
                                    "        ",
                                    "          const expression = pm.variables.replaceIn(`$.quiz.id`);",
                                    "          const JSONPath = require('jsonpath-plus').JSONPath;",
                                    "          const jsonData = pm.response.json();",
                                    "          let value = JSONPath({",
                                    "            json: jsonData,",
                                    "            path: expression,",
                                    "            wrap: false",
                                    "          });",
                                    "          ",
                                    "        ",
                                    "        switch (typeof value) {",
                                    "          case 'object':",
                                    "            value = JSON.stringify(value);",
                                    "            break;",
                                    "          default:",
                                    "            value = String(value);",
                                    "            break;",
                                    "        }",
                                    "      ",
                                    "        pm.environment.set(`quiz_id`, value);console.log('已设置环境变量【'+ `quiz_id` + '】，值为【' + value + '】')",
                                    "      } catch(e) {",
                                    "        e.message = '提取变量【quiz_id】出错：' + e.message;",
                                    "        throw e;",
                                    "      }",
                                    "  "
                                ]
                            }
                        }
                    ],
                    "responseDefinition": {
                        "id": 70048663,
                        "createdAt": "2022-07-15T11:22:03.000Z",
                        "updatedAt": "2022-07-23T08:30:31.000Z",
                        "deletedAt": null,
                        "apiDetailId": 29662986,
                        "name": "成功",
                        "code": 200,
                        "contentType": "json",
                        "jsonSchema": {
                            "x-apifox-overrides": {},
                            "type": "object",
                            "x-apifox-refs": {},
                            "properties": {
                                "quiz": {
                                    "$ref": "#/definitions/13080595",
                                    "x-apifox-overrides": {}
                                }
                            },
                            "required": [
                                "quiz"
                            ],
                            "x-apifox-orders": [
                                "quiz"
                            ]
                        },
                        "defaultEnable": true,
                        "projectId": 0,
                        "ordering": 1
                    },
                    "metaInfo": {
                        "httpApiId": 29662986,
                        "httpApiCaseId": 34623804,
                        "httpApiName": "QZ0102 增加单个测试",
                        "httpApiPath": "/quizzes",
                        "httpApiMethod": "post",
                        "httpApiCaseName": "QZ0102 增加单个测试"
                    },
                    "type": "http",
                    "protocolProfileBehavior": {
                        "disableUrlEncoding": false
                    }
                },
                {
                    "id": "b21b0ce9-f281-4f0e-8585-f9244777ce96",
                    "name": "QZ0102 增加单个测试(QZ0102 增加单个测试)",
                    "request": {
                        "url": {
                            "protocol": "http",
                            "port": "8000",
                            "path": [
                                "quizzes"
                            ],
                            "host": [
                                "127",
                                "0",
                                "0",
                                "1"
                            ],
                            "query": [],
                            "variable": []
                        },
                        "header": [
                            {
                                "key": "token",
                                "value": "{{token}}"
                            },
                            {
                                "key": "User-Agent",
                                "value": "apifox/1.0.0 (https://www.apifox.cn)"
                            },
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "method": "POST",
                        "body": {
                            "mode": "raw",
                            "raw": "{\n    \"question\": \"斗设他放从政比\",\n    \"options\": [\n        \"又亲计圆市过物四明三斯气。\",\n        \"往红明资需总被例在老门同合。\",\n        \"集许质型素来电立非备话是。\"\n    ],\n    \"answer\": 29,\n    \"explanation\": \"资文矿深消精林心消保府动。织见它所离强直联称定业以相观飞响农。品养算传农千热造水六八导。出半适世院队合从工太部真整开。现反验称亲月且率期能期步阶如一律。声题国龙地本色队思光置教机各准。\",\n    \"voice_source\": \"\"\n}"
                        },
                        "type": "http"
                    },
                    "response": [],
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "id": "postProcessors.0.assertion",
                                "type": "text/javascript",
                                "exec": [
                                    "pm.test(pm.variables.replaceIn(`Quiz添加结果检查`), function() {",
                                    "        ",
                                    "          const expression = pm.variables.replaceIn(`$`);",
                                    "          const JSONPath = require('jsonpath-plus').JSONPath;",
                                    "          let jsonData;",
                                    "          try {",
                                    "            jsonData = pm.response.json();",
                                    "          } catch(e) {",
                                    "            let text = pm.response.text();",
                                    "            // xml 转 json",
                                    "            const xml2js = require('xml2js');",
                                    "            text = text.replace(/^[^<]*/, '').replace(/[^>]*$/, '');",
                                    "            let json;",
                                    "            let xmlParseOptions = {",
                                    "                explicitArray: false,",
                                    "                trim: true,",
                                    "                ignoreAttrs: true,",
                                    "            };",
                                    "            xml2js.parseString(text, xmlParseOptions, function (_, result) {",
                                    "                jsonData = result;",
                                    "            });",
                                    "          }",
                                    "          const value = JSONPath({",
                                    "            json: jsonData,",
                                    "            path: expression,",
                                    "            wrap: false",
                                    "          });",
                                    "          ",
                                    "        ",
                                    "        pm.expectWithKey({key:'$',value:value}).to.exist",
                                    "      });"
                                ]
                            }
                        }
                    ],
                    "responseDefinition": {
                        "id": 70048663,
                        "createdAt": "2022-07-15T11:22:03.000Z",
                        "updatedAt": "2022-07-23T08:30:31.000Z",
                        "deletedAt": null,
                        "apiDetailId": 29662986,
                        "name": "成功",
                        "code": 200,
                        "contentType": "json",
                        "jsonSchema": {
                            "x-apifox-overrides": {},
                            "type": "object",
                            "x-apifox-refs": {},
                            "properties": {
                                "quiz": {
                                    "$ref": "#/definitions/13080595",
                                    "x-apifox-overrides": {}
                                }
                            },
                            "required": [
                                "quiz"
                            ],
                            "x-apifox-orders": [
                                "quiz"
                            ]
                        },
                        "defaultEnable": true,
                        "projectId": 0,
                        "ordering": 1
                    },
                    "metaInfo": {
                        "httpApiId": 29662986,
                        "httpApiCaseId": 34623805,
                        "httpApiName": "QZ0102 增加单个测试",
                        "httpApiPath": "/quizzes",
                        "httpApiMethod": "post",
                        "httpApiCaseName": "QZ0102 增加单个测试"
                    },
                    "type": "http",
                    "protocolProfileBehavior": {
                        "disableUrlEncoding": false
                    }
                },
                {
                    "id": "d15f2816-b9e2-4677-a6b9-02fd76d05da0",
                    "name": "QZ0102 增加单个测试(QZ0102 增加单个测试)",
                    "request": {
                        "url": {
                            "protocol": "http",
                            "port": "8000",
                            "path": [
                                "quizzes"
                            ],
                            "host": [
                                "127",
                                "0",
                                "0",
                                "1"
                            ],
                            "query": [],
                            "variable": []
                        },
                        "header": [
                            {
                                "key": "token",
                                "value": "{{token}}"
                            },
                            {
                                "key": "User-Agent",
                                "value": "apifox/1.0.0 (https://www.apifox.cn)"
                            },
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "method": "POST",
                        "body": {
                            "mode": "raw",
                            "raw": "{\n    \"question\": \"新角外林\",\n    \"options\": [\n        \"三好界意习们如现克群备海那两。\",\n        \"公影照完方里极界他行件育种。\",\n        \"局老组记式深有多可形增实花。\",\n        \"全机温作合看意点府今专型值可采。\",\n        \"况选海议图明严开价主克中米。\"\n    ],\n    \"answer\": 98,\n    \"explanation\": \"处识且会性商员着将市每常又。最据石提派科求务式流军得学风种周难个。书治再管可思气白信能心本老时。并者委布江品选处常京青周才。\",\n    \"voice_source\": \"http://wqwtph.nu/nrmlhc\"\n}"
                        },
                        "type": "http"
                    },
                    "response": [],
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "id": "postProcessors.0.assertion",
                                "type": "text/javascript",
                                "exec": [
                                    "pm.test(pm.variables.replaceIn(`Quiz添加结果检查`), function() {",
                                    "        ",
                                    "          const expression = pm.variables.replaceIn(`$`);",
                                    "          const JSONPath = require('jsonpath-plus').JSONPath;",
                                    "          let jsonData;",
                                    "          try {",
                                    "            jsonData = pm.response.json();",
                                    "          } catch(e) {",
                                    "            let text = pm.response.text();",
                                    "            // xml 转 json",
                                    "            const xml2js = require('xml2js');",
                                    "            text = text.replace(/^[^<]*/, '').replace(/[^>]*$/, '');",
                                    "            let json;",
                                    "            let xmlParseOptions = {",
                                    "                explicitArray: false,",
                                    "                trim: true,",
                                    "                ignoreAttrs: true,",
                                    "            };",
                                    "            xml2js.parseString(text, xmlParseOptions, function (_, result) {",
                                    "                jsonData = result;",
                                    "            });",
                                    "          }",
                                    "          const value = JSONPath({",
                                    "            json: jsonData,",
                                    "            path: expression,",
                                    "            wrap: false",
                                    "          });",
                                    "          ",
                                    "        ",
                                    "        pm.expectWithKey({key:'$',value:value}).to.exist",
                                    "      });"
                                ]
                            }
                        }
                    ],
                    "responseDefinition": {
                        "id": 70048663,
                        "createdAt": "2022-07-15T11:22:03.000Z",
                        "updatedAt": "2022-07-23T08:30:31.000Z",
                        "deletedAt": null,
                        "apiDetailId": 29662986,
                        "name": "成功",
                        "code": 200,
                        "contentType": "json",
                        "jsonSchema": {
                            "x-apifox-overrides": {},
                            "type": "object",
                            "x-apifox-refs": {},
                            "properties": {
                                "quiz": {
                                    "$ref": "#/definitions/13080595",
                                    "x-apifox-overrides": {}
                                }
                            },
                            "required": [
                                "quiz"
                            ],
                            "x-apifox-orders": [
                                "quiz"
                            ]
                        },
                        "defaultEnable": true,
                        "projectId": 0,
                        "ordering": 1
                    },
                    "metaInfo": {
                        "httpApiId": 29662986,
                        "httpApiCaseId": 34623806,
                        "httpApiName": "QZ0102 增加单个测试",
                        "httpApiPath": "/quizzes",
                        "httpApiMethod": "post",
                        "httpApiCaseName": "QZ0102 增加单个测试"
                    },
                    "type": "http",
                    "protocolProfileBehavior": {
                        "disableUrlEncoding": false
                    }
                },
                {
                    "id": "4d91e082-c328-4fcc-a365-5a179493bc86",
                    "name": "LG0101 账号密码登录(登录用户admin)",
                    "request": {
                        "url": {
                            "protocol": "http",
                            "port": "8000",
                            "path": [
                                "login"
                            ],
                            "host": [
                                "127",
                                "0",
                                "0",
                                "1"
                            ],
                            "query": [],
                            "variable": []
                        },
                        "header": [
                            {
                                "key": "token",
                                "value": "{{token}}"
                            },
                            {
                                "key": "User-Agent",
                                "value": "apifox/1.0.0 (https://www.apifox.cn)"
                            },
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "method": "POST",
                        "body": {
                            "mode": "raw",
                            "raw": "{\r\n    \"username\": \"admin\",\r\n    \"password\": \"testtest123\"\r\n}"
                        },
                        "type": "http"
                    },
                    "response": [],
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "id": "postProcessors.0.extractor",
                                "type": "text/javascript",
                                "exec": [
                                    "",
                                    "      try{",
                                    "        ",
                                    "          const expression = pm.variables.replaceIn(`$.token`);",
                                    "          const JSONPath = require('jsonpath-plus').JSONPath;",
                                    "          const jsonData = pm.response.json();",
                                    "          let value = JSONPath({",
                                    "            json: jsonData,",
                                    "            path: expression,",
                                    "            wrap: false",
                                    "          });",
                                    "          ",
                                    "        ",
                                    "        switch (typeof value) {",
                                    "          case 'object':",
                                    "            value = JSON.stringify(value);",
                                    "            break;",
                                    "          default:",
                                    "            value = String(value);",
                                    "            break;",
                                    "        }",
                                    "      ",
                                    "        pm.environment.set(`token`, value);console.log('已设置环境变量【'+ `token` + '】，值为【' + value + '】')",
                                    "      } catch(e) {",
                                    "        e.message = '提取变量【token】出错：' + e.message;",
                                    "        throw e;",
                                    "      }",
                                    "  "
                                ]
                            }
                        },
                        {
                            "listen": "test",
                            "script": {
                                "id": "postProcessors.1.extractor",
                                "type": "text/javascript",
                                "exec": [
                                    "",
                                    "      try{",
                                    "        ",
                                    "          const expression = pm.variables.replaceIn(`$.id`);",
                                    "          const JSONPath = require('jsonpath-plus').JSONPath;",
                                    "          const jsonData = pm.response.json();",
                                    "          let value = JSONPath({",
                                    "            json: jsonData,",
                                    "            path: expression,",
                                    "            wrap: false",
                                    "          });",
                                    "          ",
                                    "        ",
                                    "        switch (typeof value) {",
                                    "          case 'object':",
                                    "            value = JSON.stringify(value);",
                                    "            break;",
                                    "          default:",
                                    "            value = String(value);",
                                    "            break;",
                                    "        }",
                                    "      ",
                                    "        pm.variables.set(`user_id`, value);console.log('已设置临时变量【'+ `user_id` + '】，值为【' + value + '】')",
                                    "      } catch(e) {",
                                    "        e.message = '提取变量【user_id】出错：' + e.message;",
                                    "        throw e;",
                                    "      }",
                                    "  "
                                ]
                            }
                        }
                    ],
                    "responseDefinition": {
                        "id": 4183271,
                        "createdAt": "2021-07-29T14:43:37.000Z",
                        "updatedAt": "2021-08-12T16:27:18.000Z",
                        "deletedAt": null,
                        "apiDetailId": 5318056,
                        "name": "成功",
                        "code": 200,
                        "contentType": "json",
                        "jsonSchema": {
                            "type": "object",
                            "properties": {
                                "token": {
                                    "type": "string",
                                    "mock": {
                                        "mock": "@string"
                                    },
                                    "title": "权"
                                },
                                "id": {
                                    "type": "integer",
                                    "title": "用户id"
                                }
                            },
                            "required": [
                                "token",
                                "id"
                            ]
                        },
                        "defaultEnable": true,
                        "projectId": 0,
                        "ordering": 1
                    },
                    "metaInfo": {
                        "httpApiId": 5318056,
                        "httpApiCaseId": 32697822,
                        "httpApiName": "LG0101 账号密码登录",
                        "httpApiPath": "/login",
                        "httpApiMethod": "post",
                        "httpApiCaseName": "登录用户admin"
                    },
                    "type": "http",
                    "protocolProfileBehavior": {
                        "disableUrlEncoding": false
                    }
                },
                {
                    "id": "61d98b18-af13-44c0-a600-234438eaceeb",
                    "name": "QZ0105 审核测试题(QZ0105审核测试题)",
                    "request": {
                        "url": {
                            "protocol": "http",
                            "port": "8000",
                            "path": [
                                "quizzes",
                                "{{quiz_id}}",
                                "visibility"
                            ],
                            "host": [
                                "127",
                                "0",
                                "0",
                                "1"
                            ],
                            "query": [],
                            "variable": []
                        },
                        "header": [
                            {
                                "key": "token",
                                "value": "{{token}}"
                            },
                            {
                                "key": "User-Agent",
                                "value": "apifox/1.0.0 (https://www.apifox.cn)"
                            },
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "method": "PUT",
                        "body": {
                            "mode": "raw",
                            "raw": "{\n    \"result\": true,\n    \"reason\": \"quis\"\n}"
                        },
                        "type": "http"
                    },
                    "response": [],
                    "event": [],
                    "responseDefinition": {
                        "id": 106182475,
                        "createdAt": "2022-10-06T08:43:19.000Z",
                        "updatedAt": "2022-10-06T08:43:19.000Z",
                        "deletedAt": null,
                        "apiDetailId": 42646298,
                        "name": "成功",
                        "code": 200,
                        "contentType": "json",
                        "jsonSchema": {
                            "type": "object",
                            "properties": {}
                        },
                        "defaultEnable": true,
                        "projectId": 0,
                        "ordering": 1
                    },
                    "metaInfo": {
                        "httpApiId": 42646298,
                        "httpApiCaseId": 65358730,
                        "httpApiName": "QZ0105 审核测试题",
                        "httpApiPath": "/quizzes/{id}/visibility",
                        "httpApiMethod": "put",
                        "httpApiCaseName": "QZ0105审核测试题"
                    },
                    "type": "http",
                    "protocolProfileBehavior": {
                        "disableUrlEncoding": false
                    }
                },
                {
                    "id": "4bd3a6ac-9b73-45eb-9d6c-03b438bd4b48",
                    "name": "LG0101 账号密码登录(登录用户user_test)",
                    "request": {
                        "url": {
                            "protocol": "http",
                            "port": "8000",
                            "path": [
                                "login"
                            ],
                            "host": [
                                "127",
                                "0",
                                "0",
                                "1"
                            ],
                            "query": [],
                            "variable": []
                        },
                        "header": [
                            {
                                "key": "token",
                                "value": "{{token}}"
                            },
                            {
                                "key": "User-Agent",
                                "value": "apifox/1.0.0 (https://www.apifox.cn)"
                            },
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "method": "POST",
                        "body": {
                            "mode": "raw",
                            "raw": "{\r\n    \"username\": \"user_test\",\r\n    \"password\": \"123456\"\r\n}"
                        },
                        "type": "http"
                    },
                    "response": [],
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "id": "postProcessors.0.extractor",
                                "type": "text/javascript",
                                "exec": [
                                    "",
                                    "      try{",
                                    "        ",
                                    "          const expression = pm.variables.replaceIn(`$.token`);",
                                    "          const JSONPath = require('jsonpath-plus').JSONPath;",
                                    "          const jsonData = pm.response.json();",
                                    "          let value = JSONPath({",
                                    "            json: jsonData,",
                                    "            path: expression,",
                                    "            wrap: false",
                                    "          });",
                                    "          ",
                                    "        ",
                                    "        switch (typeof value) {",
                                    "          case 'object':",
                                    "            value = JSON.stringify(value);",
                                    "            break;",
                                    "          default:",
                                    "            value = String(value);",
                                    "            break;",
                                    "        }",
                                    "      ",
                                    "        pm.environment.set(`token`, value);console.log('已设置环境变量【'+ `token` + '】，值为【' + value + '】')",
                                    "      } catch(e) {",
                                    "        e.message = '提取变量【token】出错：' + e.message;",
                                    "        throw e;",
                                    "      }",
                                    "  "
                                ]
                            }
                        }
                    ],
                    "responseDefinition": {
                        "id": 4183271,
                        "createdAt": "2021-07-29T14:43:37.000Z",
                        "updatedAt": "2021-08-12T16:27:18.000Z",
                        "deletedAt": null,
                        "apiDetailId": 5318056,
                        "name": "成功",
                        "code": 200,
                        "contentType": "json",
                        "jsonSchema": {
                            "type": "object",
                            "properties": {
                                "token": {
                                    "type": "string",
                                    "mock": {
                                        "mock": "@string"
                                    },
                                    "title": "权"
                                },
                                "id": {
                                    "type": "integer",
                                    "title": "用户id"
                                }
                            },
                            "required": [
                                "token",
                                "id"
                            ]
                        },
                        "defaultEnable": true,
                        "projectId": 0,
                        "ordering": 1
                    },
                    "metaInfo": {
                        "httpApiId": 5318056,
                        "httpApiCaseId": 65361575,
                        "httpApiName": "LG0101 账号密码登录",
                        "httpApiPath": "/login",
                        "httpApiMethod": "post",
                        "httpApiCaseName": "登录用户user_test"
                    },
                    "type": "http",
                    "protocolProfileBehavior": {
                        "disableUrlEncoding": false
                    }
                },
                {
                    "id": "42bbda93-ddaa-4f3f-ad93-018f4ddac491",
                    "name": "QZ0201 搜索测试题(QZ0201 搜索测试题)",
                    "request": {
                        "url": {
                            "protocol": "http",
                            "port": "8000",
                            "path": [
                                "quizzes"
                            ],
                            "host": [
                                "127",
                                "0",
                                "0",
                                "1"
                            ],
                            "query": [
                                {
                                    "key": "keywords",
                                    "value": ""
                                }
                            ],
                            "variable": []
                        },
                        "header": [
                            {
                                "key": "token",
                                "value": "{{token}}"
                            },
                            {
                                "key": "User-Agent",
                                "value": "apifox/1.0.0 (https://www.apifox.cn)"
                            }
                        ],
                        "method": "GET",
                        "body": {},
                        "type": "http"
                    },
                    "response": [],
                    "event": [
                        {
                            "listen": "prerequest",
                            "script": {
                                "id": "commonScript.assertion",
                                "type": "text/javascript",
                                "exec": [
                                    "",
                                    " ____string2Number = function(value, errorMsg) {",
                                    "  if(typeof value !== 'string'){",
                                    "    return value;",
                                    "  }",
                                    "  // 转换成数字类型后比较",
                                    "  if (/^\\-?\\d+$/.test(value)) {",
                                    "      return parseInt(value);",
                                    "  } else if (/^\\-?\\d+\\.\\d+$/.test(value)) {",
                                    "      return parseFloat(value);",
                                    "  } else {",
                                    "      throw new Error(errorMsg || '数据类型不匹配')",
                                    "  }",
                                    "}",
                                    "",
                                    " ____formatValues = function(value, stringCompareValue, comparison) {",
                                    "  try{",
                                    "    const isNumberComparisons = ['isBelow', 'isAtMost', 'isAbove', 'isAtLeast'].includes(comparison);",
                                    "    let compareValue;",
                                    "    switch (typeof value) {",
                                    "        case 'string':",
                                    "            if (isNumberComparisons) {",
                                    "                value = ____string2Number(value);",
                                    "                compareValue = ____string2Number(stringCompareValue);",
                                    "            } else {",
                                    "                compareValue = stringCompareValue;",
                                    "            }",
                                    "            break;",
                                    "        case 'object':",
                                    "            if (isNumberComparisons) {",
                                    "                throw new Error('object 类型的值不能使用 ' + comparison + ' 方式比较')",
                                    "            }",
                                    "            try {",
                                    "                compareValue = JSON.parse(stringCompareValue);",
                                    "            } catch (e) {",
                                    "                compareValue = stringCompareValue;",
                                    "            }",
                                    "            break;",
                                    "        case 'boolean':",
                                    "            if (isNumberComparisons) {",
                                    "                throw new Error('boolean 类型的值不能使用 ' + comparison + ' 方式比较')",
                                    "            }",
                                    "            compareValue = stringCompareValue === 'true' ? true : (stringCompareValue === 'false' ? false : stringCompareValue);",
                                    "            break;",
                                    "        case 'number':",
                                    "            if (isNumberComparisons) {",
                                    "              compareValue = ____string2Number(stringCompareValue);",
                                    "            } else {",
                                    "              compareValue = stringCompareValue;",
                                    "              value = '' + value;",
                                    "            }",
                                    "            break;",
                                    "        case 'null':",
                                    "            if (isNumberComparisons) {",
                                    "                throw new Error('null 值不能使用 ' + comparison + ' 方式比较')",
                                    "            }",
                                    "            compareValue = stringCompareValue === 'null' ? null : stringCompareValue;",
                                    "            break;",
                                    "        default:",
                                    "            compareValue = stringCompareValue;",
                                    "            break;",
                                    "    }",
                                    "    return { compareValue, value };",
                                    "  } catch(e) {",
                                    "    console.log(e);",
                                    "    throw e;",
                                    "  }",
                                    "}",
                                    ""
                                ]
                            }
                        },
                        {
                            "listen": "test",
                            "script": {
                                "id": "postProcessors.0.extractor",
                                "type": "text/javascript",
                                "exec": [
                                    "",
                                    "      try{",
                                    "        ",
                                    "          const expression = pm.variables.replaceIn(`$.result.length`);",
                                    "          const JSONPath = require('jsonpath-plus').JSONPath;",
                                    "          const jsonData = pm.response.json();",
                                    "          let value = JSONPath({",
                                    "            json: jsonData,",
                                    "            path: expression,",
                                    "            wrap: false",
                                    "          });",
                                    "          ",
                                    "        ",
                                    "        switch (typeof value) {",
                                    "          case 'object':",
                                    "            value = JSON.stringify(value);",
                                    "            break;",
                                    "          default:",
                                    "            value = String(value);",
                                    "            break;",
                                    "        }",
                                    "      ",
                                    "        pm.environment.set(`num_later`, value);console.log('已设置环境变量【'+ `num_later` + '】，值为【' + value + '】')",
                                    "      } catch(e) {",
                                    "        e.message = '提取变量【num_later】出错：' + e.message;",
                                    "        throw e;",
                                    "      }",
                                    "  "
                                ]
                            }
                        },
                        {
                            "listen": "test",
                            "script": {
                                "id": "postProcessors.1.customScript",
                                "type": "text/javascript",
                                "exec": [
                                    "var num_pre = Number(pm.environment.get('num_pre'));",
                                    "",
                                    "pm.environment.set('num_pre', Number(num_pre)+3);"
                                ]
                            }
                        },
                        {
                            "listen": "test",
                            "script": {
                                "id": "postProcessors.2.assertion",
                                "type": "text/javascript",
                                "exec": [
                                    "pm.test(pm.variables.replaceIn(`quiz数量校验`), function() {",
                                    "        ",
                                    "          const expression = pm.variables.replaceIn(`num_pre`);",
                                    "          const value = pm.variables.get(expression)",
                                    "      ",
                                    "        const formattedValues = ____formatValues(value, pm.variables.replaceIn(`{{num_later}}`), 'equal');",
                                    "        pm.expect(formattedValues.value).to.eql(formattedValues.compareValue);",
                                    "      });"
                                ]
                            }
                        }
                    ],
                    "responseDefinition": {
                        "id": 70049266,
                        "createdAt": "2022-07-15T11:28:36.000Z",
                        "updatedAt": "2022-07-15T11:29:54.000Z",
                        "deletedAt": null,
                        "apiDetailId": 29663288,
                        "name": "成功",
                        "code": 200,
                        "contentType": "json",
                        "jsonSchema": {
                            "type": "object",
                            "properties": {
                                "result": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/13080595"
                                    }
                                }
                            },
                            "x-apifox-orders": [
                                "result"
                            ],
                            "required": [
                                "result"
                            ]
                        },
                        "defaultEnable": true,
                        "projectId": 0,
                        "ordering": 1
                    },
                    "metaInfo": {
                        "httpApiId": 29663288,
                        "httpApiCaseId": 34623807,
                        "httpApiName": "QZ0201 搜索测试题",
                        "httpApiPath": "/quizzes",
                        "httpApiMethod": "get",
                        "httpApiCaseName": "QZ0201 搜索测试题"
                    },
                    "type": "http",
                    "protocolProfileBehavior": {
                        "disableUrlEncoding": false
                    }
                },
                {
                    "id": "e106969c-1fa6-4c1f-a58c-233b20c33af8",
                    "name": "QZ0202 随机测试题(QZ0202 随机测试题)",
                    "request": {
                        "url": {
                            "protocol": "http",
                            "port": "8000",
                            "path": [
                                "quizzes",
                                "random"
                            ],
                            "host": [
                                "127",
                                "0",
                                "0",
                                "1"
                            ],
                            "query": [],
                            "variable": []
                        },
                        "header": [
                            {
                                "key": "token",
                                "value": "{{token}}"
                            },
                            {
                                "key": "User-Agent",
                                "value": "apifox/1.0.0 (https://www.apifox.cn)"
                            }
                        ],
                        "method": "GET",
                        "body": {},
                        "type": "http"
                    },
                    "response": [],
                    "event": [],
                    "responseDefinition": {
                        "id": 70049339,
                        "createdAt": "2022-07-15T11:30:51.000Z",
                        "updatedAt": "2022-07-23T08:32:52.000Z",
                        "deletedAt": null,
                        "apiDetailId": 29663329,
                        "name": "成功",
                        "code": 200,
                        "contentType": "json",
                        "jsonSchema": {
                            "x-apifox-overrides": {},
                            "type": "object",
                            "properties": {
                                "quiz": {
                                    "$ref": "#/definitions/13080595",
                                    "x-apifox-overrides": {}
                                }
                            },
                            "x-apifox-refs": {},
                            "x-apifox-orders": [
                                "quiz"
                            ],
                            "required": [
                                "quiz"
                            ]
                        },
                        "defaultEnable": true,
                        "projectId": 0,
                        "ordering": 1
                    },
                    "metaInfo": {
                        "httpApiId": 29663329,
                        "httpApiCaseId": 34644618,
                        "httpApiName": "QZ0202 随机测试题",
                        "httpApiPath": "/quizzes/random",
                        "httpApiMethod": "get",
                        "httpApiCaseName": "QZ0202 随机测试题"
                    },
                    "type": "http",
                    "protocolProfileBehavior": {
                        "disableUrlEncoding": false
                    }
                }
            ],
            "name": "QZ模块理想状况"
        }
    ],
    "info": {
        "name": "QZ模块理想状况"
    },
    "dataSchemas": {
        "1097305": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "title": "user的id",
                    "mock": {
                        "mock": "@integer(10000)"
                    }
                },
                "username": {
                    "type": "string",
                    "title": "用户名",
                    "mock": {
                        "mock": "@cname"
                    }
                },
                "nickname": {
                    "type": "string",
                    "title": "昵称",
                    "mock": {
                        "mock": "@cname"
                    }
                },
                "email": {
                    "type": "string",
                    "title": "邮箱",
                    "mock": {
                        "mock": "@email"
                    }
                },
                "telephone": {
                    "type": "string",
                    "title": "电话"
                },
                "birthday": {
                    "type": "string",
                    "title": "生日",
                    "mock": {
                        "mock": "@date('yyyy-MM-dd')"
                    }
                },
                "avatar": {
                    "type": "string",
                    "title": "头像",
                    "description": "头像的url地址",
                    "mock": {
                        "mock": "@image"
                    }
                },
                "is_admin": {
                    "type": "boolean",
                    "title": "是否管理员",
                    "mock": {
                        "mock": "@boolean"
                    }
                },
                "county": {
                    "type": "string",
                    "title": "县区",
                    "description": "用户所在县区",
                    "mock": {
                        "mock": "@county"
                    }
                },
                "town": {
                    "type": "string",
                    "title": "乡镇",
                    "description": "用户所在乡镇",
                    "mock": {
                        "mock": "@county"
                    }
                },
                "registration_time": {
                    "type": "string",
                    "mock": {
                        "mock": "@datetime('yyyy-MM-dd HH:mm:ss')"
                    },
                    "title": "注册时间"
                },
                "login_time": {
                    "type": "string",
                    "mock": {
                        "mock": "@datetime('yyyy-MM-dd HH:mm:ss')"
                    },
                    "title": "登录时间"
                },
                "wechat": {
                    "type": "boolean",
                    "title": "绑定微信"
                }
            },
            "required": [
                "id",
                "email",
                "username",
                "is_admin",
                "avatar",
                "registration_time",
                "login_time",
                "nickname",
                "telephone",
                "birthday",
                "county",
                "town",
                "wechat"
            ],
            "title": "user_all"
        },
        "13080595": {
            "type": "object",
            "properties": {
                "question": {
                    "type": "string",
                    "title": "问题",
                    "mock": {
                        "mock": "@ctitle"
                    }
                },
                "options": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "mock": {
                            "mock": "@csentence"
                        }
                    },
                    "title": "选项"
                },
                "explanation": {
                    "type": "string",
                    "title": "答案解析",
                    "mock": {
                        "mock": "@cparagraph"
                    }
                },
                "answer": {
                    "type": "integer",
                    "title": "答案序号",
                    "description": "options数组下标"
                },
                "id": {
                    "type": "integer"
                },
                "visibility": {
                    "type": "boolean",
                    "title": ""
                },
                "author": {
                    "$ref": "#/definitions/1097305"
                },
                "voice_source": {
                    "type": "string",
                    "mock": {
                        "mock": "@url(\"http\")"
                    },
                    "title": "播报语音链接"
                }
            },
            "x-apifox-orders": [
                "question",
                "options",
                "answer",
                "explanation",
                "id",
                "author",
                "visibility",
                "voice_source"
            ],
            "required": [
                "question",
                "answer",
                "options",
                "explanation",
                "id",
                "visibility",
                "voice_source",
                "author"
            ],
            "title": "quiz_all"
        }
    },
    "environment": {
        "id": 510825,
        "name": "测试环境",
        "baseUrls": {
            "default": "http://127.0.0.1:8000"
        },
        "variable": {
            "id": "8eebf040-658a-4521-8453-8949fff891c3",
            "name": "测试环境",
            "values": [
                {
                    "type": "any",
                    "value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZSI6ImFkbWluIiwiaWQiOjEsImV4cCI6MTY3MzYyMTE5Ny43NTQ0MDZ9.MHNHB64RcBZaqCgCmE0ODkiP48tl-XwBn9h-Lp6L3Tg",
                    "key": "token"
                },
                {
                    "type": "any",
                    "value": "6",
                    "key": "quiz_id"
                }
            ]
        },
        "type": "normal",
        "parameter": {
            "header": [],
            "query": [],
            "body": [],
            "cookie": []
        }
    },
    "globals": {
        "variable": {
            "id": "72b9347d-afed-4ea4-a929-89d97845fd5d",
            "values": []
        },
        "parameter": {
            "header": [],
            "query": [],
            "body": [],
            "cookie": []
        }
    },
    "isServerBuild": false
}